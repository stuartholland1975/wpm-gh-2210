{"version":3,"sources":["components/home/letter-m.png","components/home/letter-p.png","components/home/letter-w.png","components/grids/components/CellRenderers.js","components/navigation/PageTitle.js","components/navigation/NavigationDrawer.js","cache.js","components/home/WpmLogo.js","components/home/Home.js","api-calls/queries/misc.js","functions/formattingFunctions.js","components/projects/project-processing/images/ProjectImages.js","api-calls/queries/items.js","components/grids/components/GridQtyFilter.js","components/grids/grids/ProjectItemsGrid.js","components/projects/project-processing/items/ProjectItemsButtons.js","components/projects/project-processing/items/ProjectItems.js","api-calls/queries/locations.js","components/grids/grids/ProjectLocationsGrid.js","api-calls/mutations/project-mutations.js","components/forms/components/validation.js","api-calls/queries/projects.js","components/forms/locations/CreateProjectLocationForm.js","components/projects/project-processing/locations/CreateProjectLocation.js","components/projects/project-processing/locations/DeleteProjectLocation.js","components/forms/components/SelectItemType.js","components/forms/components/SelectRateset.js","components/forms/validation.js","components/forms/items/AddItemsToLocationForm.js","components/projects/project-processing/locations/AddItemsToLocation.js","components/forms/components/SelectImageType.js","components/forms/components/MultipleImagePreview.js","components/forms/images/UploadLocationImageForm.js","components/projects/project-processing/locations/UploadLocationImage.js","components/projects/project-processing/locations/ProjectLocationsButtons.js","components/projects/project-processing/locations/ProjectLocations.js","components/projects/project-processing/ProjectProcessingButtons.js","components/projects/project-processing/ProjectStats.js","components/projects/project-processing/ProjectProcessing.js","components/grids/components/DateEditor.js","components/grids/components/QtyCompleteEditor.js","components/grids/components/SelectSupervisor.js","components/grids/grids/ProjectProgressGrid.js","components/projects/project-processing/locations/ProjectProgress.js","components/grids/grids/ProjectWorksheetsGrid.js","components/projects/project-processing/ProjectWorksheets.js","api-calls/queries/applications.js","components/grids/grids/ProjectApplicationsGrid.js","components/grids/grids/ProjectLocationsAvailableForApplicationGrid.js","components/grids/grids/ProjectItemsAvailableForApplicationGrid.js","components/grids/grids/ProjectWorksheetsAvailableForApplicationGrid.js","components/projects/project-processing/applications/ProjectApplications.js","components/grids/components/Hyperlink.js","components/grids/grids/ProjectDocumentsGrid.js","components/forms/components/TransferList.js","components/forms/documents/UpdateProjectGlobalDocuments.js","components/projects/project-processing/documents/UpdateGlobalDocuments.js","components/projects/project-processing/documents/ProjectDocumentButtons.js","components/projects/project-processing/documents/ProjectDocuments.js","components/projects/project-processing/workbooks/ProjectWorkbookButtons.js","components/projects/project-processing/workbooks/ProjectWorkbooks.js","components/reports/components/ReportHeader.js","components/reports/components/DataItem.js","components/reports/components/DataColumn.js","components/projects/project-processing/workbooks/project-workbook/ProjectSummarySection.js","components/reports/components/PageTitle.js","components/reports/components/PageContent.js","components/projects/project-processing/workbooks/project-workbook/ProjectHeaderPage.js","components/reports/components/TableComponents.js","components/reports/components/SignatureBar.js","components/projects/project-processing/workbooks/project-workbook/ProjectLocationPage.js","components/projects/project-processing/workbooks/project-workbook/ProjectWorkbook.js","components/projects/project-processing/ProjectProcessingRoutes.js","components/grids/grids/ProjectHeaderGrid.js","components/projects/ProjectHeaders.js","test-components/ComponentTests.js","api-calls/queries/dashboard.js","components/grids/grids/AreaValuesGrid.js","components/charts/AreaValuesChart.js","components/charts/WorkCompleteByPeriodArea.js","components/grids/grids/PeriodValuesGrid.js","components/grids/grids/ApplicationValuesGrid.js","components/charts/ApplicationValuesChart.js","components/dashboard/Dashboard.js","components/forms/projects/CreateProjectHeaderForm.js","components/admin/projects/CreateProjectHeader.js","components/admin/projects/DeleteProjectHeader.js","components/forms/projects/EditProjectHeaderForm.js","components/admin/projects/EditProjectHeader.js","components/admin/projects/ProjectAdminButtons.js","components/admin/projects/ProjectAdmin.js","components/forms/documents/UploadGlobalDocumentForm.js","components/admin/documents/UploadGlobalDocument.js","components/admin/documents/DeleteGlobalDocuments.js","components/admin/documents/DocumentAdminButtons.js","components/grids/grids/GlobalDocumentsGrid.js","components/admin/documents/DocumentAdmin.js","components/grids/grids/ImportProjectDetailGrid.js","components/admin/projects/ImportProjectDetails.js","api-calls/mutations/application-mutations.js","components/admin/applications/CloseCurrentApplication.js","components/admin/applications/ReOpenClosedApplication.js","components/admin/applications/DownloadSubmissionData.js","components/admin/applications/SubmitApplication.js","components/admin/applications/ApplicationAdminButtons.js","components/grids/grids/ApplicationsGrid.js","components/admin/applications/ApplicationAdmin.js","components/grids/grids/PeriodsGrid.js","components/admin/periods/PeriodAdminButtons.js","components/admin/periods/PeriodAdmin.js","components/admin/AdminRoutes.js","components/grids/grids/ProjectsAvailableForApplication.js","components/applications/Applications.js","App.js","dev/index.js","reportWebVitals.js","theme.js","index.js","dev/useInitial.js"],"names":["GridButton","props","path","navigate","useNavigate","sx","borderRadius","border","m","color","onClick","pathname","PageTitle","text","routeMatch","useLocation","startsWith","Box","component","position","top","background","mt","textAlign","p","processingItems","icon","fontSize","adminItems","subMenu","infoItems","enquiryItems","openedMixin","theme","width","transition","transitions","create","easing","sharp","duration","enteringScreen","overflowX","closedMixin","leavingScreen","spacing","breakpoints","up","DrawerHeader","styled","shouldForwardProp","prop","open","height","justifyContent","display","alignItems","padding","Drawer","MuiDrawer","flexShrink","whiteSpace","boxSizing","NavigationDrawer","children","React","useState","setOpen","adminOpen","setAdminOpen","enquiriesOpen","setEnquiriesOpen","handleDrawerOpen","CssBaseline","variant","IconButton","edge","disableTouchRipple","src","LetterW","alt","LetterP","LetterM","Divider","List","map","item","ListItem","divider","button","mb","ListItemIcon","ListItemText","primary","Collapse","in","timeout","unmountOnExit","dense","disablePadding","disableGutters","ml","mr","cache","InMemoryCache","typePolicies","Query","fields","gridSelections","read","gridSelectionsVar","selectedWorksheets","selectedWorksheetsVar","toggleComplete","toggleCompleteVar","mutationApi","mutationApiVar","toggleModal","dashboardSelections","dashboardSelectionsVar","gridSelectionsInitialValue","selectedOrder","selectedLocation","selectedItem","selectedApplication","selectedDocument","selectedPeriod","worksheetsValue","makeVar","selectedArea","data","WpmLogo","style","margin","Home","useEffect","gc","fontWeight","GET_ALL_AREAS","gql","GET_ALL_WORKTYPES","GET_ALL_ORDERHEADER_STATUSES","GET_PROJECT_WORKSHEETS","GET_ALL_SUPERVISORS","GET_CURRENT_PERIOD","GET_ORDER_IMAGES","GET_ITEM_TYPES","GET_RATESET_HEADERS","GET_RATESET_PRICES","GET_IMAGE_TYPES","GET_PROJECT_DOCUMENTS","GET_PROJECT_WORKBOOK_DETAILS","GET_GLOBAL_DOCUMENTS","GET_PERIODS_WITH_VALUES","formatNumberGridNoDecimals","number","numeral","value","format","formatNumberGridTwoDecimals","formatNumberNoDecimals","formatNumberTwoDecimals","formatDate","date","converted","DateTime","fromISO","isDateTime","setLocale","toLocaleString","DATE_SHORT","camelCaseToText","str","replace","c","i","toUpperCase","ProjectImages","id","useParams","useQuery","variables","Number","fetchPolicy","loading","images","imageDetails","nodes","original","process","headerImageFile","thumbnail","originalHeight","description","worksheetReference","longName","exifDate","dateTakenManual","marginTop","length","items","thumbnailPosition","event","window","target","currentSrc","lazyLoad","showThumbnails","className","GET_PROJECT_ITEMS","GET_PROJECT_ITEM_NUMBERS","GridQtyFilter","setValue","Paper","bottom","left","right","elevation","BottomNavigation","backgroundColor","borderTopStyle","borderWidth","onChange","newValue","showLabels","BottomNavigationAction","label","ProjectItemsGrid","gridRef","useRef","rowData","setRowData","onCompleted","orderdetailWithValues","columnDefs","useMemo","headerName","field","sort","maxWidth","cellStyle","flex","type","valueFormatter","params","defaultColDef","filter","sortable","resizable","onSelectionChanged","useCallback","selectedRow","current","api","getSelectedRows","onFilterChanged","isExternalFilterPresent","doesExternalFilterPass","node","complete","CircularProgress","animateRows","rowSelection","ref","enableCellChangeFlash","pagination","paginationPageSize","ProjectItemsButtons","Grid","container","columnSpacing","columns","xs","Button","startIcon","ProjectItems","GET_PROJECT_LOCATIONS","GET_INCOMPLETE_LOCATION_ITEMS","GET_SINGLE_LOCATION","ProjectLocationsGrid","sitelocationWithValues","hide","checkboxSelection","valueGetter","itemCount","itemsComplete","orderValue","valueComplete","valueApplied","suppressCellFocus","suppressRowClickSelection","CREATE_PROJECT_HEADER","EDIT_PROJECT_HEADER","DELETE_PROJECT_HEADER","CREATE_BULK_WORKSHEETS","CREATE_BULK_LOCATIONS","DELETE_MANY_LOCATIONS","ADD_BULK_ITEMS_TO_LOCATION","CALCULATE_ITEM_VALUE","ADD_BULK_IMAGES_TO_LOCATION","UPLOAD_DOCUMENTS","DELETE_GLOBAL_DOCUMENTS","UPDATE_PROJECT_GLOBAL_DOCUMENTS","ADD_ITEMS_TO_APPLICATION","IMPORT_ORDER_DETAILS","useYupValidationResolver","validationSchema","validate","abortEarly","values","errors","inner","reduce","allErrors","currentError","message","GET_ALL_PROJECT_SUMMARIES","GET_ALL_PROJECT_NUMBERS","GET_SINGLE_PROJECT_HEADER","VALIDATE_PROJECT_IMPORT_DATA","CreateProjectLocationForm","hideModal","addLocationButtonRef","useApolloClient","selectedProject","console","log","useForm","defaultValues","location","reference","mode","watch","register","handleSubmit","reset","control","setFocus","formState","useFieldArray","name","append","remove","watchReference","useMutation","update","result","locationData","readQuery","query","newLocations","sitelocationCreateBulkLocations","sitelocations","sitelocationWithValueById","updatedProject","writeQuery","createProjectLocation","onSubmit","orderheaderId","input","DialogContent","index","Fragment","TextField","fullWidth","onBlur","focus","DialogActions","disabled","CreateProjectLocation","useReactiveVar","useModal","Dialog","onClose","DialogTitle","flexGrow","showModal","DeleteProjectLocation","confirm","useConfirm","refetchQueries","awaitRefetchQueries","deleteProjectLocations","total","num","locations","title","titleProps","confirmationText","cancellationButtonProps","confirmationButtonProps","autoFocus","allowClose","then","catch","SelectItemType","itemTypes","setItemTypes","render","Autocomplete","openOnFocus","autoSelect","autoHighlight","size","options","disableClearable","getOptionLabel","option","typeShort","_","onOpen","renderInput","SelectRateset","getActivities","activitiesLoading","activityCodes","ratesetOpen","setRatesetOpen","__typename","rateset","setRateset","activityCodeOpen","setActivityCodeOpen","ratesetLoading","ratesetHeaders","handleRatesetChange","defaultValue","isOptionEqualToValue","activitycode","activityCode","activityDescription","projectItemSchema","yup","shape","orderNumber","required","projectTitle","areaId","worktypeId","orderStatusId","of","itemNumber","itemTypeId","packNumber","qtyOrdered","ratesetPriceId","valueBaseMaterials","AddItemsToLocationForm","itemNumbers","setItemNumbers","setActivityCodes","resolver","addItemButtonRef","itemNumbersLoading","orderdetails","x","parseFloat","useLazyQuery","ratesetPrices","getValues","updatedLocation","mnCreateOrderdetail","orderheaderWithValue","projectData","sitelocationWithValue","createLocationItems","calculateItemValue","rowSpacing","Math","max","priceId","materialsValue","r","bigFloat","getValue","InputProps","readOnly","thisItemNumber","totalValue","itemValue","tot","submissionData","sitelocationId","content","contentProps","locationId","AddItemsToLocation","multipleSelections","fullScreen","textTransform","SelectImageType","fieldName","imageTypes","MultipleImagePreview","imageFiles","setImages","preview","fileReaders","isCancel","promises","file","Promise","resolve","reject","fileReader","FileReader","push","onload","e","onabort","Error","onerror","readAsDataURL","image","all","reason","forEach","readyState","abort","ImageList","cols","gap","idx","ImageListItem","srcSet","maxHeight","ImageListItemBar","subtitle","defaultDate","now","toISODate","imageMimeType","UploadLocationImageForm","addImageButtonRef","submitButtonRef","setImageFiles","setDisabled","useToggle","togglePreview","useCounter","min","counter","inc","dec","resetCounter","set","notes","uploadImage","getExifData","exif","exifr","parse","gps","orientation","prepareApiData","exifData","exifGps","imageTypeId","createdAt","DateTimeOriginal","prepareImagePreview","imageFile","files","imageInfo","imageData","match","alert","imageList","_obj","updatedImageList","sortedImageList","a","b","accept","multiline","prevState","removeEntry","borderStyle","pl","pr","error","UploadLocationImage","ProjectLocationsButtons","ProjectLocations","ProjectProcessingButtons","Item","other","bgcolor","ProjectStats","flexWrap","Typography","substring","statusDescription","area","orderValueLabour","orderValueMaterials","orderValueOther","orderValueTotal","orderValueTotalComplete","orderValueTotalApplied","orderValueTotalBoq","orderValueTotalVarn","locationCount","locationsComplete","documentCount","imageCount","ProjectProcessing","forwardRef","inputRef","lastRowDate","currentPeriod","weekEndingDate","select","useImperativeHandle","qtyOs","useAlert","onChangeHandler","onKeyPressListener","key","numberOnly","nativeEvent","preventDefault","cellStartedEdit","onKeyPress","prevSupervisor","lastRowSupervisor","supervisor","displayName","ProjectProgressGrid","batchRef","uuidv4","supervisorData","editable","cellEditor","QtyCompleteEditor","valueParser","colId","suppressKeyboardEvent","editing","SelectSupervisor","cellEditorParams","supervisors","getRowNode","rowIndex","DateEditor","periods","split","reverse","join","qtyDone","valueOs","submitWorksheets","prepareData","dateComplete","qtyComplete","supervisorId","find","orderdetailId","periodNumberId","batchId","unitPayableTotal","dataCheck","updatedItem","supervisorExists","hasOwnProperty","dateExists","handleSubmitData","submissionValue","amount","worksheets","orderId","handleSaveData","updatedItems","checkPromises","checkedData","isDataComplete","includes","cleansedData","stopEditing","domLayout","singleClickEdit","onFirstDataRendered","startEditingCell","colKey","ProjectProgress","ProjectWorksheetsGrid","worksheetWithValues","Date","toLocaleDateString","ProjectWorksheets","GET_PROJECT_APPLICATION_DETAILS","GET_PROJECT_ITEMS_AVAILABLE_FOR_APPLICATION","GET_APPLICATION_HEADERS","GET_PROJECTS_AVAILABLE_FOR_APPLICATION","ProjectApplicationsGrid","applicationSummaryOrderheaderWithCumulativeValues","rowClassRules","applicationCurrent","ProjectLocationsAvailableForApplicationGrid","setItemData","allItems","headerCheckboxSelection","f","some","onGridReady","setPinnedBottomRowData","itemsAvailable","val","valueAvailable","pinnedBottomRowData","getRowStyle","rowPinned","ProjectItemsAvailableForApplicationGrid","setWorksheetData","allWorksheets","prevRowData","usePrevious","selectedNodes","getSelectedNodes","newRows","md","every","fd","allSelected","forEachNode","setSelected","createPinnedRowData","getRowId","overlayNoRowsTemplate","ProjectWorksheetsAvailableForApplicationGrid","styles","columnContainer","flexDirection","ProjectApplications","setLocationData","itemData","worksheetData","setAllItems","setAllWorksheets","wpmGraphqlGetLocationsAvailableForApplication","wpmGraphqlGetItemsAvailableForApplication","obj","worksheetsAvailable","wpmGraphqlGetWorksheetsAvailableForApplication","refetch","updateApplication","apiData","Set","Hyperlink","Link","href","headerDocumentFile","ProjectDocumentsGrid","global","cellRenderer","HyperLink","not","indexOf","intersection","TransferList","initial","checked","setChecked","setLeft","setRight","leftChecked","rightChecked","handleToggle","currentIndex","newChecked","splice","numberOfChecked","handleToggleAll","customList","Card","CardHeader","px","py","avatar","Checkbox","indeterminate","inputProps","subheader","overflow","role","labelId","tabIndex","disableRipple","direction","my","concat","filterByReference","arr1","arr2","el","element","UpdateProjectGlobalDocuments","setOptions","selected","documents","updateProjectDocuments","additions","documentId","deletions","UpdateGlobalDocuments","ProjectDocumentButtons","ProjectDocuments","orderheaderDocuments","document","ProjectWorkbookButtons","ProjectWorkbooks","StyleSheet","header","marginBottom","paddingBottom","borderBottom","fontFamily","Font","family","ReportHeader","fixed","dataRow","DataItem","DataColumn","wrap","Object","entries","ProjectSummarySection","orderheaderWithValueById","workType","averageItemValue","averageLocationValue","descriptiveData","projectNumber","projectStatus","projectOrderValue","projectVariationsValue","textDecoration","PageContent","today","ProjectHeaderPage","pageNumber","totalPages","BORDER_COLOR","BORDER_BOTTOM_COLOR","BORDER_STYLE","tableColHeader","borderColor","borderBottomColor","tableCell","paddingTop","tableColumn","TableColumn","keys","toString","DataTable","row","SignatureBar","ProjectLocationPage","locationReference","locationValue","sitelocationById","comments","ProjectWorkbookReport","ProjectWorkbook","setProjectData","orderheader","ProjectProcessingRoutes","useRoutes","exact","ProjectHeaderGrid","orderheaderWithValues","numerator","denominator","isNaN","cellRendererParams","setColumnDefs","ProjectHeaders","ComponentTests","componentRef","GET_DASHBOARD_DATA","AreaValuesGrid","orderCount","remainingValue","AreaValuesChart","barOptions","series","xKey","yKey","yName","stacked","axes","enabled","WorkCompleteByPeriodArea","chartRef","legend","PeriodValuesGrid","north","south","central","admin","test","misc","period","ApplicationValuesGrid","application","ApplicationValuesChart","Dashboard","areas","areaWithValues","periodAreas","workCompleteByAreaPeriodTables","fromEntries","applicationAreas","workAppliedByAreaAndApplications","CreateProjectHeaderForm","client","areaOptions","setAreaOptions","areasOpen","setAreasOpen","worktypeOptions","setWorktypeOptions","worktypesOpen","setWorktypesOpen","orderStatusOpen","setOrderStatusOpen","orderStatusOptions","setOrderStatusOptions","projectHeaderSchema","notOneOf","startDate","endDate","issuedDate","getAreaOptions","areasLoading","worktypes","getWorktypeOptions","worktypesLoading","orderheaderStatuses","getOrderheaderStatuses","orderStatusLoading","createProjectHeader","InputLabelProps","shrink","maxRows","CreateProjectHeader","DeleteProjectHeader","deleteProject","EditProjectHeaderForm","editProjectHeader","patch","minRows","EditProjectHeader","ProjectAdminButtons","ProjectAdmin","UploadGlobalDocumentForm","uploadDocuments","undefined","UploadGlobalDocument","DeleteGlobalDocuments","selectedDocuments","deleteDocuments","DocumentAdminButtons","GlobalDocumentsGrid","aggregates","distinctCount","DocumentAdmin","ImportProjectDetailGrid","importData","editType","ImportProjectDetails","setImportData","refs","setRefs","setItems","activities","setActivities","dataValid","setDataValid","validateProjectImportData","isDataValid","validateImportData","submitImportData","pt","pb","reader","wb","sheets","SheetNames","rows","utils","sheet_to_json","Sheets","readAsArrayBuffer","handleImport","references","codes","rawData","REOPEN_CLOSED_APPLICATION","AUTO_INCREMENT_APPLICATION","SUBMIT_APPLICATION","findCurrentApplication","app","CloseCurrentApplication","apps","autoCloseCurrentApplication","applicationSummaryWithCumulativeValues","closeApp","currentApp","latestApp","o","applicationNumber","applicationReference","ReOpenClosedApplication","isSelected","isCurrent","isSubmitted","applicationSubmitted","reopen","appToOpen","downloadSubmissionData","applicationHeader","projects","orderheaders","bookData","workbook","book_new","book_append_sheet","json_to_sheet","writeFile","application_reference","allDetailsWorkbook","SubmitApplication","isValid","isOpen","applicationOpen","submitApp","postSubmission","submitApplication","submittedApplicationByApplicationId","appNumber","err","ApplicationAdminButtons","ApplicationsGrid","headerClass","ApplicationAdmin","notifyOnNetworkStatusChange","PeriodsGrid","closed","PeriodAdminButtons","PeriodAdmin","periodWithValues","AdminRoutes","ProjectsAvailableForApplication","Applications","availableProjects","setAvailableProjects","headersLoading","availableProjectsLoading","wpmGraphqlGetOrdersAvailableForApplication","App","ComponentPreviews","lazy","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","palette","main","secondary","dataTable","action","contrastText","light","delete","dark","navigation","cancel","info","contrasting","submit","print","default","components","MuiButton","styleOverrides","root","textDecorationLine","cursor","defaultProps","MuiTextField","MuiList","MuiMenuItem","MuiTable","MuiAppBar","typography","ReactDOM","createRoot","getElementById","positions","MIDDLE","persistCache","storage","LocalStorageWrapper","localStorage","ApolloClient","link","ApolloLink","from","onError","graphQLErrors","networkError","createUploadLink","uri","StrictMode","ApolloProvider","ThemeProvider","useInitialHook","defaultOptions","template","AlertTemplate"],"mappings":"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","file":"static/js/main.a40738d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/letter-m.9adce795.png\";","export default __webpack_public_path__ + \"static/media/letter-p.83f69969.png\";","export default __webpack_public_path__ + \"static/media/letter-w.15f2104c.png\";","/** @format */\n\nimport {Button} from '@mui/material';\nimport {useNavigate} from 'react-router-dom';\n\nexport const GridButton = (props) => {\n\tconst {path} = props;\n\tconst navigate = useNavigate();\n\n\tconst buttonClicked = () => {\n\t\tnavigate({pathname: path})\n\t};\n\treturn (\n\t\t<Button\n\t\t\tsx={{borderRadius: 0, border: 0, m: 0}}\n\t\t\tcolor='navigation'\n\t\t\tonClick={buttonClicked}\n\t\t\t//\tonMouseOver={onButtonMouseOver}\n\t\t\t\t>\n\t\t\tdetails\n\t\t</Button>\n\t);\n};\n","/** @format */\n\nimport {Box} from '@mui/material';\nimport {useLocation} from 'react-router-dom';\n\nconst PageTitle = () => {\n    const routeMatch = useLocation();\n    let text;\n\n    if (routeMatch.pathname.startsWith('/projects/processing')) {\n        text = 'PROJECT PROCESSING';\n    } else if (routeMatch.pathname === '/projects/admin/locations') {\n        text = 'ORDER LOCATIONS LISTING';\n    } else if (routeMatch.pathname === '/projects/admin/items') {\n        text = 'ORDER ITEMS LISTING';\n    } else if (routeMatch.pathname === '/projects/admin/worksheets') {\n        text = 'ORDER WORKSHEETS LISTING';\n    } else if (routeMatch.pathname === '/projects/admin/documents') {\n        text = 'ORDER DOCUMENTS LISTING';\n    } else if (routeMatch.pathname === '/projects/admin/images') {\n        text = 'ORDER IMAGES LISTING';\n    } else if (routeMatch.pathname === '/projects') {\n        text = 'PROJECT ORDER LISTING';\n    } else if (routeMatch.pathname === '/applications') {\n        text = 'CONTRACT APPLICATIONS';\n    } else if (routeMatch.pathname === '/dashboard') {\n        text = 'CONTRACT DASHBOARD';\n    } else if (routeMatch.pathname === '/analysis') {\n        text = 'PERIOD ANALYSIS';\n    } else if (routeMatch.pathname === '/enquiries') {\n        text = 'CONTRACT ENQUIRIES';\n    } else if (routeMatch.pathname === '/admin/global/applications') {\n        text = 'CONTRACT APPLICATIONS ADMIN';\n    } else if (routeMatch.pathname === '/admin/global/financials_archive') {\n        text = 'CONTRACT PERIODS ADMIN';\n    } else if (routeMatch.pathname === '/admin/global/documents') {\n        text = 'CONTRACT DOCUMENTS ADMIN';\n    } else if (routeMatch.pathname === '/enquiry/applications') {\n        text = 'CONTRACT APPLICATIONS ENQUIRY';\n    } else if (routeMatch.pathname === '/enquiry/projects') {\n        text = 'CONTRACT ORDER ENQUIRY';\n    } else if (routeMatch.pathname === '/enquiry/period-financials') {\n        text = 'PERIOD VALUE ENQUIRY';\n    } else if (routeMatch.pathname === '/reports/applications') {\n        text = 'APPLICATION REPORTS';\n    } else if (routeMatch.pathname === '/reports/financial') {\n        text = 'FINANCIAL REPORTS';\n    } else if (routeMatch.pathname === '/reports/projects') {\n        text = 'PROJECT REPORTS';\n    } else if (routeMatch.pathname === '/reports') {\n        text = 'REPORT SELECTIONS';\n    } else if (routeMatch.pathname === '/admin/projects') {\n        text = 'PROJECT ADMINISTRATION';\n    } else if (routeMatch.pathname === '/admin/documents') {\n        text = 'GLOBAL DOCUMENT ADMINISTRATION';\n    }  else if (routeMatch.pathname === '/admin/applications') {\n        text = 'CONTRACT APPLICATION ADMINISTRATION'\n    }\n    else if (routeMatch.pathname === '/admin/periods') {\n        text = 'PERIOD ADMINISTRATION'\n    }else {\n        text = 'WORK PACKAGE MANAGER';\n    }\n    return (\n        <Box\n            component='h2'\n            sx={{\n                position: 'sticky',\n                top: 0,\n                background: '#22415e',\n                color: 'white',\n                mt: 0,\n                textAlign: 'center',\n                p: 1,\n            }}>\n            {text}\n        </Box>\n    );\n};\n\nexport default PageTitle;\n","/** @format */\n// noinspection SpellCheckingInspection\n\nimport AdminPanelSettingsIcon from '@mui/icons-material/AdminPanelSettings';\nimport AppsIcon from '@mui/icons-material/Apps';\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\nimport ConstructionIcon from '@mui/icons-material/Construction';\nimport CurrencyPoundIcon from '@mui/icons-material/CurrencyPound';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport DocumentScannerIcon from '@mui/icons-material/DocumentScanner';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport HelpIcon from '@mui/icons-material/Help';\nimport HomeIcon from '@mui/icons-material/Home';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport StarBorder from '@mui/icons-material/StarBorder';\nimport {\n\tBox,\n\tCssBaseline,\n\tDivider,\n\tIconButton,\n\tList,\n\tListItem,\n\tListItemIcon,\n\tListItemText,\n} from '@mui/material';\nimport Collapse from '@mui/material/Collapse';\nimport MuiDrawer from '@mui/material/Drawer';\nimport { styled } from '@mui/material/styles';\nimport React from 'react';\nimport { Outlet, useNavigate } from 'react-router-dom';\nimport LetterM from '../home/letter-m.png';\nimport LetterP from '../home/letter-p.png';\nimport LetterW from '../home/letter-w.png';\nimport PageTitle from './PageTitle';\n\nconst drawerWidth = 220;\n\nconst processingItems = [\n\t{\n\t\ttext: 'HOME',\n\t\ticon: <HomeIcon color='contrasting' fontSize='large' />,\n\t\tpath: '/',\n\t},\n\t{\n\t\ttext: 'PROJECTS',\n\t\ticon: <ConstructionIcon color='contrasting' fontSize='large' />,\n\t\tpath: '/projects',\n\t},\n\t{\n\t\ttext: 'APPLICATIONS',\n\t\ticon: <CurrencyPoundIcon color='contrasting' fontSize='large' />,\n\t\tpath: '/applications',\n\t},\n\t{\n\t\ttext: 'TEST',\n\t\ticon: <StarBorder color='contrasting' fontSize='large' />,\n\t\tpath: '/testing',\n\t},\n];\n\nconst adminItems = {\n\ttext: 'ADMIN',\n\ticon: <AdminPanelSettingsIcon color='contrasting' fontSize='large' />,\n\tpath: '/admin',\n\tsubMenu: [\n\t\t{\n\t\t\ttext: 'PROJECTS',\n\t\t\ticon: <AppsIcon color='contrasting' fontSize='medium' />,\n\t\t\tpath: '/admin/projects',\n\t\t},\n\t\t{\n\t\t\ttext: 'PERIODS',\n\t\t\ticon: <AppsIcon color='contrasting' fontSize='medium' />,\n\t\t\tpath: '/admin/periods',\n\t\t},\n\t\t{\n\t\t\ttext: 'APPLICATIONS',\n\t\t\ticon: <AppsIcon color='contrasting' fontSize='medium' />,\n\t\t\tpath: 'admin/applications',\n\t\t},\n\t\t{\n\t\t\ttext: 'DOCUMENTS',\n\t\t\ticon: <AppsIcon color='contrasting' fontSize='medium' />,\n\t\t\tpath: '/admin/documents',\n\t\t},\n\t],\n};\nconst infoItems = [\n\t{\n\t\ttext: 'DASHBOARD',\n\t\ticon: <DashboardIcon color='contrasting' fontSize='large' />,\n\t\tpath: '/dashboard',\n\t},\n\t{\n\t\ttext: 'REPORTS',\n\t\ticon: <DocumentScannerIcon color='contrasting' fontSize='large' />,\n\t\tpath: '/',\n\t},\n];\n\nconst enquiryItems = {\n\ttext: 'ENQUIRIES',\n\ticon: <HelpIcon color='contrasting' fontSize='large' />,\n\tpath: '/',\n\tsubMenu: [\n\t\t{\n\t\t\ttext: 'APPLICATIONS',\n\t\t\ticon: <AppsIcon color='contrasting' fontSize='medium' />,\n\t\t\tpath: '/',\n\t\t},\n\t\t{\n\t\t\ttext: 'FINANCIAL',\n\t\t\ticon: <AppsIcon color='contrasting' fontSize='medium' />,\n\t\t\tpath: '/',\n\t\t},\n\t\t{\n\t\t\ttext: 'PROJECTS',\n\t\t\ticon: <AppsIcon color='contrasting' fontSize='medium' />,\n\t\t\tpath: '/',\n\t\t},\n\t],\n};\nconst openedMixin = (theme) => ({\n\twidth: drawerWidth,\n\tbackground: '#22415e',\n\tcolor: 'white',\n\ttransition: theme.transitions.create('width', {\n\t\teasing: theme.transitions.easing.sharp,\n\t\tduration: theme.transitions.duration.enteringScreen,\n\t}),\n\toverflowX: 'hidden',\n});\n\nconst closedMixin = (theme) => ({\n\tbackground: '#22415e',\n\tcolor: 'white',\n\ttransition: theme.transitions.create('width', {\n\t\teasing: theme.transitions.easing.sharp,\n\t\tduration: theme.transitions.duration.leavingScreen,\n\t}),\n\toverflowX: 'hidden',\n\twidth: `calc(${theme.spacing(7)} + 1px)`,\n\t[theme.breakpoints.up('sm')]: {\n\t\twidth: `calc(${theme.spacing(9)} + 1px)`,\n\t},\n});\n\nconst DrawerHeader = styled('div', {\n\tshouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n\theight: 50,\n\tjustifyContent: 'space-evenly',\n\tdisplay: 'flex',\n\talignItems: 'center',\n\tpadding: theme.spacing(0, 1),\n\t...(open && {\n\t\tjustifyContent: 'space-between',\n\t\tpadding: theme.spacing(0, 2),\n\t}),\n}));\n\nconst Drawer = styled(MuiDrawer, {\n\tshouldForwardProp: (prop) => prop !== 'open',\n})(({ theme, open }) => ({\n\twidth: drawerWidth,\n\tflexShrink: 0,\n\twhiteSpace: 'nowrap',\n\tboxSizing: 'border-box',\n\t...(open && {\n\t\t...openedMixin(theme),\n\t\t'& .MuiDrawer-paper': openedMixin(theme),\n\t}),\n\t...(!open && {\n\t\t...closedMixin(theme),\n\t\t'& .MuiDrawer-paper': closedMixin(theme),\n\t}),\n}));\n\nconst NavigationDrawer = ({ children }) => {\n\tconst navigate = useNavigate();\n\tconst [open, setOpen] = React.useState(true);\n\tconst [adminOpen, setAdminOpen] = React.useState(false);\n\tconst [enquiriesOpen, setEnquiriesOpen] = React.useState(false);\n\n\tfunction handleDrawerOpen() {\n\t\tsetOpen(true);\n\t}\n\n\tfunction handleDrawerClose() {\n\t\tsetOpen(false);\n\t}\n\n\tfunction handleAdminClick() {\n\t\tsetAdminOpen(!adminOpen);\n\t\thandleDrawerOpen();\n\t}\n\n\tfunction handleEnquiriesClick() {\n\t\tsetEnquiriesOpen(!enquiriesOpen);\n\t\thandleDrawerOpen();\n\t}\n\n\t// noinspection SpellCheckingInspection\n\treturn (\n\t\t<Box sx={{ display: 'flex' }}>\n\t\t\t<CssBaseline />\n\t\t\t<Drawer variant='permanent' open={open}>\n\t\t\t\t<DrawerHeader open={open}>\n\t\t\t\t\t{open && (\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tedge='end'\n\t\t\t\t\t\t\tsx={{ p: 2 }}\n\t\t\t\t\t\t\tdisableTouchRipple\n\t\t\t\t\t\t\tonClick={() => navigate('/')}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<img src={LetterW} height={40} alt={'W'} />\n\t\t\t\t\t\t\t<img src={LetterP} height={40} alt={'P'} />\n\t\t\t\t\t\t\t<img src={LetterM} height={40} alt={'M'} />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t)}\n\t\t\t\t\t{!open && (\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tcolor='inherit'\n\t\t\t\t\t\t\taria-label='open drawer'\n\t\t\t\t\t\t\tonClick={handleDrawerOpen}\n\t\t\t\t\t\t\tedge='start'\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuIcon fontSize='large' />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t)}\n\t\t\t\t\t{open && (\n\t\t\t\t\t\t<IconButton onClick={handleDrawerClose} disableTouchRipple>\n\t\t\t\t\t\t\t<ChevronLeftIcon color='contrasting' fontSize='large' />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t)}\n\t\t\t\t</DrawerHeader>\n\t\t\t\t<Divider color='white' />\n\t\t\t\t<List>\n\t\t\t\t\t{processingItems.map((item) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tdivider\n\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\tkey={item.text}\n\t\t\t\t\t\t\tsx={{ mt: 1, mb: 1 }}\n\t\t\t\t\t\t\tonClick={() => navigate(item.path)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemIcon>{item.icon}</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText color='white' primary={item.text} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t\t<Divider color='white' />\n\t\t\t\t\t{infoItems.map((item) => (\n\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\tdivider\n\t\t\t\t\t\t\tkey={item.text}\n\t\t\t\t\t\t\tsx={{ mt: 1, mb: 1 }}\n\t\t\t\t\t\t\tonClick={() => navigate(item.path)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ListItemIcon>{item.icon}</ListItemIcon>\n\t\t\t\t\t\t\t<ListItemText primary={item.text} />\n\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t))}\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tbutton\n\t\t\t\t\t\tdivider\n\t\t\t\t\t\tsx={{ mt: 1, mb: 1 }}\n\t\t\t\t\t\tonClick={handleEnquiriesClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ListItemIcon>{enquiryItems.icon}</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={enquiryItems.text} />\n\t\t\t\t\t\t{enquiriesOpen ? <ExpandLess /> : <ExpandMore />}\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Collapse in={enquiriesOpen} timeout={'auto'} unmountOnExit>\n\t\t\t\t\t\t<List component={'div'}>\n\t\t\t\t\t\t\t{enquiryItems.subMenu.map((item) => (\n\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\t//    secondaryAction={<div>HJHJKHJK</div>}\n\t\t\t\t\t\t\t\t\t//  disablePadding={true}\n\t\t\t\t\t\t\t\t\tdense\n\t\t\t\t\t\t\t\t\tdivider\n\t\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\t\tkey={item.text}\n\t\t\t\t\t\t\t\t\tonClick={() => navigate(item.path)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ListItemIcon>{item.icon}</ListItemIcon>\n\t\t\t\t\t\t\t\t\t<ListItemText primary={item.text} />\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Collapse>\n\t\t\t\t\t{/* <ListItem\n                        button\n                        divider\n                        sx={{mt: 1, mb: 1}}\n                        onClick={handleReportsClick}>\n                        <ListItemIcon>{reportingItems.icon}</ListItemIcon>\n                        <ListItemText primary={reportingItems.text}/>\n                        {reportsOpen ? <ExpandLess/> : <ExpandMore/>}\n                    </ListItem> */}\n\t\t\t\t\t{/* <Collapse in={reportsOpen} timeout={'auto'} unmountOnExit>\n\t\t\t\t\t\t<List component={'div'}>\n\t\t\t\t\t\t\t{reportingItems.subMenu.map((item) => (\n\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\tdense\n\t\t\t\t\t\t\t\t\tdivider\n\t\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\t\tkey={item.text}\n\t\t\t\t\t\t\t\t\tonClick={() => navigate(item.path)}>\n\t\t\t\t\t\t\t\t\t<ListItemIcon>{item.icon}</ListItemIcon>\n\t\t\t\t\t\t\t\t\t<ListItemText primary={item.text} />\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Collapse> */}\n\t\t\t\t\t<Divider color='white' />\n\t\t\t\t\t<ListItem\n\t\t\t\t\t\tdivider\n\t\t\t\t\t\tbutton\n\t\t\t\t\t\tsx={{ mt: 1, mb: 1 }}\n\t\t\t\t\t\tonClick={handleAdminClick}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ListItemIcon>{adminItems.icon}</ListItemIcon>\n\t\t\t\t\t\t<ListItemText primary={adminItems.text} />\n\t\t\t\t\t\t{adminOpen ? <ExpandLess /> : <ExpandMore />}\n\t\t\t\t\t</ListItem>\n\t\t\t\t\t<Collapse in={adminOpen} timeout={'auto'} unmountOnExit={true}>\n\t\t\t\t\t\t<List component={'div'}>\n\t\t\t\t\t\t\t{adminItems.subMenu.map((item) => (\n\t\t\t\t\t\t\t\t<ListItem\n\t\t\t\t\t\t\t\t\tdisablePadding={false}\n\t\t\t\t\t\t\t\t\tdisableGutters={false}\n\t\t\t\t\t\t\t\t\tdense\n\t\t\t\t\t\t\t\t\tdivider\n\t\t\t\t\t\t\t\t\tbutton\n\t\t\t\t\t\t\t\t\tkey={item.text}\n\t\t\t\t\t\t\t\t\tonClick={() => navigate(item.path)}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<ListItemIcon>{item.icon}</ListItemIcon>\n\t\t\t\t\t\t\t\t\t<ListItemText primary={item.text} />\n\t\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Collapse>\n\t\t\t\t\t{/*    <Divider color='white'/>\n\t\t\t\t\t\t{/*</List>*/}\n\t\t\t\t\t{/*<List sx={{mt: 'auto'}}>*/}\n\t\t\t\t\t{/*    <ListItem button divider>*/}\n\t\t\t\t\t{/*        <ListItemIcon>*/}\n\t\t\t\t\t{/*            <LogoutIcon color='contrasting' fontSize='large'/>*/}\n\t\t\t\t\t{/*        </ListItemIcon>*/}\n\t\t\t\t\t{/*        <ListItemText primary={'LOGOUT'}/>*/}\n\t\t\t\t\t{/*    </ListItem>*/}\n\t\t\t\t</List>\n\t\t\t</Drawer>\n\t\t\t<Box component='main' width={'100%'}>\n\t\t\t\t<PageTitle />\n\t\t\t\t<Box ml={2} mr={2}>\n\t\t\t\t\t<Outlet />\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default NavigationDrawer;\n","/** @format */\n\nimport {InMemoryCache, makeVar} from '@apollo/client';\n\nexport const cache = new InMemoryCache({\n    typePolicies: {\n        Query: {\n            fields: {\n                gridSelections: {\n                    read() {\n                        return gridSelectionsVar();\n                    },\n                },\n                selectedWorksheets: {\n                    read() {\n                        return selectedWorksheetsVar();\n                    },\n                },\n                toggleComplete: {\n                    read() {\n                        return toggleCompleteVar();\n                    },\n                },\n                mutationApi: {\n                    read() {\n                        return mutationApiVar();\n                    },\n                },\n                toggleModal: {\n                    read() {\n                        return toggleModal();\n                    },\n                },\n                dashboardSelections: {\n                    read() {\n                        return dashboardSelectionsVar();\n                    },\n                },\n            },\n        },\n    },\n});\n\nexport const gridSelectionsInitialValue = {\n    selectedOrder: false,\n    selectedLocation: false,\n    selectedItem: false,\n    selectedApplication: false,\n    selectedDocument: false,\n    selectedPeriod: false,\n    worksheetsValue: 0.0,\n};\n\nexport const dashboardSelectionsInitialValue = {\n    selectedArea: false,\n    selectedPeriod: false\n};\n\nexport const dashboardSelectionsVar = makeVar(dashboardSelectionsInitialValue);\n\nconst mutationApiInitialValue = {\n    data: false,\n};\n\nexport const gridSelectionsVar = makeVar(gridSelectionsInitialValue);\n\nexport const toggleCompleteVar = makeVar('all');\n\nexport const mutationApiVar = makeVar(mutationApiInitialValue);\n\nexport const selectedWorksheetsVar = makeVar();\n\nexport const toggleModal = makeVar(false);\n","import React from \"react\";\r\nimport LetterM from \"./letter-m.png\";\r\nimport LetterP from \"./letter-p.png\";\r\nimport LetterW from \"./letter-w.png\";\r\n\r\n\r\nexport default function WpmLogo() {\r\n    return (\r\n        <div style={{margin: \"auto\"}}>\r\n            <img src={LetterW} alt=\"W\" height=\"400px\"/>\r\n            <img src={LetterP} alt=\"P\" height=\"400px\"/>\r\n            <img src={LetterM} alt=\"M\" height=\"400px\"/>\r\n            <hr/>\r\n        </div>\r\n\r\n    );\r\n}","/** @format */\n\nimport React from 'react';\nimport {cache, gridSelectionsInitialValue, gridSelectionsVar,} from '../../cache';\nimport WpmLogo from './WpmLogo';\n\nconst Home = () => {\n\tReact.useEffect(() => {\n\t\tcache.gc();\n\t\tgridSelectionsVar(gridSelectionsInitialValue);\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<div style={{textAlign: 'center'}}>\n\t\t\t\t<WpmLogo/>\n\t\t\t</div>\n\t\t\t<h1 style={{textAlign: 'center', fontWeight: 'bolder'}}>\n\t\t\t\tWORK PACKAGE MANAGER\n\t\t\t</h1>\n\t\t\t<hr/>\n\t\t\t<br/>\n\t\t\t<h1 style={{textAlign: 'center', fontWeight: 'bolder'}}>\n\t\t\t\tGENERIC CONTRACT EDITION\n\t\t\t</h1>\n\t\t\t<br/>\n\t\t\t<hr/>\n\t\t</>\n\t);\n};\n\nexport default Home;\n","/** @format */\n\nimport { gql } from '@apollo/client';\n\nexport const GET_ALL_AREAS = gql`\n\tquery getAreas {\n\t\tareas {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tdescription\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_ALL_WORKTYPES = gql`\n\tquery getWorktypes {\n\t\tworktypes {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tdescription\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_ALL_ORDERHEADER_STATUSES = gql`\n\tquery getOrderheaderStatus {\n\t\torderheaderStatuses {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tstatusDescription\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_PROJECT_WORKSHEETS = gql`\n\tquery GetProjectWorksheets($id: Int!) {\n\t\tworksheetWithValues(filter: { orderheaderId: { equalTo: $id } }) {\n\t\t\tnodes {\n\t\t\t\tactivityCode\n\t\t\t\tactivityDescription\n\t\t\t\tapplied\n\t\t\t\tdateComplete\n\t\t\t\tid\n\t\t\t\titemNumber\n\t\t\t\tlocationReference\n\t\t\t\tworksheetReference\n\t\t\t\tweek\n\t\t\t\tyear\n\t\t\t\tperiodNumber\n\t\t\t\tqtyComplete\n\t\t\t\tsupervisorName\n\t\t\t\tvalueComplete\n\t\t\t\tbatchId\n\t\t\t\tapplicationNumber\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_ALL_SUPERVISORS = gql`\n\tquery GetAllSupervisors {\n\t\tsupervisors {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tdisplayName\n\t\t\t\tfirstname\n\t\t\t\tfullName\n\t\t\t\tmiddlename\n\t\t\t\tsurname\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_CURRENT_PERIOD = gql`\n\tquery GetCurrentPeriod {\n\t\tperiods(condition: { current: true }) {\n\t\t\tnodes {\n\t\t\t\tcurrent\n\t\t\t\tid\n\t\t\t\tperiodNumber\n\t\t\t\tweek\n\t\t\t\tweekCommencingDate\n\t\t\t\tweekEndingDate\n\t\t\t\tyear\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_ORDER_IMAGES = gql`\n\tquery GetOrderImages($id: Int!) {\n\t\timageDetails(filter: { orderheaderId: { equalTo: $id } }) {\n\t\t\ttotalCount\n\t\t\tnodes {\n\t\t\t\theaderImageFile\n\t\t\t\tid\n\t\t\t\tlongName\n\t\t\t\tshortName\n\t\t\t\treference\n\t\t\t\tworksheetReference\n\t\t\t\tdateTakenManual\n\t\t\t\texifDate\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_ITEM_TYPES = gql`\n\tquery GetItemTypes {\n\t\titemTypes {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\ttypeShort\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_RATESET_HEADERS = gql`\n\tquery GetRatesetHeaders {\n\t\tratesetHeaders {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tdescription\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_RATESET_PRICES = gql`\n\tquery GetRatesetPrices($id: Int) {\n\t\tratesetPrices(filter: { ratesetHeaderId: { equalTo: $id } }) {\n\t\t\tnodes {\n\t\t\t\tactivitycode {\n\t\t\t\t\tactivityCode\n\t\t\t\t\tactivityDescription\n\t\t\t\t\tid\n\t\t\t\t}\n\t\t\t\tid\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_IMAGE_TYPES = gql`\n\tquery GetImageTypes {\n\t\timageTypes {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tlongName\n\t\t\t\tshortName\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_PROJECT_DOCUMENTS = gql`\n\tquery GetProjectDocuments($orderId: Int!) {\n\t\torderheaderDocuments(\n\t\t\tcondition: { orderheaderId: $orderId }\n\t\t\torderBy: DOCUMENT_BY_DOCUMENT_ID__GLOBAL_ASC\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tdocument {\n\t\t\t\t\tcreatedAt\n\t\t\t\t\tglobal\n\t\t\t\t\theaderDocumentFile\n\t\t\t\t\tid\n\t\t\t\t\ttitle\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_PROJECT_WORKBOOK_DETAILS = gql`\n\tquery GetProjectWorkbookDetails($orderId: Int!) {\n\t\torderheader(id: $orderId) {\n\t\t\torderheaderWithValueById {\n\t\t\t\tworktypeId\n\t\t\t\torderStatusId\n\t\t\t\tstatusDescription\n\t\t\t\taverageLocationValue\n\t\t\t\taverageItemValue\n\t\t\t\tnotes\n\t\t\t\tstartDate\n\t\t\t\tendDate\n\t\t\t\tissuedDate\n\t\t\t\tarea\n\t\t\t\tareaId\n\t\t\t\taverageItemValue\n\t\t\t\taverageLocationValue\n\t\t\t\tid\n\t\t\t\titemCount\n\t\t\t\titemCountBoq\n\t\t\t\titemCountVarn\n\t\t\t\titemsComplete\n\t\t\t\titemsCompleteBoq\n\t\t\t\titemsCompleteVarn\n\t\t\t\tlocationCount\n\t\t\t\tlocationsComplete\n\t\t\t\tstatusDescription\n\t\t\t\torderNumber\n\t\t\t\torderValueLabour\n\t\t\t\torderValueMaterials\n\t\t\t\torderValueOther\n\t\t\t\torderValueTotal\n\t\t\t\torderValueTotalApplied\n\t\t\t\torderValueTotalBoq\n\t\t\t\torderValueTotalComplete\n\t\t\t\torderValueTotalVarn\n\t\t\t\tprojectTitle\n\t\t\t\tworkType\n\t\t\t\tissuedDate\n\t\t\t\tdocumentCount\n\t\t\t\timageCount\n\t\t\t}\n\t\t\tsitelocationWithValues {\n\t\t\t\tnodes {\n\t\t\t\t\tcomplete\n\t\t\t\t\tid\n\t\t\t\t\titemCount\n\t\t\t\t\titemsComplete\n\t\t\t\t\torderValue\n\t\t\t\t\torderheaderId\n\t\t\t\t\treference\n\t\t\t\t\tvalueApplied\n\t\t\t\t\tvalueComplete\n\t\t\t\t\tworksheetReference\n\t\t\t\t\timageCount\n\t\t\t\t\tsitelocationById {\n\t\t\t\t\t\torderdetailWithValues {\n\t\t\t\t\t\t\tnodes {\n\t\t\t\t\t\t\t\tactivityCode\n\t\t\t\t\t\t\t\tactivityDescription\n\t\t\t\t\t\t\t\tcomplete\n\t\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\t\torderheaderId\n\t\t\t\t\t\t\t\tqtyApplied\n\t\t\t\t\t\t\t\tqtyComplete\n\t\t\t\t\t\t\t\tqtyOrdered\n\t\t\t\t\t\t\t\tqtyOs\n\t\t\t\t\t\t\t\ttypeShort\n\t\t\t\t\t\t\t\tunitPayableTotal\n\t\t\t\t\t\t\t\tvalueApplied\n\t\t\t\t\t\t\t\tvalueComplete\n\t\t\t\t\t\t\t\tvaluePayableTotal\n\t\t\t\t\t\t\t\tworksheetReference\n\t\t\t\t\t\t\t\titemNumber\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_GLOBAL_DOCUMENTS = gql`\n\tquery GetGlobalDocuments {\n\t\tdocuments(condition: { global: true }) {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\ttitle\n\t\t\t\tcreatedAt\n\t\t\t\tglobal\n\t\t\t\theaderDocumentFile\n\t\t\t\torderheaderDocuments {\n\t\t\t\t\taggregates {\n\t\t\t\t\t\tdistinctCount {\n\t\t\t\t\t\t\torderheaderId\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tnodes {\n\t\t\t\t\t\torderheader {\n\t\t\t\t\t\t\tid\n\t\t\t\t\t\t\torderNumber\n\t\t\t\t\t\t\tprojectTitle\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_ALL_PERIODS = gql`\n\tquery GetAllPeriod {\n\t\tperiods {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tweek\n\t\t\t\tweekCommencingDate\n\t\t\t\tweekEndingDate\n\t\t\t\tyear\n\t\t\t\tperiodNumber\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_AREAS_WITH_VALUES = gql`\n\tquery GetAreasWithValues {\n\t\tareaWithValues(orderBy: ID_ASC) {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tdescription\n\t\t\t\torderCount\n\t\t\t\torderValue\n\t\t\t\tvalueComplete\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_PERIODS_WITH_VALUES = gql`\n\tquery GetPeriodsWithValues {\n\t\tperiodWithValues {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tperiodNumber\n\t\t\t\tworksValueClosed\n\t\t\t\tworksValueCurrent\n\t\t\t\tweekCommencingDate\n\t\t\t\tweekEndingDate\n\t\t\t\tweek\n\t\t\t\tyear\n\t\t\t\tcurrent\n\t\t\t\tclosed\n\t\t\t\torderCount\n\t\t\t\tareaCount\n\t\t\t\titemCount\n\t\t\t\tlocationCount\n\t\t\t}\n\t\t}\n\t}\n`;\n","/** @format */\n\nimport numeral from 'numeral';\nimport {DateTime} from 'luxon';\n\nexport const formatNumberGridNoDecimals = (number) =>\n\tnumeral(number.value).format('0,0');\n\nexport const formatNumberGridTwoDecimals = (number) =>\n\tnumeral(number.value).format('0,0.00');\n\nexport const formatNumberNoDecimals = (number) => numeral(number).format('0,0');\n\nexport const formatNumberTwoDecimals = (number) =>\n\tnumeral(number).format('0,0.00');\n\nexport const formatDate = (date) => {\n\tconst converted = DateTime.fromISO(date);\n\tconst isValid = DateTime.isDateTime(converted);\n\tif (isValid)\n\t\treturn converted.setLocale('en-GB').toLocaleString(DateTime.DATE_SHORT);\n};\n\nexport function divideIfNotZero(numerator, denominator) {\n\tif (denominator === 0 || isNaN(denominator)) {\n\t\treturn null;\n\t} else {\n\t\treturn numerator / denominator;\n\t}\n}\n\nexport const numberOnly = (event) => {\n\treturn (\n\t\tevent.key === '1' ||\n\t\tevent.key === '2' ||\n\t\tevent.key === '3' ||\n\t\tevent.key === '4' ||\n\t\tevent.key === '5' ||\n\t\tevent.key === '6' ||\n\t\tevent.key === '7' ||\n\t\tevent.key === '8' ||\n\t\tevent.key === '9' ||\n\t\tevent.key === '0' ||\n\t\tevent.key === '.'\n\t);\n};\n\nexport const camelCaseToText = (str) =>\n\tstr.replace(/^[a-z]|[A-Z]/g, (c, i) => (i ? ' ' : '') + c.toUpperCase());\n\nexport const truncateString = (str, len) => {\n\tif (str.length > len) {\n\t\tif (len <= 3) {\n\t\t\treturn str.slice(0, len - 3) + '...';\n\t\t} else {\n\t\t\treturn str.slice(0, len) + '...';\n\t\t}\n\t} else {\n\t\treturn str;\n\t}\n};\n","/** @format */\n\nimport { useQuery } from '@apollo/client';\nimport ImageGallery from 'react-image-gallery';\nimport { useParams } from 'react-router-dom';\nimport { GET_ORDER_IMAGES } from '../../../../api-calls/queries/misc';\nimport { formatDate } from '../../../../functions/formattingFunctions';\n\nconst ProjectImages = () => {\n\tconst { id } = useParams();\n\n\tconst { data, loading } = useQuery(GET_ORDER_IMAGES, {\n\t\tvariables: { id: Number(id) },\n\t\tfetchPolicy: 'cache-and-network',\n\t});\n\tconst images = data?.imageDetails?.nodes.map((item) => ({\n\t\toriginal: `${process.env.REACT_APP_API_ENDPOINT}/images/resized/${item.headerImageFile.id}`,\n\t\tthumbnail: `${process.env.REACT_APP_API_ENDPOINT}/images/thumbnails/${item.headerImageFile.id}`,\n\n\t\toriginalHeight: 800,\n\t\tdescription: (\n\t\t\t<div style={{ textAlign: 'left' }}>\n\t\t\t\t<p>WORKSHEET: {item.worksheetReference}</p>\n\t\t\t\t<p>{item.longName}</p>\n\t\t\t\t{\n\t\t\t\t\t<p>\n\t\t\t\t\t\t{item.exifDate\n\t\t\t\t\t\t\t? formatDate(item.exifDate)\n\t\t\t\t\t\t\t: formatDate(item.dateTakenManual)}\n\t\t\t\t\t</p>\n\t\t\t\t}\n\t\t\t</div>\n\t\t),\n\t}));\n\tconst handleImageClick = (event) =>\n\t\twindow.open(\n\t\t\tevent.target.currentSrc.replace('resized', 'original'),\n\t\t\t'_blank',\n\t\t);\n\n\tif (loading) return null;\n\treturn (\n\t\t<div style={{ marginTop: '50px' }}>\n\t\t\t{images?.length > 0 ? (\n\t\t\t\t<ImageGallery\n\t\t\t\t\titems={images}\n\t\t\t\t\tthumbnailPosition='bottom'\n\t\t\t\t\tonClick={handleImageClick}\n\t\t\t\t\tlazyLoad={true}\n\t\t\t\t\tshowThumbnails={true}\n\t\t\t\t/>\n\t\t\t) : (\n\t\t\t\t<div className='no-data-message'>\n\t\t\t\t\tNO IMAGES ARE AVAILABLE FOR THIS PROJECT\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default ProjectImages;\n","/** @format */\n\nimport {gql} from '@apollo/client';\n\nexport const GET_PROJECT_ITEMS = gql`\n\tquery GetProjectItems($id: Int!) {\n\t\torderdetailWithValues(filter: { orderheaderId: { equalTo: $id } }) {\n\t\t\tnodes {\n\t\t\t\tactivityCode\n\t\t\t\tactivityDescription\n\t\t\t\tcomplete\n\t\t\t\tid\n\t\t\t\torderheaderId\n\t\t\t\tqtyApplied\n\t\t\t\tqtyComplete\n\t\t\t\tqtyOrdered\n\t\t\t\ttypeShort\n\t\t\t\tunitPayableTotal\n\t\t\t\tvalueApplied\n\t\t\t\tvalueComplete\n\t\t\t\tvaluePayableTotal\n\t\t\t\tworksheetReference\n\t\t\t\titemNumber\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_NEW_PROJECT_ITEMS = gql`\n\tquery GetProjectItems($orderheaderId: Int!, $id: Int!) {\n\t\torderdetailWithValues(\n\t\t\tfilter: {\n\t\t\t\torderheaderId: { equalTo: $orderheaderId }\n\t\t\t\tid: { greaterThan: $id }\n\t\t\t}\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tactivityCode\n\t\t\t\tactivityDescription\n\t\t\t\tcomplete\n\t\t\t\tid\n\t\t\t\torderheaderId\n\t\t\t\tqtyApplied\n\t\t\t\tqtyComplete\n\t\t\t\tqtyOrdered\n\t\t\t\ttypeShort\n\t\t\t\tunitPayableTotal\n\t\t\t\tvalueApplied\n\t\t\t\tvalueComplete\n\t\t\t\tvaluePayableTotal\n\t\t\t\tworksheetReference\n\t\t\t\titemNumber\n\t\t\t}\n\t\t\ttotalCount\n\t\t}\n\t}\n`;\n\nexport const GET_PROJECT_ITEM_NUMBERS = gql`\n\tquery GetProjectItemNumbers($id: Int!) {\n\t\torderdetails(filter: { orderheaderId: { equalTo: $id } }) {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\titemNumber\n\t\t\t}\n\t\t}\n\t}\n`;\n","/** @format */\n\nimport AllInclusiveIcon from '@mui/icons-material/AllInclusive';\nimport CheckIcon from '@mui/icons-material/Check';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport {BottomNavigation, BottomNavigationAction, Paper} from '@mui/material';\n\nconst GridQtyFilter = ({value, setValue}) => {\n\treturn (\n\t\t<Paper\n\t\t\tsx={{position: 'absolute', bottom: 0, left: 0, right: 0}}\n\t\t\televation={3}>\n\t\t\t<BottomNavigation\n\t\t\t\tsx={{\n\t\t\t\t\t'& .MuiBottomNavigationAction-root': {\n\t\t\t\t\t\tcolor: 'navy',\n\t\t\t\t\t\tfontWeight: 'bold',\n\t\t\t\t\t},\n\t\t\t\t\t'& .Mui-selected ': {\n\t\t\t\t\t\tcolor: 'red',\n\t\t\t\t\t\tfontWeight: 'bolder',\n\t\t\t\t\t\t'& .MuiBottomNavigationAction-label': {fontSize: 14},\n\t\t\t\t\t\t'& .MuiBottomNavigationAction-icon': {color: 'black'},\n\t\t\t\t\t},\n\t\t\t\t\t'& .MuiBottomNavigationAction-label': {fontSize: 14},\n\t\t\t\t\tbackgroundColor: 'lightgray',\n\t\t\t\t\tborderTopStyle: 'solid',\n\t\t\t\t\tborderWidth: 2,\n\t\t\t\t}}\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={(event, newValue) => {\n\t\t\t\t\tsetValue(newValue);\n\t\t\t\t}}\n\t\t\t\tshowLabels>\n\t\t\t\t<BottomNavigationAction\n\t\t\t\t\tlabel='Show All'\n\t\t\t\t\tvalue='All'\n\t\t\t\t\ticon={<AllInclusiveIcon/>}\n\t\t\t\t/>\n\t\t\t\t<BottomNavigationAction\n\t\t\t\t\tlabel='Complete Only'\n\t\t\t\t\tvalue='Complete Only'\n\t\t\t\t\ticon={<CheckIcon/>}\n\t\t\t\t/>\n\t\t\t\t<BottomNavigationAction\n\t\t\t\t\tlabel='Outstanding Only'\n\t\t\t\t\tvalue='Outstanding Only'\n\t\t\t\t\ticon={<ClearIcon/>}\n\t\t\t\t/>\n\t\t\t</BottomNavigation>\n\t\t</Paper>\n\t);\n};\n\nexport default GridQtyFilter;\n","/** @format */\nimport {useQuery} from '@apollo/client';\nimport {CircularProgress} from '@mui/material';\nimport {AgGridReact} from 'ag-grid-react';\nimport React from 'react';\nimport {GET_PROJECT_ITEMS} from '../../../api-calls/queries/items';\nimport {gridSelectionsVar} from '../../../cache';\nimport {formatNumberGridTwoDecimals} from '../../../functions/formattingFunctions';\nimport GridQtyFilter from '../components/GridQtyFilter';\nimport {useParams} from 'react-router-dom';\n\nconst ProjectItemsGrid = () => {\n\tconst {id} = useParams();\n\tconst [value, setValue] = React.useState('All');\n\tconst gridRef = React.useRef(false);\n\tconst [rowData, setRowData] = React.useState();\n\tconst {loading} = useQuery(GET_PROJECT_ITEMS, {\n\t\tvariables: {id: Number(id)},\n\t\tfetchPolicy: 'cache-and-network',\n\t\tonCompleted: (data) => setRowData(data.orderdetailWithValues.nodes),\n\t});\n\n\tconst columnDefs = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\theaderName: 'Item No',\n\t\t\t\tfield: 'itemNumber',\n\t\t\t\tsort: 'desc',\n\t\t\t\tmaxWidth: 120,\n\t\t\t\tcellStyle: {textAlign: 'left'},\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Item Type',\n\t\t\t\tfield: 'typeShort',\n\t\t\t\tmaxWidth: 120,\n\t\t\t\tcellStyle: {textAlign: 'left'},\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Worksheet',\n\t\t\t\tfield: 'worksheetReference',\n\t\t\t\tcellStyle: {textAlign: 'left'},\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Activity Code',\n\t\t\t\tfield: 'activityCode',\n\t\t\t\tcellStyle: {textAlign: 'left'},\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Activity Description',\n\t\t\t\tfield: 'activityDescription',\n\t\t\t\tcellStyle: {textAlign: 'left'},\n\t\t\t\tflex: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Qty Ordered',\n\t\t\t\tfield: 'qtyOrdered',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Unit Value',\n\t\t\t\tfield: 'unitPayableTotal',\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Order Value',\n\t\t\t\tfield: 'valuePayableTotal',\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Qty Done',\n\t\t\t\tfield: 'qtyComplete',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Done Value',\n\t\t\t\tfield: 'valueComplete',\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Qty Applied',\n\t\t\t\tfield: 'qtyApplied',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Applied Value',\n\t\t\t\tfield: 'valueApplied',\n\t\t\t\ttype: 'rightAligned',\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Complete',\n\t\t\t\tfield: 'complete',\n\t\t\t\ttype: 'rightAligned',\n\t\t\t\tvalueFormatter: function (params) {\n\t\t\t\t\treturn params.value ? 'Yes' : 'No';\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t[],\n\t);\n\n\tconst defaultColDef = React.useMemo(\n\t\t() => ({\n\t\t\tfilter: true,\n\t\t\tsortable: true,\n\t\t\tresizable: true,\n\t\t\tflex: 1,\n\t\t}),\n\t\t[],\n\t);\n\n\tconst onSelectionChanged = React.useCallback(() => {\n\t\tconst selectedRow = gridRef.current.api.getSelectedRows();\n\t\tselectedRow.length === 0\n\t\t\t? gridSelectionsVar({...gridSelectionsVar(), selectedItem: false})\n\t\t\t: gridSelectionsVar({\n\t\t\t\t...gridSelectionsVar(),\n\t\t\t\tselectedItem: selectedRow,\n\t\t\t});\n\t}, []);\n\n\tReact.useEffect(() => {\n\t\tif (typeof gridRef.current !== 'undefined' && gridRef.current.api) {\n\t\t\tgridRef.current.api.onFilterChanged();\n\t\t}\n\t}, [value]);\n\n\tconst isExternalFilterPresent = React.useCallback(() => {\n\t\treturn value !== 'All';\n\t}, [value]);\n\n\tconst doesExternalFilterPass = React.useCallback(\n\t\t(node) => {\n\t\t\tswitch (value) {\n\t\t\t\tcase 'Complete Only':\n\t\t\t\t\treturn node.data.complete === true;\n\t\t\t\tcase 'Outstanding Only':\n\t\t\t\t\treturn node.data.complete === false;\n\t\t\t\tdefault:\n\t\t\t\t\treturn '';\n\t\t\t}\n\t\t},\n\t\t[value],\n\t);\n\n\tif (loading) return <CircularProgress/>;\n\treturn (\n\t\t<div style={{height:'75vh'}}>\n\t\t\t<AgGridReact\n\t\t\t\tclassName='ag-theme-alpine'\n\t\t\t\tanimateRows='true'\n\t\t\t\tcolumnDefs={columnDefs}\n\t\t\t\tdefaultColDef={defaultColDef}\n\t\t\t\trowData={rowData}\n\t\t\t\trowSelection='single'\n\t\t\t\tref={gridRef}\n\t\t\t//\tdomLayout='autoHeight'\n\t\t\t\tenableCellChangeFlash={true}\n\t\t\t\tpagination={false}\n\t\t\t\tpaginationPageSize={20}\n\t\t\t\tonSelectionChanged={onSelectionChanged}\n\t\t\t\tisExternalFilterPresent={isExternalFilterPresent}\n\t\t\t\tdoesExternalFilterPass={doesExternalFilterPass}\n\t\t\t/>\n\t\t\t<GridQtyFilter value={value} setValue={setValue}/>\n\t\t</div>\n\t);\n};\n\nexport default ProjectItemsGrid;\n","/** @format */\n\nimport AddIcon from '@mui/icons-material/Add';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport UploadIcon from '@mui/icons-material/Upload';\nimport {Button, Grid} from '@mui/material';\n\nconst ProjectItemsButtons = () => {\n\treturn (\n\t\t<Grid container columnSpacing={2} mb={2} mt={2} columns={4}>\n\t\t\t<Grid item xs={true}>\n\t\t\t\t<Button color='create' startIcon={<AddIcon/>}>\n\t\t\t\t\tcreate item\n\t\t\t\t</Button>\n\t\t\t</Grid>{' '}\n\t\t\t<Grid item xs={true}>\n\t\t\t\t<Button startIcon={<EditIcon/>} color='update'>\n\t\t\t\t\tedit item\n\t\t\t\t</Button>\n\t\t\t</Grid>{' '}\n\t\t\t<Grid item xs={true}>\n\t\t\t\t<Button startIcon={<DeleteIcon/>} color='delete'>\n\t\t\t\t\tdelete item\n\t\t\t\t</Button>\n\t\t\t</Grid>{' '}\n\t\t\t<Grid item xs={true}>\n\t\t\t\t<Button startIcon={<UploadIcon/>}>item button</Button>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default ProjectItemsButtons;\n","/** @format */\nimport ProjectItemsGrid from '../../../grids/grids/ProjectItemsGrid';\nimport ProjectItemsButtons from './ProjectItemsButtons';\n\nconst ProjectItems = () => {\n\treturn (\n\t\t<div>\n\t\t\t<ProjectItemsButtons/>\n\t\t\t<hr/>\n\t\t\t<div className='grid-title'>Project Items List</div>\n\t\t\t<ProjectItemsGrid/>\n\t\t</div>\n\t);\n};\n\nexport default ProjectItems;\n","/** @format */\n\nimport {gql} from '@apollo/client';\n\nexport const GET_PROJECT_LOCATIONS = gql`\n\tquery GetProjectLocations($id: Int!) {\n\t\tsitelocationWithValues(filter: { orderheaderId: { equalTo: $id } }) {\n\t\t\tnodes {\n\t\t\t\tcomplete\n\t\t\t\tid\n\t\t\t\titemCount\n\t\t\t\titemsComplete\n\t\t\t\torderValue\n\t\t\t\torderheaderId\n\t\t\t\treference\n\t\t\t\tvalueApplied\n\t\t\t\tvalueComplete\n\t\t\t\tworksheetReference\n\t\t\t\timageCount\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_INCOMPLETE_LOCATION_ITEMS = gql`\n\tquery GetIncompleteLocationItems($id: Int!) {\n\t\torderdetailWithValues(\n\t\t\tfilter: { complete: { equalTo: false }, sitelocationId: { equalTo: $id } }\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tactivityCode\n\t\t\t\tactivityDescription\n\t\t\t\titemNumber\n\t\t\t\ttypeShort\n\t\t\t\tvalueOs\n\t\t\t\tqtyOs\n\t\t\t\tqtyOrdered\n\t\t\t\tid\n\t\t\t\torderheaderId\n\t\t\t\tunitPayableTotal\n\t\t\t\tsitelocationId\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const READ_LOCATION_REFERENCES = gql`\n\tquery GetLocationReferences($id: Int!) {\n\t\tsitelocationWithValues(filter: { orderheaderId: { equalTo: $id } }) {\n\t\t\tnodes {\n\t\t\t\treference\n\t\t\t\tid\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_SINGLE_LOCATION = gql`\n\tquery GetSingleLocation($id: Int!) {\n\t\tsitelocationWithValue(id: $id) {\n\t\t\tcomplete\n\t\t\tid\n\t\t\titemCount\n\t\t\titemsComplete\n\t\t\torderValue\n\t\t\torderheaderId\n\t\t\treference\n\t\t\tvalueApplied\n\t\t\tvalueComplete\n\t\t\tworksheetReference\n\t\t\timageCount\n\t\t}\n\t}\n`;\n\nexport const GET_UPDATED_LOCATIONS = gql`\n\tquery GetUpdatedLocations($id: Int!, $orderheaderId: Int!) {\n\t\tsitelocationWithValues(\n\t\t\tfilter: {\n\t\t\t\tid: { greaterThan: $id }\n\t\t\t\torderheaderId: { equalTo: $orderheaderId }\n\t\t\t}\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tcomplete\n\t\t\t\tid\n\t\t\t\titemCount\n\t\t\t\titemsComplete\n\t\t\t\torderValue\n\t\t\t\torderheaderId\n\t\t\t\treference\n\t\t\t\tvalueApplied\n\t\t\t\tvalueComplete\n\t\t\t\tworksheetReference\n\t\t\t\timageCount\n\t\t\t}\n\t\t}\n\t\torderheaderWithValue(id: $orderheaderId) {\n\t\t\tworktypeId\n\t\t\torderStatusId\n\t\t\tstatusDescription\n\t\t\taverageLocationValue\n\t\t\taverageItemValue\n\t\t\tnotes\n\t\t\tstartDate\n\t\t\tendDate\n\t\t\tissuedDate\n\t\t\tarea\n\t\t\tareaId\n\t\t\taverageItemValue\n\t\t\taverageLocationValue\n\t\t\tid\n\t\t\titemCount\n\t\t\titemCountBoq\n\t\t\titemCountVarn\n\t\t\titemsComplete\n\t\t\titemsCompleteBoq\n\t\t\titemsCompleteVarn\n\t\t\tlocationCount\n\t\t\tlocationsComplete\n\t\t\tstatusDescription\n\t\t\torderNumber\n\t\t\torderValueLabour\n\t\t\torderValueMaterials\n\t\t\torderValueOther\n\t\t\torderValueTotal\n\t\t\torderValueTotalApplied\n\t\t\torderValueTotalBoq\n\t\t\torderValueTotalComplete\n\t\t\torderValueTotalVarn\n\t\t\tprojectTitle\n\t\t\tworkType\n\t\t\tissuedDate\n\t\t\tdocumentCount\n\t\t\timageCount\n\t\t}\n\t}\n`;\n","/** @format */\n\nimport { useQuery } from '@apollo/client';\nimport { CircularProgress } from '@mui/material';\nimport { AgGridReact } from 'ag-grid-react';\nimport React from 'react';\nimport { GET_PROJECT_LOCATIONS } from '../../../api-calls/queries/locations';\nimport { gridSelectionsVar } from '../../../cache';\nimport { formatNumberGridTwoDecimals } from '../../../functions/formattingFunctions';\nimport GridQtyFilter from '../components/GridQtyFilter';\nimport { useParams } from 'react-router-dom';\n\nconst ProjectLocationsGrid = () => {\n\tconst { id } = useParams();\n\tconst [value, setValue] = React.useState('All');\n\tconst gridRef = React.useRef();\n\tconst [rowData, setRowData] = React.useState();\n\tconst { loading } = useQuery(GET_PROJECT_LOCATIONS, {\n\t\tvariables: { id: Number(id) },\n\t\tfetchPolicy: 'cache-and-network',\n\t\tonCompleted: (data) => setRowData(data.sitelocationWithValues.nodes),\n\t});\n\tconst columnDefs = React.useMemo(\n\t\t() => [\n\t\t\t{ field: 'id', hide: true, sort: 'asc' },\n\t\t\t{\n\t\t\t\theaderName: 'Worksheet Ref',\n\t\t\t\tfield: 'worksheetReference',\n\t\t\t\tcellStyle: { textAlign: 'left' },\n\t\t\t\t// checkboxSelection: (params) => !params.data.complete,\n\t\t\t\tcheckboxSelection: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Location',\n\t\t\t\tfield: 'reference',\n\t\t\t\tcellStyle: { textAlign: 'left' },\n\t\t\t\tflex: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Item Count',\n\t\t\t\tfield: 'itemCount',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Items Complete',\n\t\t\t\tfield: 'itemsComplete',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Items O/S',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueGetter: function (params) {\n\t\t\t\t\treturn params.data.itemCount - params.data.itemsComplete;\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Image Count',\n\t\t\t\tfield: 'imageCount',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t},\n\n\t\t\t{\n\t\t\t\theaderName: 'Order Value',\n\t\t\t\tfield: 'orderValue',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueGetter: (params) => Number(params.data.orderValue),\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Done Value',\n\t\t\t\tfield: 'valueComplete',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueGetter: (params) => Number(params.data.valueComplete),\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'To Do Value',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueGetter: function (params) {\n\t\t\t\t\treturn params.data['orderValue'] - params.data['valueComplete'];\n\t\t\t\t},\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Applied Value',\n\t\t\t\tfield: 'valueApplied',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueGetter: (params) => Number(params.data.valueApplied),\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'To Apply Value',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueGetter: function (params) {\n\t\t\t\t\treturn params.data['valueComplete'] - params.data['valueApplied'];\n\t\t\t\t},\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Ave Item Value',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueGetter: function (params) {\n\t\t\t\t\treturn params.data['orderValue'] / params.data['itemCount'];\n\t\t\t\t},\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Complete',\n\t\t\t\tfield: 'complete',\n\t\t\t\ttype: 'rightAligned',\n\t\t\t\tvalueFormatter: function (params) {\n\t\t\t\t\treturn params.value ? 'Yes' : 'No';\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\t[],\n\t);\n\n\tconst defaultColDef = React.useMemo(\n\t\t() => ({\n\t\t\tfilter: true,\n\t\t\tsortable: true,\n\t\t\tresizable: true,\n\t\t\tflex: 1,\n\t\t}),\n\t\t[],\n\t);\n\tconst onSelectionChanged = React.useCallback(() => {\n\t\tconst selectedRow = gridRef.current.api.getSelectedRows();\n\t\tselectedRow.length === 0\n\t\t\t? gridSelectionsVar({ ...gridSelectionsVar(), selectedLocation: false })\n\t\t\t: gridSelectionsVar({\n\t\t\t\t...gridSelectionsVar(),\n\t\t\t\tselectedLocation: selectedRow,\n\t\t\t});\n\t}, []);\n\n\tReact.useEffect(() => {\n\t\tif (typeof gridRef.current !== 'undefined' && gridRef.current.api) {\n\t\t\tgridRef.current.api.onFilterChanged();\n\t\t}\n\t}, [value]);\n\n\tconst isExternalFilterPresent = React.useCallback(() => {\n\t\treturn value !== 'All';\n\t}, [value]);\n\n\tconst doesExternalFilterPass = React.useCallback(\n\t\t(node) => {\n\t\t\tswitch (value) {\n\t\t\t\tcase 'Complete Only':\n\t\t\t\t\treturn node.data.complete === true;\n\t\t\t\tcase 'Outstanding Only':\n\t\t\t\t\treturn node.data.complete === false;\n\t\t\t\tdefault:\n\t\t\t\t\treturn 'All';\n\t\t\t}\n\t\t},\n\t\t[value],\n\t);\n\n\tif (loading) return <CircularProgress />;\n\treturn (\n\t\t<div style={{height:'75vh'}}>\n\t\t\t<AgGridReact\n\t\t\t\tclassName='ag-theme-alpine'\n\t\t\t\tanimateRows='true'\n\t\t\t\tcolumnDefs={columnDefs}\n\t\t\t\tdefaultColDef={defaultColDef}\n\t\t\t\trowData={rowData}\n\t\t\t\trowSelection='multiple'\n\t\t\t\tref={gridRef}\n\t\t\t//\tdomLayout='autoHeight'\n\t\t\t\tenableCellChangeFlash={true}\n\t\t\t\tpagination={false}\n\t\t\t\tpaginationPageSize={30}\n\t\t\t\tonSelectionChanged={onSelectionChanged}\n\t\t\t\tsuppressCellFocus={true}\n\t\t\t\tisExternalFilterPresent={isExternalFilterPresent}\n\t\t\t\tdoesExternalFilterPass={doesExternalFilterPass}\n\t\t\t\tsuppressRowClickSelection={true}\n\t\t\t/>\n\t\t\t<GridQtyFilter value={value} setValue={setValue} />\n\t\t</div>\n\t);\n};\nexport default ProjectLocationsGrid;\n","/** @format */\n\nimport {gql} from '@apollo/client';\n\nexport const CREATE_PROJECT_HEADER = gql`\n  mutation CreateProjectHeader($input: OrderheaderInput!) {\n    createOrderheader(input: { orderheader: $input }) {\n      clientMutationId\n    }\n  }\n`;\n\nexport const EDIT_PROJECT_HEADER = gql`\n  mutation EditProjectHeader($id: Int!, $patch: OrderheaderPatch!) {\n    updateOrderheader(input: { patch: $patch, id: $id }) {\n      clientMutationId\n    }\n  }\n`;\n\nexport const DELETE_PROJECT_HEADER = gql`\n  mutation DeleteProjectHeader($id: Int!) {\n    deleteOrderheader(input: { id: $id }) {\n      deletedOrderheaderNodeId\n      clientMutationId\n    }\n  }\n`;\n\nexport const CREATE_BULK_WORKSHEETS = gql`\n  mutation CreateBulkWorksheets(\n    $input: WorksheetCreateBulkWorksheetsInput!\n    $orderId: Int!\n    $locationId: Int!\n  ) {\n    worksheetCreateBulkWorksheets(input: $input) {\n      query {\n        orderheaderWithValue(id: $orderId) {\n          worktypeId\n          orderStatusId\n          statusDescription\n          averageLocationValue\n          averageItemValue\n          notes\n          startDate\n          endDate\n          issuedDate\n          area\n          areaId\n          averageItemValue\n          averageLocationValue\n          id\n          itemCount\n          itemCountBoq\n          itemCountVarn\n          itemsComplete\n          itemsCompleteBoq\n          itemsCompleteVarn\n          locationCount\n          locationsComplete\n          statusDescription\n          orderNumber\n          orderValueLabour\n          orderValueMaterials\n          orderValueOther\n          orderValueTotal\n          orderValueTotalApplied\n          orderValueTotalBoq\n          orderValueTotalComplete\n          orderValueTotalVarn\n          projectTitle\n          workType\n          issuedDate\n          documentCount\n          imageCount\n        }\n        sitelocationWithValueById(id: $locationId) {\n          complete\n          id\n          itemCount\n          itemsComplete\n          orderValue\n          orderheaderId\n          reference\n          valueApplied\n          valueComplete\n          worksheetReference\n          imageCount\n        }\n      }\n    }\n  }\n`;\n\nexport const CREATE_PROJECT_LOCATION = gql`\n  mutation CreateProjectLocation($projectId: Int!, $reference: String!) {\n    createSitelocation(\n      input: {\n        sitelocation: { reference: $reference, orderheaderId: $projectId }\n      }\n    ) {\n      nodes {\n        complete\n        id\n        itemCount\n        itemsComplete\n        orderValue\n        orderheaderId\n        reference\n        valueApplied\n        valueComplete\n        worksheetReference\n        imageCount\n      }\n    }\n  }\n`;\n\nexport const CREATE_MANY_LOCATIONS = gql`\n  mutation CreateManyLocations($input: [SitelocationInput!]) {\n    mnCreateSitelocation(input: { mnSitelocation: $input }) {\n      clientMutationId\n    }\n  }\n`;\n\nexport const CREATE_BULK_LOCATIONS = gql`\n  mutation CreateBulkLocations(\n    $input: [SitelocationInput!]\n    $orderheaderId: Int!\n  ) {\n    sitelocationCreateBulkLocations(input: { locations: $input }) {\n      sitelocations {\n        sitelocationWithValueById {\n          complete\n          id\n          imageCount\n          itemCount\n          itemsComplete\n          orderValue\n          orderheaderId\n          reference\n          valueApplied\n          valueComplete\n          worksheetReference\n        }\n      }\n      query {\n        orderheaderWithValue(id: $orderheaderId) {\n          worktypeId\n          orderStatusId\n          statusDescription\n          averageLocationValue\n          averageItemValue\n          notes\n          startDate\n          endDate\n          issuedDate\n          area\n          areaId\n          averageItemValue\n          averageLocationValue\n          id\n          itemCount\n          itemCountBoq\n          itemCountVarn\n          itemsComplete\n          itemsCompleteBoq\n          itemsCompleteVarn\n          locationCount\n          locationsComplete\n          statusDescription\n          orderNumber\n          orderValueLabour\n          orderValueMaterials\n          orderValueOther\n          orderValueTotal\n          orderValueTotalApplied\n          orderValueTotalBoq\n          orderValueTotalComplete\n          orderValueTotalVarn\n          projectTitle\n          workType\n          issuedDate\n          documentCount\n          imageCount\n        }\n      }\n    }\n  }\n`;\n\nexport const DELETE_MANY_LOCATIONS = gql`\n  mutation DeleteManyLocations($input: [SitelocationPatch!]) {\n    mnDeleteSitelocation(input: { mnPatch: $input }) {\n      orderheader {\n        orderheaderWithValueById {\n          worktypeId\n          orderStatusId\n          statusDescription\n          averageLocationValue\n          averageItemValue\n          notes\n          startDate\n          endDate\n          issuedDate\n          area\n          areaId\n          averageItemValue\n          averageLocationValue\n          id\n          itemCount\n          itemCountBoq\n          itemCountVarn\n          itemsComplete\n          itemsCompleteBoq\n          itemsCompleteVarn\n          locationCount\n          locationsComplete\n          statusDescription\n          orderNumber\n          orderValueLabour\n          orderValueMaterials\n          orderValueOther\n          orderValueTotal\n          orderValueTotalApplied\n          orderValueTotalBoq\n          orderValueTotalComplete\n          orderValueTotalVarn\n          projectTitle\n          workType\n          issuedDate\n          documentCount\n          imageCount\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_BULK_ITEMS_TO_LOCATION = gql`\n  mutation AddBulkItemsToLocation(\n    $input: [OrderdetailInput!]\n    $locationId: Int!\n    $orderheaderId: Int!\n  ) {\n    mnCreateOrderdetail(input: { mnOrderdetail: $input }) {\n      clientMutationId\n      query {\n        sitelocationWithValueById(id: $locationId) {\n          complete\n          id\n          itemCount\n          itemsComplete\n          orderValue\n          orderheaderId\n          reference\n          valueApplied\n          valueComplete\n          worksheetReference\n          imageCount\n        }\n        orderheaderWithValue(id: $orderheaderId) {\n          worktypeId\n          orderStatusId\n          statusDescription\n          averageLocationValue\n          averageItemValue\n          notes\n          startDate\n          endDate\n          issuedDate\n          area\n          areaId\n          averageItemValue\n          averageLocationValue\n          id\n          itemCount\n          itemCountBoq\n          itemCountVarn\n          itemsComplete\n          itemsCompleteBoq\n          itemsCompleteVarn\n          locationCount\n          locationsComplete\n          statusDescription\n          orderNumber\n          orderValueLabour\n          orderValueMaterials\n          orderValueOther\n          orderValueTotal\n          orderValueTotalApplied\n          orderValueTotalBoq\n          orderValueTotalComplete\n          orderValueTotalVarn\n          projectTitle\n          workType\n          issuedDate\n          documentCount\n          imageCount\n        }\n      }\n    }\n  }\n`;\n\nexport const CREATE_MANY_ITEMS = gql`\n  mutation CreateManyItems($input: [OrderdetailInput!], $orderheaderId: Int!) {\n    orderdetailCreateBulkItems(input: { orderdetails: $input }) {\n      orderdetails {\n        orderdetailWithValueById {\n          activityCode\n          activityDescription\n          complete\n          id\n          orderheaderId\n          qtyApplied\n          qtyComplete\n          qtyOrdered\n          typeShort\n          unitPayableTotal\n          valueApplied\n          valueComplete\n          valuePayableTotal\n          worksheetReference\n          itemNumber\n        }\n      }\n      query {\n        orderheaderWithValue(id: $orderheaderId) {\n          worktypeId\n          orderStatusId\n          statusDescription\n          averageLocationValue\n          averageItemValue\n          notes\n          startDate\n          endDate\n          issuedDate\n          area\n          areaId\n          averageItemValue\n          averageLocationValue\n          id\n          itemCount\n          itemCountBoq\n          itemCountVarn\n          itemsComplete\n          itemsCompleteBoq\n          itemsCompleteVarn\n          locationCount\n          locationsComplete\n          statusDescription\n          orderNumber\n          orderValueLabour\n          orderValueMaterials\n          orderValueOther\n          orderValueTotal\n          orderValueTotalApplied\n          orderValueTotalBoq\n          orderValueTotalComplete\n          orderValueTotalVarn\n          projectTitle\n          workType\n          issuedDate\n          documentCount\n          imageCount\n        }\n      }\n    }\n  }\n`;\n\nexport const CALCULATE_ITEM_VALUE = gql`\n  mutation CalculateItemValue(\n    $priceId: Int!\n    $qtyOrdered: BigFloat!\n    $materialsValue: BigFloat!\n  ) {\n    calculateItemValue(\n      input: {\n        priceId: $priceId\n        qtyOrdered: $qtyOrdered\n        materialsValue: $materialsValue\n      }\n    ) {\n      bigFloat\n    }\n  }\n`;\n\nexport const ADD_IMAGE_TO_LOCATION = gql`\n  mutation AddImageToLocation($input: ImageInput!, $orderheaderId: Int!) {\n    createImage(input: { image: $input }) {\n      sitelocation {\n        sitelocationWithValueById {\n          complete\n          id\n          imageCount\n          itemCount\n          itemsComplete\n          orderValue\n          orderheaderId\n          reference\n          valueApplied\n          valueComplete\n          worksheetReference\n        }\n      }\n      query {\n        orderheaderWithValue(id: $orderheaderId) {\n          worktypeId\n          orderStatusId\n          statusDescription\n          averageLocationValue\n          averageItemValue\n          notes\n          startDate\n          endDate\n          issuedDate\n          area\n          areaId\n          averageItemValue\n          averageLocationValue\n          id\n          itemCount\n          itemCountBoq\n          itemCountVarn\n          itemsComplete\n          itemsCompleteBoq\n          itemsCompleteVarn\n          locationCount\n          locationsComplete\n          statusDescription\n          orderNumber\n          orderValueLabour\n          orderValueMaterials\n          orderValueOther\n          orderValueTotal\n          orderValueTotalApplied\n          orderValueTotalBoq\n          orderValueTotalComplete\n          orderValueTotalVarn\n          projectTitle\n          workType\n          issuedDate\n          documentCount\n          imageCount\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_BULK_IMAGES_TO_LOCATION = gql`\n  mutation AddBulkImagesToLocation($input: [ImageInput!]) {\n    mnCreateImage(input: { mnImage: $input }) {\n      sitelocation {\n        sitelocationWithValueById {\n          complete\n          id\n          imageCount\n          itemCount\n          itemsComplete\n          orderValue\n          orderheaderId\n          reference\n          valueApplied\n          valueComplete\n          worksheetReference\n          orderheader {\n            orderheaderWithValueById {\n              worktypeId\n              orderStatusId\n              statusDescription\n              averageLocationValue\n              averageItemValue\n              notes\n              startDate\n              endDate\n              issuedDate\n              area\n              areaId\n              averageItemValue\n              averageLocationValue\n              id\n              itemCount\n              itemCountBoq\n              itemCountVarn\n              itemsComplete\n              itemsCompleteBoq\n              itemsCompleteVarn\n              locationCount\n              locationsComplete\n              statusDescription\n              orderNumber\n              orderValueLabour\n              orderValueMaterials\n              orderValueOther\n              orderValueTotal\n              orderValueTotalApplied\n              orderValueTotalBoq\n              orderValueTotalComplete\n              orderValueTotalVarn\n              projectTitle\n              workType\n              issuedDate\n              documentCount\n              imageCount\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const UPLOAD_DOCUMENTS = gql`\n  mutation UploadDocuments($input: [DocumentInput!]) {\n    mnCreateDocument(input: { mnDocument: $input }) {\n      clientMutationId\n    }\n  }\n`;\nexport const DELETE_GLOBAL_DOCUMENTS = gql`\n  mutation DeleteGlobalDocuments($input: [DocumentPatch!]) {\n    mnDeleteDocument(input: { mnPatch: $input }) {\n      document {\n        id\n      }\n    }\n  }\n`;\n\nexport const UPDATE_PROJECT_GLOBAL_DOCUMENTS = gql`\n  mutation UpdateProjectGlobalDocuments(\n    $additions: [OrderheaderDocumentInput!]\n    $deletions: [OrderheaderDocumentPatch!]\n  ) {\n    mnDeleteOrderheaderDocument(input: { mnPatch: $deletions }) {\n      orderheader {\n        orderheaderWithValueById {\n          worktypeId\n          orderStatusId\n          statusDescription\n          averageLocationValue\n          averageItemValue\n          notes\n          startDate\n          endDate\n          issuedDate\n          area\n          areaId\n          averageItemValue\n          averageLocationValue\n          id\n          itemCount\n          itemCountBoq\n          itemCountVarn\n          itemsComplete\n          itemsCompleteBoq\n          itemsCompleteVarn\n          locationCount\n          locationsComplete\n          statusDescription\n          orderNumber\n          orderValueLabour\n          orderValueMaterials\n          orderValueOther\n          orderValueTotal\n          orderValueTotalApplied\n          orderValueTotalBoq\n          orderValueTotalComplete\n          orderValueTotalVarn\n          projectTitle\n          workType\n          issuedDate\n          documentCount\n          imageCount\n        }\n      }\n    }\n    mnCreateOrderheaderDocument(input: { mnOrderheaderDocument: $additions }) {\n      orderheader {\n        orderheaderWithValueById {\n          worktypeId\n          orderStatusId\n          statusDescription\n          averageLocationValue\n          averageItemValue\n          notes\n          startDate\n          endDate\n          issuedDate\n          area\n          areaId\n          averageItemValue\n          averageLocationValue\n          id\n          itemCount\n          itemCountBoq\n          itemCountVarn\n          itemsComplete\n          itemsCompleteBoq\n          itemsCompleteVarn\n          locationCount\n          locationsComplete\n          statusDescription\n          orderNumber\n          orderValueLabour\n          orderValueMaterials\n          orderValueOther\n          orderValueTotal\n          orderValueTotalApplied\n          orderValueTotalBoq\n          orderValueTotalComplete\n          orderValueTotalVarn\n          projectTitle\n          workType\n          issuedDate\n          documentCount\n          imageCount\n        }\n      }\n    }\n  }\n`;\n\nexport const ADD_ITEMS_TO_APPLICATION = gql`\n  mutation AddItemsToApplication($input: [Int!], $orderId: Int!) {\n    addWorksheetsToApplication(input: { worksheetId: $input }) {\n      query {\n        orderheaderWithValueById(id: $orderId) {\n          worktypeId\n          orderStatusId\n          statusDescription\n          averageLocationValue\n          averageItemValue\n          notes\n          startDate\n          endDate\n          issuedDate\n          area\n          areaId\n          averageItemValue\n          averageLocationValue\n          id\n          itemCount\n          itemCountBoq\n          itemCountVarn\n          itemsComplete\n          itemsCompleteBoq\n          itemsCompleteVarn\n          locationCount\n          locationsComplete\n          statusDescription\n          orderNumber\n          orderValueLabour\n          orderValueMaterials\n          orderValueOther\n          orderValueTotal\n          orderValueTotalApplied\n          orderValueTotalBoq\n          orderValueTotalComplete\n          orderValueTotalVarn\n          projectTitle\n          workType\n          issuedDate\n          documentCount\n          imageCount\n        }\n      }\n    }\n  }\n`;\n\nexport const IMPORT_ORDER_DETAILS = gql`\n  mutation ImportOrderDetails(\n    $importData: [OrderImportInput!]\n    $orderId:Int!\n  ) {\n    wpmGraphqlImportOrderData(\n      input: {\n        orderItem: $importData\n      }\n    ) {\n      orderdetails {\n        orderdetailWithValuesById {\n          nodes {\n            activityCode\n            activityDescription\n            area\n            areaId\n            complete\n            id\n            itemNumber\n            locationReference\n            orderNumber\n            orderheaderId\n            projectTitle\n            qtyApplied\n            qtyComplete\n            qtyOrdered\n            qtyOs\n            typeShort\n            unitPayableTotal\n            valueApplied\n            valueComplete\n            valueOs\n            valuePayableTotal\n            worksheetReference\n            worktype\n          }\n        }\n      }\n      query {\n        orderheaderWithValueById(id: $orderId) {\n          worktypeId\n          orderStatusId\n          statusDescription\n          averageLocationValue\n          averageItemValue\n          notes\n          startDate\n          endDate\n          issuedDate\n          area\n          areaId\n          averageItemValue\n          averageLocationValue\n          id\n          itemCount\n          itemCountBoq\n          itemCountVarn\n          itemsComplete\n          itemsCompleteBoq\n          itemsCompleteVarn\n          locationCount\n          locationsComplete\n          statusDescription\n          orderNumber\n          orderValueLabour\n          orderValueMaterials\n          orderValueOther\n          orderValueTotal\n          orderValueTotalApplied\n          orderValueTotalBoq\n          orderValueTotalComplete\n          orderValueTotalVarn\n          projectTitle\n          workType\n          issuedDate\n          documentCount\n          imageCount\n        }\n      }\n    }\n  }\n`\n","import React from \"react\";\n\nexport const useYupValidationResolver = (validationSchema) =>\n    React.useCallback(\n        async (data) => {\n            try {\n                const values = await validationSchema.validate(data, {\n                    abortEarly: false,\n                });\n\n                return {\n                    values,\n                    errors: {},\n                };\n            } catch (errors) {\n                return {\n                    values: {},\n                    errors: errors.inner.reduce(\n                        (allErrors, currentError) => ({\n                            ...allErrors,\n                            [currentError.path]: {\n                                type: currentError.type ?? 'validation',\n                                message: currentError.message,\n                            },\n                        }),\n                        {},\n                    ),\n                };\n            }\n        },\n        [validationSchema],\n    );","/** @format */\n\nimport {gql} from \"@apollo/client\";\n\nexport const GET_ALL_PROJECT_SUMMARIES = gql`\n  query GetAllProjectSummaries {\n    orderheaderWithValues {\n      nodes {\n        worktypeId\n        orderStatusId\n        statusDescription\n        averageLocationValue\n        averageItemValue\n        notes\n        startDate\n        endDate\n        issuedDate\n        area\n        areaId\n        averageItemValue\n        averageLocationValue\n        id\n        itemCount\n        itemCountBoq\n        itemCountVarn\n        itemsComplete\n        itemsCompleteBoq\n        itemsCompleteVarn\n        locationCount\n        locationsComplete\n        statusDescription\n        orderNumber\n        orderValueLabour\n        orderValueMaterials\n        orderValueOther\n        orderValueTotal\n        orderValueTotalApplied\n        orderValueTotalBoq\n        orderValueTotalComplete\n        orderValueTotalVarn\n        projectTitle\n        workType\n        issuedDate\n        documentCount\n        imageCount\n      }\n    }\n  }\n`;\n\nexport const GET_ALL_PROJECT_NUMBERS = gql`\n  query GetAllProjectNumbers {\n    orderheaderWithValues {\n      nodes {\n        orderNumber\n      }\n    }\n  }\n`;\n\nexport const GET_SINGLE_PROJECT_HEADER = gql`\n  query GetSingleProjectHeader($id: Int!) {\n    orderheaderWithValue(id: $id) {\n      worktypeId\n      orderStatusId\n      statusDescription\n      averageLocationValue\n      averageItemValue\n      notes\n      startDate\n      endDate\n      issuedDate\n      area\n      areaId\n      averageItemValue\n      averageLocationValue\n      id\n      itemCount\n      itemCountBoq\n      itemCountVarn\n      itemsComplete\n      itemsCompleteBoq\n      itemsCompleteVarn\n      locationCount\n      locationsComplete\n      statusDescription\n      orderNumber\n      orderValueLabour\n      orderValueMaterials\n      orderValueOther\n      orderValueTotal\n      orderValueTotalApplied\n      orderValueTotalBoq\n      orderValueTotalComplete\n      orderValueTotalVarn\n      projectTitle\n      workType\n      issuedDate\n      documentCount\n      imageCount\n    }\n  }\n`;\n\nexport const READ_SINGLE_PROJECT_SUMMARY = gql`\n  fragment ProjectHeader on OrderheaderWithValue {\n    worktypeId\n    orderStatusId\n    statusDescription\n    averageLocationValue\n    averageItemValue\n    notes\n    startDate\n    endDate\n    issuedDate\n    area\n    areaId\n    averageItemValue\n    averageLocationValue\n    id\n    itemCount\n    itemCountBoq\n    itemCountVarn\n    itemsComplete\n    itemsCompleteBoq\n    itemsCompleteVarn\n    locationCount\n    locationsComplete\n    statusDescription\n    orderNumber\n    orderValueLabour\n    orderValueMaterials\n    orderValueOther\n    orderValueTotal\n    orderValueTotalApplied\n    orderValueTotalBoq\n    orderValueTotalComplete\n    orderValueTotalVarn\n    projectTitle\n    workType\n    issuedDate\n    documentCount\n    imageCount\n  }\n`;\n\n\nexport const VALIDATE_PROJECT_IMPORT_DATA = gql`\n  query ValidateProjectImportData(\n    $importData: ProjectImportValidationDatumInput!\n    $orderId: Int!\n  ){\n    validateProjectImportData(importData: $importData, orderId: $orderId) {\n\n      isDataValid\n      validationChecks {\n        itemsValid\n        activitiesValid\n        activitiesMissing\n        activitiesSubmitted\n        activitiesExisting\n        locationsValid\n        locationsSubmitted\n        locationsExisting\n        itemsSubmitted\n        itemsExisting\n      }\n    }\n  }\n`","/** @format */\n\nimport {useApolloClient, useMutation, useQuery} from '@apollo/client';\nimport {Box, Button, DialogActions, DialogContent, Divider, Grid, TextField,} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport React from 'react';\nimport {useFieldArray, useForm} from 'react-hook-form';\nimport {CREATE_BULK_LOCATIONS} from '../../../api-calls/mutations/project-mutations';\nimport {GET_PROJECT_LOCATIONS, READ_LOCATION_REFERENCES,} from '../../../api-calls/queries/locations';\nimport {gridSelectionsVar} from '../../../cache';\nimport * as yup from 'yup';\nimport {useYupValidationResolver} from '../components/validation';\nimport {GET_SINGLE_PROJECT_HEADER} from '../../../api-calls/queries/projects';\nimport {useParams} from \"react-router-dom\";\n\nconst CreateProjectLocationForm = ({hideModal, id}) => {\n\tconst client = useApolloClient();\n\tconst addLocationButtonRef = React.useRef();\n\n\tconst selectedProject = gridSelectionsVar().selectedOrder;\n\n\t/*const {sitelocationWithValues} = client.readQuery({\n\t\tquery: READ_LOCATION_REFERENCES,\n\t\tvariables: {id:id},\n\t});*/\n\tconsole.log(id)\n\t/*const formSchema = {\n\t\treference: yup.string().notOneOf(\n\t\t\tsitelocationWithValues.nodes.map((x) => x.reference),\n\t\t\t'Location Reference Already Exists!',\n\t\t),\n\t};\n\n\tconst projectLocationSchema = yup.object().shape({\n\t\tlocation: yup.array().of(yup.object().shape(formSchema)),\n\t});\n\n\tconst resolver = useYupValidationResolver(projectLocationSchema);\n*/\n\tconst {\n\t\twatch,\n\t\tregister,\n\t\thandleSubmit,\n\t\treset,\n\t\tcontrol,\n\t\tsetFocus,\n\t\tformState: {errors},\n\t} = useForm({\n\t\tdefaultValues: {location: [{reference: ''}]},\n\t\tmode: 'onTouched',\n\t//\tresolver: resolver,\n\t});\n\n\tconst {fields, append, remove} = useFieldArray({\n\t\tcontrol,\n\t\tname: 'location',\n\t});\n\n\tconst watchReference = watch();\n\n\tconst [createProjectLocation] = useMutation(CREATE_BULK_LOCATIONS, {\n\t\tupdate: (cache, result) => {\n\t\t\tconst locationData = cache.readQuery({\n\t\t\t\tquery: GET_PROJECT_LOCATIONS,\n\t\t\t\tvariables: {id: selectedProject.id},\n\t\t\t});\n\n\t\t\tconst newLocations =\n\t\t\t\tresult.data.sitelocationCreateBulkLocations.sitelocations.map(\n\t\t\t\t\t(item) => item.sitelocationWithValueById,\n\t\t\t\t);\n\n\t\t\tconst updatedProject = result.data.sitelocationCreateBulkLocations.query;\n\n\t\t\tcache.writeQuery({\n\t\t\t\tquery: GET_PROJECT_LOCATIONS,\n\t\t\t\tvariables: {id: selectedProject.id},\n\t\t\t\tdata: {\n\t\t\t\t\tsitelocationWithValues: {\n\t\t\t\t\t\tnodes: [\n\t\t\t\t\t\t\t...locationData.sitelocationWithValues.nodes,\n\t\t\t\t\t\t\t...newLocations,\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t});\n\t\t\tcache.writeQuery({\n\t\t\t\tquery: GET_SINGLE_PROJECT_HEADER,\n\t\t\t\tvariables: {id: selectedProject.id},\n\t\t\t\tdata: updatedProject,\n\t\t\t});\n\t\t},\n\t\tonCompleted: () => {\n\t\t\thideModal();\n\t\t},\n\t});\n\n\tconst onSubmit = ({location}) => {\n\t\tconst locationData = location.map((item) => ({\n\t\t\treference: item.reference,\n\t\t\torderheaderId: selectedProject.id,\n\t\t}));\n\n\t\tcreateProjectLocation({\n\t\t\tvariables: {\n\t\t\t\tinput: locationData,\n\t\t\t\torderheaderId: selectedProject.id,\n\t\t\t},\n\t\t});\n\t};\n\n\tReact.useEffect(() => setFocus('location[0].reference'), [setFocus]);\n\n\treturn (\n\t\t<Box>\n\t\t\t<DialogContent>\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t<Grid container spacing={2}>\n\t\t\t\t\t\t{fields.map((field, index) => (\n\t\t\t\t\t\t\t<React.Fragment key={field.id}>\n\t\t\t\t\t\t\t\t<Grid item xs={9}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t{...register(`location.${index}.reference`)}\n\t\t\t\t\t\t\t\t\t\tlabel={'Location Reference'}\n\t\t\t\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tonBlur={() => addLocationButtonRef.current.focus()}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={3}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tsx={{height: '100%', borderRadius: 0, border: 0}}\n\t\t\t\t\t\t\t\t\t\tcolor='delete'\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tonClick={() => remove(index)}>\n\t\t\t\t\t\t\t\t\t\tdelete\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t\t\t\t{errors[`location[${index}].reference`] && (\n\t\t\t\t\t\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t\t\t\t\t\t{errors[`location[${index}].reference`].message}\n\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t</DialogContent>\n\t\t\t<Divider/>\n\t\t\t<DialogActions>\n\t\t\t\t<Grid container p={2} spacing={2} columns={4}>\n\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tonClick={hideModal}\n\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\tsx={{borderRadius: 0, border: 1, height: '100%'}}>\n\t\t\t\t\t\t\tclose\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tcolor='cancel'\n\t\t\t\t\t\t\tonClick={() => reset()}\n\t\t\t\t\t\t\tsx={{borderRadius: 0, border: 1, height: '100%'}}>\n\t\t\t\t\t\t\treset\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisabled={\n\t\t\t\t\t\t\t\twatchReference.location[watchReference.location.length - 1]\n\t\t\t\t\t\t\t\t\t.reference === ''\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tref={addLocationButtonRef}\n\t\t\t\t\t\t\tsx={{height: '100%', borderRadius: 0, border: 1}}\n\t\t\t\t\t\t\tcolor='create'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tstartIcon={<AddIcon/>}\n\t\t\t\t\t\t\tonClick={() => append({reference: ''})}>\n\t\t\t\t\t\t\tadd another\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tcolor='submit'\n\t\t\t\t\t\t\tonClick={handleSubmit(onSubmit)}\n\t\t\t\t\t\t\tsx={{borderRadius: 0, border: 1, height: '100%'}}>\n\t\t\t\t\t\t\tsubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</DialogActions>\n\t\t</Box>\n\t);\n};\n\nexport default CreateProjectLocationForm;\n","/** @format */\n\nimport {useReactiveVar} from '@apollo/client';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport {Box, Button, Dialog, DialogTitle, IconButton} from '@mui/material';\nimport {useModal} from 'react-modal-hook';\nimport {gridSelectionsVar} from '../../../../cache';\nimport CreateProjectLocationForm from '../../../forms/locations/CreateProjectLocationForm';\n\nconst CreateProjectLocation = ({id}) => {\n\tconst selectedLocation = useReactiveVar(gridSelectionsVar).selectedLocation;\n\tconst [showModal, hideModal] = useModal(() => (\n\t\t<Dialog onClose={hideModal} maxWidth='xl' fullWidth open={true}>\n\t\t\t<DialogTitle id='id'>\n\t\t\t\t<Box display='flex' alignItems='center'>\n\t\t\t\t\t<Box flexGrow={1}>CREATE PROJECT LOCATION</Box>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<IconButton onClick={hideModal}>\n\t\t\t\t\t\t\t<CloseIcon/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</DialogTitle>\n\n\t\t\t<CreateProjectLocationForm hideModal={hideModal} id={id}/>\n\t\t</Dialog>\n\t));\n\n\treturn (\n\t\t<Button\n\t\t\tcolor='create'\n\t\t\tonClick={showModal}\n\t\t\tdisabled={selectedLocation !== false}\n\t\t\tstartIcon={<AddIcon/>}>\n\t\t\tcreate project location\n\t\t</Button>\n\t);\n};\n\nexport default CreateProjectLocation;\n","/** @format */\n\nimport {useMutation, useReactiveVar} from '@apollo/client';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {Button} from '@mui/material';\nimport {useConfirm} from 'material-ui-confirm';\nimport {useNavigate} from 'react-router-dom';\nimport {DELETE_MANY_LOCATIONS} from '../../../../api-calls/mutations/project-mutations';\nimport {GET_PROJECT_LOCATIONS} from '../../../../api-calls/queries/locations';\nimport {gridSelectionsVar} from '../../../../cache';\nimport { useParams } from 'react-router-dom';\n\nconst DeleteProjectLocation = () => {\n\tconst selectedLocation = useReactiveVar(gridSelectionsVar).selectedLocation;\n\tconst selectedProject = useReactiveVar(gridSelectionsVar).selectedOrder;\n\tconst { id } = useParams();\n\tconst confirm = useConfirm();\n\tconst navigate = useNavigate();\n\n\tconst [deleteProjectLocations] = useMutation(DELETE_MANY_LOCATIONS, {\n\t\trefetchQueries: [\n\t\t\t{\n\t\t\t\tquery: GET_PROJECT_LOCATIONS,\n\t\t\t\tvariables: {id: Number(id)},\n\t\t\t},\n\t\t],\n\t\tawaitRefetchQueries: true,\n\t\tonCompleted: () => navigate(`/projects/processing/${id}/locations`),\n\t});\n\n\tconst handleDeleteProjectLocations = () => {\n\t\tconst locations = selectedLocation.map((item) => ({id: item.id}));\n\t\tconfirm({\n\t\t\ttitle: 'Confirm Delete Location',\n\t\t\ttitleProps: {color: 'red', fontWeight: 'bold'},\n\t\t\tdescription: `This Will Permanently Delete The ${\n\t\t\t\tselectedLocation.length\n\t\t\t} Locations(s) Selected and ${selectedLocation\n\t\t\t\t.map((item) => Number(item.itemCount))\n\t\t\t\t.reduce((total, num) => total + num)} Associated Item(s)`,\n\t\t\tconfirmationText: 'Delete',\n\t\t\tcancellationButtonProps: {color: 'secondary'},\n\t\t\tconfirmationButtonProps: {autoFocus: true, color: 'delete'},\n\t\t\tallowClose: false,\n\t\t})\n\t\t\t.then(() =>\n\t\t\t\tdeleteProjectLocations({\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\tinput: locations,\n\t\t\t\t\t\tid: selectedProject.id,\n\t\t\t\t\t},\n\t\t\t\t}).then(() =>\n\t\t\t\t\tgridSelectionsVar({\n\t\t\t\t\t\t...gridSelectionsVar(),\n\t\t\t\t\t\tselectedLocation: false,\n\t\t\t\t\t}),\n\t\t\t\t),\n\t\t\t)\n\t\t\t.catch(() => console.log('submission cancelled'));\n\t};\n\n\treturn (\n\t\t<Button\n\t\t\tdisabled={\n\t\t\t\tselectedLocation === false ||\n\t\t\t\tselectedLocation\n\t\t\t\t\t.map((item) => Number(item.valueComplete))\n\t\t\t\t\t.reduce((total, num) => total + num) > 0\n\t\t\t}\n\t\t\tonClick={handleDeleteProjectLocations}\n\t\t\tstartIcon={<DeleteIcon/>}\n\t\t\tcolor='delete'>\n\t\t\tdelete location\n\t\t</Button>\n\t);\n};\n\nexport default DeleteProjectLocation;\n","/** @format */\n\nimport React from 'react';\nimport {useQuery} from '@apollo/client';\nimport {Autocomplete, TextField} from '@mui/material';\nimport {GET_ITEM_TYPES} from '../../../api-calls/queries/misc';\nimport {Controller} from 'react-hook-form';\n\nconst SelectItemType = ({control, index}) => {\n\tconst [open, setOpen] = React.useState(false);\n\tconst [itemTypes, setItemTypes] = React.useState();\n\tconst {loading} = useQuery(GET_ITEM_TYPES, {\n\t\tonCompleted: (data) => setItemTypes(data.itemTypes.nodes),\n\t});\n\n\treturn (\n\t\t<Controller\n\t\t\tcontrol={control}\n\t\t\tname={`item.${index}.itemTypeId`}\n\t\t\trender={({field: {ref, onChange, ...field}}) => (\n\t\t\t\t<Autocomplete\n\t\t\t\t\topenOnFocus\n\t\t\t\t\tautoSelect\n\t\t\t\t\tautoHighlight\n\t\t\t\t\tsize='small'\n\t\t\t\t\toptions={itemTypes}\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tdisableClearable\n\t\t\t\t\tfullWidth\n\t\t\t\t\tgetOptionLabel={(option) => option.typeShort}\n\t\t\t\t\tonChange={(_, data) => onChange(data.id)}\n\t\t\t\t\topen={open}\n\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t}}\n\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\tsetOpen(false);\n\t\t\t\t\t}}\n\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\tlabel='Item Type'\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n\t);\n};\n\nexport default SelectItemType;\n","/** @format */\n\nimport React from 'react';\nimport {useQuery} from '@apollo/client';\nimport {Autocomplete, Grid, TextField} from '@mui/material';\nimport {GET_RATESET_HEADERS} from '../../../api-calls/queries/misc';\nimport {Controller} from 'react-hook-form';\n\nconst SelectRateset = ({\n\t\t\t\t\t\t   control,\n\t\t\t\t\t\t   index,\n\t\t\t\t\t\t   getActivities,\n\t\t\t\t\t\t   activitiesLoading,\n\t\t\t\t\t\t   activityCodes,\n\t\t\t\t\t   }) => {\n\tconst [ratesetOpen, setRatesetOpen] = React.useState(false);\n\tconst [rateset, setRateset] = React.useState([\n\t\t{\n\t\t\tdescription: 'Contract Tendered Rates',\n\t\t\tid: 1,\n\t\t\t__typename: 'RatesetHeader',\n\t\t},\n\t]);\n\tconst [activityCodeOpen, setActivityCodeOpen] = React.useState(false);\n\n\tconst {loading: ratesetLoading} = useQuery(GET_RATESET_HEADERS, {\n\t\tonCompleted: (data) => setRateset(data.ratesetHeaders.nodes),\n\t});\n\n\tconst handleRatesetChange = (data) => {\n\t\tconsole.log(data, rateset);\n\t\tgetActivities({\n\t\t\tvariables: {id: data.id},\n\t\t});\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Grid item xs={2}>\n\t\t\t\t<Autocomplete\n\t\t\t\t\tautoHighlight\n\t\t\t\t\topenOnFocus\n\t\t\t\t\tsize='small'\n\t\t\t\t\toptions={rateset}\n\t\t\t\t\tloading={ratesetLoading}\n\t\t\t\t\tdisableClearable\n\t\t\t\t\tfullWidth\n\t\t\t\t\tgetOptionLabel={(option) => option.description}\n\t\t\t\t\tonChange={(_, data) => {\n\t\t\t\t\t\thandleRatesetChange(data);\n\t\t\t\t\t}}\n\t\t\t\t\topen={ratesetOpen}\n\t\t\t\t\t//openOnFocus\n\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\tsetRatesetOpen(true);\n\t\t\t\t\t}}\n\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\tsetRatesetOpen(false);\n\t\t\t\t\t}}\n\t\t\t\t\tdefaultValue={{\n\t\t\t\t\t\tdescription: 'Contract Tendered Rates',\n\t\t\t\t\t\tid: 1,\n\t\t\t\t\t\t__typename: 'RatesetHeader',\n\t\t\t\t\t}}\n\t\t\t\t\tisOptionEqualToValue={(option, value) => option.id === value.id}\n\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t<TextField {...params} variant='filled' label='Rateset'/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={4}>\n\t\t\t\t<Controller\n\t\t\t\t\tcontrol={control}\n\t\t\t\t\tname={`item.${index}.ratesetPriceId`}\n\t\t\t\t\trender={({field: {ref, onChange, ...field}}) => (\n\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\topenOnFocus\n\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\tdisabled={activityCodes.length === 0}\n\t\t\t\t\t\t\toptions={activityCodes}\n\t\t\t\t\t\t\tloading={activitiesLoading}\n\t\t\t\t\t\t\tdisableClearable\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tgetOptionLabel={(option) =>\n\t\t\t\t\t\t\t\toption.activitycode.activityCode +\n\t\t\t\t\t\t\t\t':  ' +\n\t\t\t\t\t\t\t\toption.activitycode.activityDescription\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonChange={(_, data) => onChange(data.id)}\n\t\t\t\t\t\t\topen={activityCodeOpen}\n\t\t\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\t\t\tsetActivityCodeOpen(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\t\tsetActivityCodeOpen(false);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\t\t\tlabel='Activity Code'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t/>\n\t\t\t</Grid>\n\t\t</>\n\t);\n};\n\nexport default SelectRateset;\n","/** @format */\n\nimport * as yup from 'yup';\n\nexport const existingProjects = (existing) =>\n\texisting.map((x) => x.orderNumber);\n\nexport const projectHeaderSchema = yup.object().shape({\n\torderNumber: yup.string().required().length(7),\n\tprojectTitle: yup.string().required(),\n\tareaId: yup.number().required(),\n\tworktypeId: yup.number().required(),\n\torderStatusId: yup.number().required(),\n});\n\nexport const projectItemSchema = yup.object().shape({\n\titem: yup.array().of(\n\t\tyup.object().shape({\n\t\t\titemNumber: yup.number('Must Be A Number').required(),\n\t\t\titemTypeId: yup.number().required(),\n\t\t\tpackNumber: yup.string(),\n\t\t\tqtyOrdered: yup.number().required(),\n\t\t\tratesetPriceId: yup.number().required(),\n\t\t\tvalueBaseMaterials: yup.number().required(),\n\t\t}),\n\t),\n});\n","/** @format */\n\nimport React from 'react';\nimport {Button, DialogActions, DialogContent, Divider, Grid, TextField,} from '@mui/material';\nimport {GET_RATESET_PRICES} from '../../../api-calls/queries/misc';\nimport {useFieldArray, useForm} from 'react-hook-form';\nimport {useLazyQuery, useMutation, useQuery} from '@apollo/client';\nimport {GET_PROJECT_ITEM_NUMBERS} from '../../../api-calls/queries/items';\nimport {GET_SINGLE_PROJECT_HEADER} from '../../../api-calls/queries/projects';\nimport {ADD_BULK_ITEMS_TO_LOCATION, CALCULATE_ITEM_VALUE,} from '../../../api-calls/mutations/project-mutations';\nimport {useConfirm} from 'material-ui-confirm';\nimport {gridSelectionsVar} from '../../../cache';\nimport {useYupValidationResolver} from '../components/validation';\nimport SelectItemType from '../components/SelectItemType';\nimport SelectRateset from '../components/SelectRateset';\nimport {formatNumberTwoDecimals} from '../../../functions/formattingFunctions';\nimport AddIcon from '@mui/icons-material/Add';\nimport {projectItemSchema} from '../validation';\nimport {GET_SINGLE_LOCATION} from '../../../api-calls/queries/locations';\n\nconst AddItemsToLocationForm = ({hideModal}) => {\n\tconst selectedProject = gridSelectionsVar().selectedOrder;\n\tconst selectedLocation = gridSelectionsVar().selectedLocation[0];\n\tconst [itemNumbers, setItemNumbers] = React.useState([]);\n\tconst [activityCodes, setActivityCodes] = React.useState([]);\n\tconst resolver = useYupValidationResolver(projectItemSchema);\n\n\tconst addItemButtonRef = React.useRef();\n\tconst confirm = useConfirm();\n\n\tconst {loading: itemNumbersLoading} = useQuery(GET_PROJECT_ITEM_NUMBERS, {\n\t\tvariables: {id: selectedProject.id},\n\t\tfetchPolicy: 'cache-and-network',\n\t\tonCompleted: (data) => {\n\t\t\tsetItemNumbers(\n\t\t\t\tdata.orderdetails.nodes.map((x) => parseFloat(x.itemNumber)),\n\t\t\t);\n\n\t\t},\n\t});\n\n\tconst [getActivities, {loading: activitiesLoading}] = useLazyQuery(\n\t\tGET_RATESET_PRICES,\n\t\t{\n\t\t\tfetchPolicy: 'cache-and-network',\n\t\t\tonCompleted: (data) => {\n\t\t\t\tsetActivityCodes(data.ratesetPrices.nodes);\n\t\t\t},\n\t\t},\n\t);\n\n\tconst {\n\t\thandleSubmit,\n\t\tcontrol,\n\t\tregister,\n\t\tgetValues,\n\t\tsetValue,\n\t\treset,\n\t\tsetFocus,\n\t\tformState: {errors},\n\t} = useForm({\n\t\tmode: 'onSubmit',\n\t\tresolver: resolver,\n\t\tdefaultValues: {\n\t\t\titem: [\n\t\t\t\t{\n\t\t\t\t\tqtyOrdered: '0.00',\n\t\t\t\t\tvalueBaseMaterials: '0.00',\n\t\t\t\t\tpackNumber: '',\n\t\t\t\t\titemTypeId: '',\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t});\n\n\tconst {fields, append, remove} = useFieldArray({\n\t\tcontrol,\n\t\tname: 'item',\n\t});\n\n\tReact.useEffect(() => {\n\t\tif (!itemNumbersLoading) setFocus('item[0].itemNumber');\n\t}, [setFocus, itemNumbersLoading]);\n\n\tconst [createLocationItems] = useMutation(ADD_BULK_ITEMS_TO_LOCATION, {\n\t\tupdate: (cache, result) => {\n\t\t\tconst updatedLocation =\n\t\t\t\tresult.data.mnCreateOrderdetail.query.sitelocationWithValueById;\n\t\t\tconst updatedProject =\n\t\t\t\tresult.data.mnCreateOrderdetail.query.orderheaderWithValue;\n\t\t\tconst locationData = cache.readQuery({\n\t\t\t\tquery: GET_SINGLE_LOCATION,\n\t\t\t\tvariables: {id: selectedLocation.id},\n\t\t\t});\n\t\t\tconst projectData = cache.readQuery({\n\t\t\t\tquery: GET_SINGLE_PROJECT_HEADER,\n\t\t\t\tvariables: {id: selectedProject.id},\n\t\t\t});\n\t\t\tcache.writeQuery(\n\t\t\t\t{\n\t\t\t\t\tquery: GET_SINGLE_LOCATION,\n\t\t\t\t\tvariables: {id: selectedLocation.id},\n\t\t\t\t\t[locationData]: {\n\t\t\t\t\t\tsitelocationWithValue: updatedLocation,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tquery: GET_SINGLE_PROJECT_HEADER,\n\t\t\t\t\tvariables: {id: selectedProject.id},\n\t\t\t\t\t[projectData]: {\n\t\t\t\t\t\torderheaderWithValue: updatedProject,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t);\n\t\t},\n\t});\n\n\tconst [calculateItemValue] = useMutation(CALCULATE_ITEM_VALUE);\n\n\tconst onSubmit = (data) => {\n\t\tconst {item} = data;\n\t\tconst totalValue = item\n\t\t\t.map((x) => parseFloat(x.itemValue.replace(/,/g, '')))\n\t\t\t.reduce((tot, num) => tot + num);\n\t\tconst submissionData = item.map((x) => ({\n\t\t\titemNumber: x.itemNumber,\n\t\t\titemTypeId: x.itemTypeId,\n\t\t\torderheaderId: selectedProject.id,\n\t\t\tpackNumber: x.packNumber,\n\t\t\tqtyOrdered: x.qtyOrdered,\n\t\t\tratesetPriceId: x.ratesetPriceId,\n\t\t\tsitelocationId: selectedLocation.id,\n\t\t\tvalueBaseMaterials: x.valueBaseMaterials,\n\t\t}));\n\t\tconfirm({\n\t\t\ttitle: 'Confirm Data Submission',\n\t\t\ttitleProps: {color: 'red', fontWeight: 'bold'},\n\t\t\tcontent: `Submission Contains ${\n\t\t\t\titem.length\n\t\t\t} Item(s) With A Value of ${totalValue.toLocaleString()}`,\n\t\t\tconfirmationText: 'Submit',\n\t\t\tcancellationButtonProps: {color: 'secondary'},\n\t\t\tallowClose: false,\n\t\t\tcontentProps: {fontWeight: 'bold'},\n\t\t})\n\t\t\t.then(() =>\n\t\t\t\tcreateLocationItems({\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\tinput: submissionData,\n\t\t\t\t\t\tlocationId: selectedLocation.id,\n\t\t\t\t\t\torderheaderId: selectedProject.id,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.then(() => {\n\t\t\t\tgridSelectionsVar({...gridSelectionsVar(), selectedLocation: false});\n\t\t\t\thideModal();\n\t\t\t});\n\t\tconsole.log(data, item, totalValue);\n\t};\n\n\tif (errors) {\n\t\tconsole.log(errors);\n\t}\n\n\tconst getValue = (index) => {\n\t\tconst {item} = getValues();\n\t\tconst data = item[index];\n\t\tconsole.log(data);\n\t\tcalculateItemValue({\n\t\t\tvariables: {\n\t\t\t\tpriceId: data.ratesetPriceId,\n\t\t\t\tqtyOrdered: data.qtyOrdered,\n\t\t\t\tmaterialsValue: data.valueBaseMaterials,\n\t\t\t\tratesetPriceId: '',\n\t\t\t},\n\t\t})\n\t\t\t.then((r) =>\n\t\t\t\tsetValue(\n\t\t\t\t\t`item.${index}.itemValue`,\n\t\t\t\t\tformatNumberTwoDecimals(r.data.calculateItemValue.bigFloat),\n\t\t\t\t),\n\t\t\t)\n\t\t\t.then(addItemButtonRef.current.focus());\n\t};\n\n\tconst handleAppendItem = () => {\n\t\tconst {item} = getValues();\n\t\tconst thisItemNumber = item[item.length - 1].itemNumber;\n\t\tappend({itemNumber: Number(thisItemNumber) + 1});\n\t};\n\tif (itemNumbersLoading) return null;\n\treturn (\n\t\t<>\n\t\t\t<DialogContent>\n\t\t\t\t<form>\n\t\t\t\t\t<Grid container columnSpacing={2} rowSpacing={3} columns={14}>\n\t\t\t\t\t\t{fields.map((field, index) => (\n\t\t\t\t\t\t\t<React.Fragment key={field.id}>\n\t\t\t\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t{...register(`item.${index}.itemNumber`)}\n\t\t\t\t\t\t\t\t\t\tlabel={'Item Number'}\n\t\t\t\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t\tdefaultValue={\n\t\t\t\t\t\t\t\t\t\t\titemNumbers.length === 0\n\t\t\t\t\t\t\t\t\t\t\t\t? 1\n\t\t\t\t\t\t\t\t\t\t\t\t: Number(Math.max(...itemNumbers)) + 1\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t\t\t\t<SelectItemType control={control} index={index}/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t{...register(`item.${index}.qtyOrdered`)}\n\t\t\t\t\t\t\t\t\t\tlabel={'Qty Ordered'}\n\t\t\t\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<SelectRateset\n\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\tindex={index}\n\t\t\t\t\t\t\t\t\tgetActivities={getActivities}\n\t\t\t\t\t\t\t\t\tactivitiesLoading={activitiesLoading}\n\t\t\t\t\t\t\t\t\tactivityCodes={activityCodes}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t{...register(`item.${index}.valueBaseMaterials`)}\n\t\t\t\t\t\t\t\t\t\tlabel={'Materials Base Value'}\n\t\t\t\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t{...register(`item.${index}.packNumber`)}\n\t\t\t\t\t\t\t\t\t\tlabel={'Pack Number'}\n\t\t\t\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tsx={{height: '100%', borderRadius: 0, border: 1}}\n\t\t\t\t\t\t\t\t\t\tcolor='action'\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tonClick={() => getValue(index)}>\n\t\t\t\t\t\t\t\t\t\tget value\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\tInputProps={{\n\t\t\t\t\t\t\t\t\t\t\treadOnly: true,\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t{...register(`item.${index}.itemValue`)}\n\t\t\t\t\t\t\t\t\t\tlabel={'Item Value'}\n\t\t\t\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tsize='small'\n\t\t\t\t\t\t\t\t\t\tdefaultValue={'0.00'}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tsx={{height: '100%', borderRadius: 0, border: 1}}\n\t\t\t\t\t\t\t\t\t\tcolor='delete'\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tonClick={() => remove(index)}>\n\t\t\t\t\t\t\t\t\t\tremove\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t</React.Fragment>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</Grid>\n\t\t\t\t</form>\n\t\t\t</DialogContent>\n\t\t\t<Divider/>\n\t\t\t<DialogActions>\n\t\t\t\t<Grid container p={2} spacing={2} columns={4}>\n\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tonClick={hideModal}\n\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\tsx={{borderRadius: 0, border: 1, height: '100%'}}>\n\t\t\t\t\t\t\tclose\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tcolor='cancel'\n\t\t\t\t\t\t\tonClick={() => reset()}\n\t\t\t\t\t\t\tsx={{borderRadius: 0, border: 1, height: '100%'}}>\n\t\t\t\t\t\t\treset\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tref={addItemButtonRef}\n\t\t\t\t\t\t\tsx={{height: '100%', borderRadius: 0, border: 1}}\n\t\t\t\t\t\t\tcolor='create'\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tstartIcon={<AddIcon/>}\n\t\t\t\t\t\t\tonClick={handleAppendItem}>\n\t\t\t\t\t\t\tadd another\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={1}>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\tcolor='submit'\n\t\t\t\t\t\t\tonClick={handleSubmit(onSubmit)}\n\t\t\t\t\t\t\tsx={{borderRadius: 0, border: 1, height: '100%'}}>\n\t\t\t\t\t\t\tsubmit\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</DialogActions>\n\t\t</>\n\t);\n};\n\nexport default AddItemsToLocationForm;\n","/** @format */\n\nimport React from 'react';\nimport {useModal} from 'react-modal-hook';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport {Box, Button, Dialog, DialogTitle, Divider, IconButton,} from '@mui/material';\n\nimport {useReactiveVar} from '@apollo/client';\nimport {gridSelectionsVar} from '../../../../cache';\nimport AddItemsToLocationForm from '../../../forms/items/AddItemsToLocationForm';\n\nconst AddItemsToLocation = () => {\n\tconst selectedLocation = useReactiveVar(gridSelectionsVar).selectedLocation;\n\tconst selectedProject = useReactiveVar(gridSelectionsVar).selectedOrder;\n\tconst multipleSelections = selectedLocation.length > 1;\n\n\tconst [showModal, hideModal] = useModal(\n\t\t() => (\n\t\t\t<Dialog\n\t\t\t\tonClose={() => {\n\t\t\t\t\thideModal();\n\t\t\t\t}}\n\t\t\t\tfullScreen\n\t\t\t\topen={true}>\n\t\t\t\t<DialogTitle id='id'>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tdisplay='flex'\n\t\t\t\t\t\talignItems='center'\n\t\t\t\t\t\tjustifyContent='space-between'>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\tsx={{textTransform: 'uppercase', fontWeight: 'bold'}}>\n\t\t\t\t\t\t\tCREATE ITEMS FOR PROJECT : {selectedProject.projectTitle}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\tsx={{textTransform: 'uppercase', fontWeight: 'bold'}}>\n\t\t\t\t\t\t\tWORKSHEET REFERENCE : {selectedLocation[0].worksheetReference}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\tsx={{textTransform: 'uppercase', fontWeight: 'bold'}}>\n\t\t\t\t\t\t\tLOCATION REFERENCE : {selectedLocation[0].reference}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<IconButton onClick={hideModal}>\n\t\t\t\t\t\t\t\t<CloseIcon/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</DialogTitle>\n\t\t\t\t<Divider/>\n\n\t\t\t\t<AddItemsToLocationForm hideModal={hideModal}/>\n\t\t\t</Dialog>\n\t\t),\n\t\t[selectedLocation, selectedProject],\n\t);\n\treturn (\n\t\t<Button\n\t\t\tonClick={showModal}\n\t\t\tcolor='create'\n\t\t\tstartIcon={<AddIcon/>}\n\t\t\tdisabled={selectedLocation === false || multipleSelections}>\n\t\t\tadd items to location\n\t\t</Button>\n\t);\n};\n\nexport default AddItemsToLocation;\n","/** @format */\n\nimport React from 'react';\nimport {useQuery} from '@apollo/client';\nimport {GET_IMAGE_TYPES} from '../../../api-calls/queries/misc';\nimport {Controller} from 'react-hook-form';\nimport {Autocomplete, TextField} from '@mui/material';\n\nconst SelectImageType = ({control, index}) => {\n\tconst [open, setOpen] = React.useState(false);\n\tconst {data, loading} = useQuery(GET_IMAGE_TYPES);\n\tconst fieldName = `image.${index}.imageTypeId`;\n\tif (loading) return null;\n\treturn (\n\t\t<Controller\n\t\t\tcontrol={control}\n\t\t\tname={fieldName}\n\t\t\trender={({field: {ref, onChange, ...field}}) => (\n\t\t\t\t<Autocomplete\n\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\tlabel='Image Type'\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t\tisOptionEqualToValue={(option, value) => option.id === value.id}\n\t\t\t\t\toptions={data.imageTypes.nodes}\n\t\t\t\t\topenOnFocus\n\t\t\t\t\tautoSelect\n\t\t\t\t\tautoHighlight\n\t\t\t\t\tsize='small'\n\t\t\t\t\tloading={loading}\n\t\t\t\t\tdisableClearable\n\t\t\t\t\tfullWidth\n\t\t\t\t\tgetOptionLabel={(option) => ` ${option.longName}`}\n\t\t\t\t\tonChange={(_, data) => onChange(data)}\n\t\t\t\t\topen={open}\n\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\tsetOpen(true);\n\t\t\t\t\t}}\n\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\tsetOpen(false);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t)}\n\t\t/>\n\t);\n};\n\nexport default SelectImageType;\n","/** @format */\n\nimport {useEffect} from 'react';\nimport {ImageList, ImageListItem, ImageListItemBar} from '@mui/material';\n\nconst MultipleImagePreview = ({imageFiles, setImages, images, preview}) => {\n    useEffect(() => {\n        if (imageFiles.length > 0) {\n            const fileReaders = [];\n            let isCancel = false;\n\n            const promises = imageFiles.map((file) => {\n                return new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReaders.push(fileReader);\n                    fileReader.onload = (e) => {\n                        const {result} = e.target;\n                        if (result) {\n                            resolve(result);\n                        }\n                    };\n                    fileReader.onabort = () => {\n                        reject(new Error('File reading aborted'));\n                    };\n                    fileReader.onerror = () => {\n                        reject(new Error('Failed to read file'));\n                    };\n                    fileReader.readAsDataURL(file.image);\n                });\n            });\n            Promise.all(promises)\n                .then((images) => {\n\n                    if (!isCancel) {\n                        setImages(images);\n                    }\n                })\n                .catch((reason) => {\n                    console.log(reason);\n                });\n\n            return () => {\n                isCancel = true;\n                fileReaders.forEach((fileReader) => {\n                    if (fileReader.readyState === 1) {\n                        fileReader.abort();\n                    }\n                });\n            };\n        }\n    }, [imageFiles, setImages]);\n    return (\n        <>\n            {preview && images.length ? (\n                <ImageList cols={4} gap={15} variant='standard'>\n                    {images.map((image, idx) => {\n                        return (\n                            <ImageListItem key={idx}>\n                                {/* <img src={image} srcSet={image} alt={'title'} loading='lazy' /> */}\n                                <img\n                                    src={image}\n                                    srcSet={image}\n                                    alt={'not loaded'}\n                                    loading='lazy'\n                                    style={{maxHeight: '500px'}}\n                                />\n                                <ImageListItemBar\n                                    title={imageFiles[idx]?.title}\n                                    subtitle={\n                                        <span>\n\t\t\t\t\t\t\t\t\t\t\tDate Taken: {imageFiles[idx]?.date}\n                                            <br/> Row Number: {idx + 1}\n\t\t\t\t\t\t\t\t\t\t</span>\n                                    }\n                                    position='bottom'\n                                />\n                            </ImageListItem>\n                        );\n                    })}\n                </ImageList>\n            ) : null}\n        </>\n    );\n};\n\nexport default MultipleImagePreview;\n","/** @format */\n\nimport {useFieldArray, useForm} from 'react-hook-form';\nimport {Box, Button, DialogActions, DialogContent, Divider, Grid, TextField,} from '@mui/material';\nimport SelectImageType from '../components/SelectImageType';\nimport React from 'react';\nimport {DateTime} from 'luxon';\nimport AddIcon from '@mui/icons-material/Add';\nimport exifr from 'exifr';\nimport {gridSelectionsVar} from '../../../cache';\nimport {useMutation} from '@apollo/client';\nimport {ADD_BULK_IMAGES_TO_LOCATION} from '../../../api-calls/mutations/project-mutations';\nimport MultipleImagePreview from '../components/MultipleImagePreview';\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\nimport {useCounter, useToggle} from 'react-use';\nimport {useConfirm} from 'material-ui-confirm';\n\nconst defaultDate = DateTime.now().toISODate();\nconst imageMimeType = /image\\/(png|jpg|jpeg)/i;\n\nconst UploadLocationImageForm = ({hideModal}) => {\n    const addImageButtonRef = React.useRef();\n    const submitButtonRef = React.useRef();\n    const [imageFiles, setImageFiles] = React.useState([]);\n    const [images, setImages] = React.useState([]);\n    const [disabled, setDisabled] = React.useState(false);\n    const [preview, togglePreview] = useToggle(true);\n    const [min] = useCounter(1);\n    const [max] = useCounter(4);\n    const [counter, {inc, dec, set, reset: resetCounter}] = useCounter(\n        1,\n        max,\n        min,\n    );\n    const confirm = useConfirm();\n\n    const {register, handleSubmit, control, reset, setFocus, getValues} =\n        useForm({\n            defaultValues: {\n                image: [\n                    {\n                        notes: '',\n                        headerImageFile: '',\n                    },\n                ],\n            },\n        });\n\n    const {fields, append, remove} = useFieldArray({\n        control,\n        name: 'image',\n    });\n\n\n    const [uploadImage] = useMutation(ADD_BULK_IMAGES_TO_LOCATION);\n\n    const removeEntry = (index) => {\n        setImageFiles((prevState) =>\n            prevState.filter((_obj, idx) => idx !== index),\n        );\n        remove(index);\n        dec();\n    };\n\n    const getExifData = async (data) => {\n        const exif = exifr.parse(data.headerImageFile[0]);\n        const gps = exifr.gps(data.headerImageFile[0]);\n        const exifDate = exifr.parse(data.headerImageFile[0], ['DateTimeOriginal']);\n        const orientation = exifr.orientation(data.headerImageFile[0]);\n        return await Promise.all([exif, gps, exifDate, orientation]);\n    };\n\n    const prepareApiData = async (data) => {\n        const exifData = await getExifData(data)\n        const [exif, exifGps, exifDate, orientation] = exifData\n        const {dateTakenManual, headerImageFile, imageTypeId, notes} = data\n        return {\n            createdAt: defaultDate,\n            dateTakenManual,\n            headerImageFile: headerImageFile[0],\n            imageTypeId: Number(imageTypeId.id),\n            sitelocationId: gridSelectionsVar().selectedLocation[0].id,\n            exif,\n            exifGps,\n            notes,\n            exifDate: exifDate?.DateTimeOriginal,\n            orientation,\n        }\n    }\n\n    const onSubmit = (data) => {\n        const {image} = data;\n        confirm({\n            title: 'Confirm Data Submission',\n            titleProps: {color: 'red', fontWeight: 'bold'},\n            content: `Submission Contains ${image.length} Item(s)`,\n            confirmationText: 'Confirm',\n            cancellationButtonProps: {color: 'secondary'},\n            allowClose: false,\n            contentProps: {fontWeight: 'bold'},\n        })\n            .then(() => Promise.all(image.map(item => prepareApiData(item)))).then(result => {\n\n            uploadImage({\n                variables: {input: result}\n            }).then(console.log, console.error).then(() => hideModal())\n        })\n    };\n\n    const prepareImagePreview = async (data, index) => {\n        const imageFile = data.target.files[0];\n        const {image} = getValues();\n        const imageInfo = image[index];\n        const imageData = {\n            image: imageFile,\n            title: imageInfo.imageTypeId.longName,\n            date: imageInfo.dateTakenManual,\n            id: index,\n            orientation: await exifr.orientation(imageFile),\n        };\n        if (!imageData.image.type.match(imageMimeType)) {\n            alert('Image mime type is not valid');\n            return;\n        }\n        const imageList = imageFiles.filter((_obj, idx) => idx !== index);\n        const updatedImageList = [...imageList, imageData];\n        const sortedImageList = updatedImageList.sort((a, b) => a.id - b.id);\n        setImageFiles(sortedImageList);\n    };\n\n    const handleResetForm = () => {\n        reset();\n        setImageFiles([]);\n        setImages([]);\n        resetCounter();\n    };\n\n    React.useEffect(() => {\n        setFocus('image[0].dateTakenManual');\n    }, [setFocus]);\n\n    React.useEffect(() => {\n        if (counter > 3) {\n            setDisabled(true);\n        } else setDisabled(false);\n    }, [counter]);\n\n    return (\n        <>\n            <DialogContent>\n                <form>\n                    <Grid container columnSpacing={2} rowSpacing={3} columns={7}>\n                        {fields.map((field, index) => (\n                            <React.Fragment key={field.id}>\n                                <Grid item={true} xs={1}>\n                                    <TextField\n                                        label={'Date Taken'}\n                                        {...register(`image.${index}.dateTakenManual`)}\n                                        type={'date'}\n                                        variant={'filled'}\n                                        fullWidth={true}\n                                        defaultValue={defaultDate}\n                                    />\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <SelectImageType control={control} index={index}/>\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <TextField\n                                        fullWidth\n                                        variant='filled'\n                                        accept='image/*'\n                                        type='file'\n                                        sx={{height: '100%'}}\n                                        {...register(`image.${index}.headerImageFile`)}\n                                        onChange={(data) => prepareImagePreview(data, index)}\n                                    />\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <TextField\n                                        variant={'filled'}\n                                        fullWidth={true}\n                                        multiline={true}\n                                        label={'notes'}\n                                        {...register(`image.${index}.notes`)}\n                                        onBlur={() => addImageButtonRef.current.focus()}\n                                    />\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <Button\n                                        fullWidth\n                                        color='delete'\n                                        onClick={() => removeEntry(index)}\n                                        sx={{borderRadius: 0, border: 1, height: '100%'}}>\n                                        remove\n                                    </Button>\n                                </Grid>\n                            </React.Fragment>\n                        ))}\n                    </Grid>\n                </form>\n\n                <Box\n                    sx={{\n                        position: 'absolute',\n                        bottom: 250,\n\n                        border: 0,\n                        borderStyle: 'solid',\n                        m: 4,\n                        pl: 2,\n                        pr: 2,\n                        borderRadius: 0,\n                    }}>\n                    <Divider/>\n                    <MultipleImagePreview\n                        imageFiles={imageFiles}\n                        setImages={setImages}\n                        images={images}\n                        preview={preview}\n                    />\n                </Box>\n            </DialogContent>\n            <Divider/>\n            <DialogActions>\n                <Grid container p={2} spacing={2} columns={5}>\n                    <Grid item xs={1}>\n                        <Button\n                            fullWidth\n                            onClick={hideModal}\n                            color='secondary'\n                            sx={{borderRadius: 0, border: 1, height: '100%'}}>\n                            close\n                        </Button>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <Button\n                            fullWidth\n                            color='cancel'\n                            onClick={handleResetForm}\n                            sx={{borderRadius: 0, border: 1, height: '100%'}}>\n                            reset\n                        </Button>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <Button\n                            ref={addImageButtonRef}\n                            disabled={disabled}\n                            sx={{height: '100%', borderRadius: 0, border: 1}}\n                            color='create'\n                            fullWidth\n                            startIcon={<AddIcon/>}\n                            onClick={() => {\n                                append();\n                                inc();\n                            }}>\n                            add another\n                        </Button>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <Button\n                            color='action'\n                            startIcon={<PhotoCamera/>}\n                            fullWidth\n                            sx={{height: '100%', borderRadius: 0, border: 1}}\n                            onClick={togglePreview}>\n                            {preview ? 'Hide Images' : 'Preview Images'}\n                        </Button>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <Button\n                            ref={submitButtonRef}\n                            fullWidth\n                            color='submit'\n                            onClick={handleSubmit(onSubmit)}\n                            sx={{borderRadius: 0, border: 1, height: '100%'}}>\n                            submit\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </>\n    );\n};\n\nexport default UploadLocationImageForm;\n","/** @format */\n\nimport React from 'react';\nimport {Box, Button, Dialog, DialogTitle, Divider, IconButton,} from '@mui/material';\nimport {useReactiveVar} from '@apollo/client';\nimport {gridSelectionsVar} from '../../../../cache';\nimport {useModal} from 'react-modal-hook';\nimport CloseIcon from '@mui/icons-material/Close';\nimport PhotoCamera from '@mui/icons-material/PhotoCamera';\nimport UploadLocationImageForm from '../../../forms/images/UploadLocationImageForm';\n\nconst UploadLocationImage = () => {\n\tconst selectedLocation = useReactiveVar(gridSelectionsVar).selectedLocation;\n\tconst selectedProject = useReactiveVar(gridSelectionsVar).selectedOrder;\n\tconst multipleSelections = selectedLocation.length > 1;\n\n\tconst [showModal, hideModal] = useModal(\n\t\t() => (\n\t\t\t<Dialog\n\t\t\t\tonClose={() => {\n\t\t\t\t\thideModal();\n\t\t\t\t}}\n\t\t\t\tfullScreen={true}\n\t\t\t\tmaxWidth={'xl'}\n\t\t\t\topen={true}>\n\t\t\t\t<DialogTitle>\n\t\t\t\t\t<Box\n\t\t\t\t\t\tdisplay='flex'\n\t\t\t\t\t\talignItems='center'\n\t\t\t\t\t\tjustifyContent='space-between'>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\tsx={{textTransform: 'uppercase', fontWeight: 'bold'}}>\n\t\t\t\t\t\t\tUPLOAD IMAGES FOR PROJECT : {selectedProject.projectTitle}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\tsx={{textTransform: 'uppercase', fontWeight: 'bold'}}>\n\t\t\t\t\t\t\tWORKSHEET REFERENCE : {selectedLocation[0]?.worksheetReference}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box\n\t\t\t\t\t\t\tflexGrow={1}\n\t\t\t\t\t\t\tsx={{textTransform: 'uppercase', fontWeight: 'bold'}}>\n\t\t\t\t\t\t\tLOCATION REFERENCE : {selectedLocation[0]?.reference}\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<IconButton onClick={hideModal}>\n\t\t\t\t\t\t\t\t<CloseIcon/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</DialogTitle>\n\t\t\t\t<Divider/>\n\t\t\t\t<UploadLocationImageForm hideModal={hideModal}/>\n\t\t\t</Dialog>\n\t\t),\n\t\t[selectedLocation, selectedProject],\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t<Button\n\t\t\t\tstartIcon={<PhotoCamera/>}\n\t\t\t\tonClick={showModal}\n\t\t\t\tdisabled={selectedLocation === false || multipleSelections}>\n\t\t\t\tupload image\n\t\t\t</Button>\n\t\t</div>\n\t);\n};\n\nexport default UploadLocationImage;\n","/** @format */\n\nimport {useReactiveVar} from '@apollo/client';\nimport ConstructionIcon from '@mui/icons-material/Construction';\nimport EditIcon from '@mui/icons-material/Edit';\nimport {Button, Grid} from '@mui/material';\nimport {useNavigate, useParams} from 'react-router-dom';\nimport {gridSelectionsVar} from '../../../../cache';\nimport CreateProjectLocation from './CreateProjectLocation';\nimport DeleteProjectLocation from './DeleteProjectLocation';\nimport AddItemsToLocation from './AddItemsToLocation';\nimport UploadLocationImage from './UploadLocationImage';\n\nconst ProjectLocationsButtons = () => {\n  const selectedLocation = useReactiveVar(gridSelectionsVar).selectedLocation;\n  const multipleSelections = selectedLocation.length > 1;\n  const navigate = useNavigate();\n  const {id} = useParams()\n\n  return (\n    <Grid container columnSpacing={2} mb={2} mt={2} columns={6}>\n      <Grid item xs={true}>\n        <CreateProjectLocation id={id}/>\n      </Grid>\n      <Grid item xs={true}>\n        <AddItemsToLocation/>\n      </Grid>\n      <Grid item xs={true}>\n        <Button\n          disabled={selectedLocation === false || multipleSelections}\n          startIcon={<EditIcon/>}\n          color='update'>\n          edit location\n        </Button>\n      </Grid>\n\n      <Grid item xs={true}>\n        <DeleteProjectLocation/>\n      </Grid>\n      <Grid item xs={true}>\n        <UploadLocationImage/>\n      </Grid>\n      <Grid item xs={true}>\n        <Button\n          onClick={() => navigate(`progress`)}\n          color='action'\n          startIcon={<ConstructionIcon/>}\n          disabled={\n            selectedLocation === false ||\n            multipleSelections ||\n            parseFloat(selectedLocation[0]?.itemCount) === 0\n          }>\n          update site progress\n        </Button>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default ProjectLocationsButtons;\n","/** @format */\nimport React from 'react';\nimport {gridSelectionsVar} from '../../../../cache';\nimport ProjectLocationsGrid from '../../../grids/grids/ProjectLocationsGrid';\nimport ProjectLocationsButtons from './ProjectLocationsButtons';\n\nconst ProjectLocations = () => {\n\tReact.useEffect(() => {\n\t\tgridSelectionsVar({...gridSelectionsVar(), selectedLocation: false});\n\t}, []);\n\treturn (\n\t\t<div>\n\t\t\t<ProjectLocationsButtons/>\n\t\t\t<hr/>\n\t\t\t<div className='grid-title'>Project Locations List</div>\n\t\t\t<ProjectLocationsGrid/>\n\t\t</div>\n\t);\n};\n\nexport default ProjectLocations;\n","/** @format */\n\nimport {Button, Grid} from '@mui/material';\nimport {useLocation, useNavigate, useParams} from 'react-router-dom';\n\nconst ProjectProcessingButtons = () => {\n\tconst navigate = useNavigate();\n\tconst location = useLocation();\n\tconst {id} = useParams();\n\treturn (\n\t\t<Grid container spacing={2} mb={2} mt={1} columns={7}>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\tlocation.pathname === `/projects/processing/${id}/locations`\n\t\t\t\t\t}\n\t\t\t\t\tcolor='navigation'\n\t\t\t\t\tonClick={() => navigate('locations')}\n\t\t\t\t>\n\t\t\t\t\tlocations\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={location.pathname === `/projects/processing/${id}/items`}\n\t\t\t\t\tcolor='navigation'\n\t\t\t\t\tonClick={() => navigate('items')}\n\t\t\t\t>\n\t\t\t\t\titems\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\tlocation.pathname === `/projects/processing/${id}/worksheets`\n\t\t\t\t\t}\n\t\t\t\t\tcolor='navigation'\n\t\t\t\t\tonClick={() => navigate('worksheets')}\n\t\t\t\t>\n\t\t\t\t\tworks completed\n\t\t\t\t</Button>{' '}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<Button\n\t\t\t\t\tcolor='navigation'\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\tlocation.pathname === `/projects/processing/${id}/applications`\n\t\t\t\t\t}\n\t\t\t\t\tonClick={() => navigate('applications')}\n\t\t\t\t>\n\t\t\t\t\tapplication processing\n\t\t\t\t</Button>{' '}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<Button\n\t\t\t\t\tcolor='navigation'\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\tlocation.pathname === `/projects/processing/${id}/documents`\n\t\t\t\t\t}\n\t\t\t\t\tonClick={() => navigate('documents')}\n\t\t\t\t>\n\t\t\t\t\tdocuments\n\t\t\t\t</Button>{' '}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<Button\n\t\t\t\t\tcolor='navigation'\n\t\t\t\t\tonClick={() => navigate('images')}\n\t\t\t\t\tdisabled={location.pathname === `/projects/processing/${id}/images`}\n\t\t\t\t>\n\t\t\t\t\tview images\n\t\t\t\t</Button>{' '}\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<Button\n\t\t\t\t\tcolor='navigation'\n\t\t\t\t\tonClick={() => navigate('workbooks')}\n\t\t\t\t\tdisabled={\n\t\t\t\t\t\tlocation.pathname === `/projects/processing/${id}/workbooks`\n\t\t\t\t\t}\n\t\t\t\t>\n\t\t\t\t\treports\n\t\t\t\t</Button>{' '}\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default ProjectProcessingButtons;\n","/** @format */\n\nimport {useQuery} from '@apollo/client';\nimport {Box, CircularProgress, Typography} from '@mui/material';\nimport React from 'react';\nimport {GET_SINGLE_PROJECT_HEADER} from '../../../api-calls/queries/projects';\nimport {formatNumberNoDecimals} from '../../../functions/formattingFunctions';\nimport {useParams} from 'react-router-dom';\n\nfunction Item(props) {\n\tconst {sx, ...other} = props;\n\treturn (\n\t\t<Box\n\t\t\tborder={1}\n\t\t\tflexGrow={1}\n\t\t\tbgcolor={'#b4cce4'}\n\t\t\tm={0.5}\n\t\t\tp={0.5}\n\t\t\ttextAlign={'center'}\n\t\t\tborderRadius={2}\n\t\t\t{...other}\n\t\t/>\n\t);\n}\n\nconst ProjectStats = () => {\n\tconst {id} = useParams();\n\n\tconst {data: projectData, loading} = useQuery(GET_SINGLE_PROJECT_HEADER, {\n\t\tvariables: {id: Number(id)},\n\t\tfetchPolicy: 'cache-and-network',\n\t});\n\n\tif (loading) return <CircularProgress/>;\n\n\treturn (\n\t\t<Box\n\t\t\tdisplay={'flex'}\n\t\t\tflexWrap={'wrap'}\n\t\t\tjustifyContent={'space-between'}\n\t\t\tmb={1}\n\t\t\tml={0.5}\n\t\t\tmr={0.5}>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>PROJECT NAME</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{projectData?.orderheaderWithValue.projectTitle.substring(0, 25) +\n\t\t\t\t\t\t'...'}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>PROJECT NO</Typography>\n\t\t\t\t<Typography>{projectData?.orderheaderWithValue.orderNumber}</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>STATUS</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{projectData?.orderheaderWithValue.statusDescription}{' '}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>AREA</Typography>\n\t\t\t\t<Typography>{projectData?.orderheaderWithValue.area}</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>LABOUR</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.orderValueLabour,\n\t\t\t\t\t)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>MATERIALS</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.orderValueMaterials,\n\t\t\t\t\t)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>OTHER</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.orderValueOther,\n\t\t\t\t\t)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>TOTAL</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.orderValueTotal,\n\t\t\t\t\t)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>COMPLETE</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.orderValueTotalComplete,\n\t\t\t\t\t)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>TO DO</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.orderValueTotal -\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.orderValueTotalComplete,\n\t\t\t\t\t)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>APPLIED</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.orderValueTotalApplied,\n\t\t\t\t\t)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>TO APPLY</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.orderValueTotalComplete -\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.orderValueTotalApplied,\n\t\t\t\t\t)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography>BOQ VAL</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.orderValueTotalBoq,\n\t\t\t\t\t)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>VARN VAL</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.orderValueTotalVarn,\n\t\t\t\t\t)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>LOCATIONS</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.locationCount,\n\t\t\t\t\t)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>COMPLETE</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.locationsComplete,\n\t\t\t\t\t)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>ITEMS</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(projectData?.orderheaderWithValue.itemCount)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>COMPLETE</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.itemsComplete,\n\t\t\t\t\t)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>DOCS</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(\n\t\t\t\t\t\tprojectData?.orderheaderWithValue.documentCount,\n\t\t\t\t\t)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t\t<Item>\n\t\t\t\t<Typography fontWeight={'bold'}>IMAGES</Typography>\n\t\t\t\t<Typography>\n\t\t\t\t\t{formatNumberNoDecimals(projectData?.orderheaderWithValue.imageCount)}\n\t\t\t\t</Typography>\n\t\t\t</Item>\n\t\t</Box>\n\t);\n};\n\nexport default ProjectStats;\n","/** @format */\nimport { Outlet, useParams } from 'react-router-dom';\nimport ProjectProcessingButtons from './ProjectProcessingButtons';\nimport ProjectStats from './ProjectStats';\n\nconst ProjectProcessing = () => {\n\tconst { id } = useParams();\n\n\treturn (\n\t\t<div>\n\t\t\t<ProjectStats />\n\t\t\t<hr />\n\t\t\t<ProjectProcessingButtons />\n\t\t\t<Outlet />\n\t\t</div>\n\t);\n};\n\nexport default ProjectProcessing;\n","/** @format */\n\nimport {DateTime} from 'luxon';\nimport {forwardRef, useEffect, useImperativeHandle, useRef, useState,} from 'react';\n\nexport default forwardRef((props, ref) => {\n\tDateTime.now().toISODate();\n\tconst inputRef = useRef();\n\tconst [value, setValue] = useState(() => {\n\t\tif (props.lastRowDate) {\n\t\t\treturn props.lastRowDate.data.date;\n\t\t} else return props.currentPeriod.weekEndingDate;\n\t});\n\n\tuseEffect(() => {\n\t\tinputRef.current.focus();\n\t\tinputRef.current.select();\n\t}, []);\n\n\tfunction inputHandler(e) {\n\t\tsetValue(e.target.value.toLocaleString());\n\t}\n\n\tuseImperativeHandle(ref, () => {\n\t\treturn {\n\t\t\tgetValue() {\n\t\t\t\treturn value;\n\t\t\t},\n\t\t};\n\t});\n\n\treturn (\n\t\t<input\n\t\t\ttype='date'\n\t\t\tclassName='ag-input-field-input ag-text-field-input'\n\t\t\tref={inputRef}\n\t\t\tonChange={inputHandler}\n\t\t\tvalue={value}\n\t\t/>\n\t);\n});\n","/** @format */\n\nimport React from 'react';\nimport {useAlert} from 'react-alert';\nimport {numberOnly} from '../../../functions/formattingFunctions';\n\nexport default React.forwardRef((props, ref) => {\n\tconst [value, setValue] = React.useState(props.data.qtyOs);\n\tconst inputRef = React.useRef();\n\tconst alert = useAlert();\n\n\tconst onChangeHandler = React.useCallback(\n\t\t(event) => {\n\t\t\tif (Number(event.target.value) > Number(props.data.qtyOs)) {\n\t\t\t\talert.error('Qty Done Cannot Exceed Qty Outstanding', {\n\t\t\t\t\tposition: 'middle',\n\t\t\t\t\tonClose: () => {\n\t\t\t\t\t\tinputRef.current.select();\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tsetValue(event.target.value);\n\t\t\t}\n\t\t},\n\t\t[props.data.qtyOs, alert],\n\t);\n\n\tconst onKeyPressListener = React.useCallback((event) => {\n\t\tif (!numberOnly(event.nativeEvent)) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}, []);\n\n\tReact.useEffect(() => {\n\t\tprops.cellStartedEdit && inputRef.current.focus();\n\t\tprops.cellStartedEdit && inputRef.current.select();\n\t}, [props.cellStartedEdit]);\n\n\tReact.useImperativeHandle(ref, () => {\n\t\treturn {\n\t\t\tgetValue() {\n\t\t\t\treturn value;\n\t\t\t},\n\t\t};\n\t});\n\n\treturn (\n\t\t<input\n\t\t\tclassName='ag-input-field-input ag-text-field-input'\n\t\t\tref={inputRef}\n\t\t\tvalue={value}\n\t\t\tonChange={onChangeHandler}\n\t\t\tstyle={{height: '100%'}}\n\t\t\tonKeyPress={onKeyPressListener}\n\t\t/>\n\t);\n});\n","/** @format */\n\nimport React from 'react';\n\nexport default React.forwardRef((props, ref) => {\n\tconst prevSupervisor = props.lastRowSupervisor\n\t\t? props.lastRowSupervisor.data.supervisor\n\t\t: props.options[0].displayName;\n\tconst [value, setValue] = React.useState(prevSupervisor);\n\tconst options = props.options.map((x) => x.displayName);\n\n\tconst onChangeHandler = (e) => {\n\t\tsetValue(e.target.value);\n\t};\n\n\tReact.useImperativeHandle(ref, () => {\n\t\treturn {\n\t\t\tgetValue() {\n\t\t\t\treturn value;\n\t\t\t},\n\t\t};\n\t});\n\n\treturn (\n\t\t<select\n\t\t\tstyle={{height: '100%', width: '100%'}}\n\t\t\tname='supervisor'\n\t\t\tid='supervisor'\n\t\t\tautoFocus\n\t\t\tonChange={onChangeHandler}\n\t\t\tdefaultValue={prevSupervisor}>\n\t\t\t{options.map((x) => (\n\t\t\t\t<option key={x} value={x}>\n\t\t\t\t\t{x}\n\t\t\t\t</option>\n\t\t\t))}\n\t\t</select>\n\t);\n});\n","/** @format */\n\nimport {useMutation, useQuery, useReactiveVar} from '@apollo/client';\nimport {Button, Grid} from '@mui/material';\nimport {AgGridReact} from 'ag-grid-react';\nimport {useConfirm} from 'material-ui-confirm';\nimport React from 'react';\nimport {useAlert} from 'react-alert';\nimport {useNavigate, useParams } from 'react-router-dom';\nimport {v4 as uuidv4} from 'uuid';\nimport {CREATE_BULK_WORKSHEETS} from '../../../api-calls/mutations/project-mutations';\nimport {GET_INCOMPLETE_LOCATION_ITEMS} from '../../../api-calls/queries/locations';\nimport {GET_ALL_SUPERVISORS, GET_CURRENT_PERIOD,} from '../../../api-calls/queries/misc';\nimport {gridSelectionsVar} from '../../../cache';\nimport {formatNumberGridTwoDecimals, formatNumberTwoDecimals,} from '../../../functions/formattingFunctions';\nimport DateEditor from '../components/DateEditor';\nimport QtyCompleteEditor from '../components/QtyCompleteEditor';\nimport SelectSupervisor from '../components/SelectSupervisor';\n\nconst KEY_UP = 'ArrowUp';\nconst KEY_DOWN = 'ArrowDown';\nconst KEY_ENTER = 'Enter';\n\nconst ProjectProgressGrid = () => {\n\tconst {id} = useParams();\n\n\tconst gridRef = React.useRef();\n\tconst batchRef = React.useRef(uuidv4());\n\tconst alert = useAlert();\n\tconst navigate = useNavigate();\n\tconst confirm = useConfirm();\n\tconst selectedLocation = useReactiveVar(gridSelectionsVar).selectedLocation;\n\tconst {data: supervisorData} = useQuery(GET_ALL_SUPERVISORS);\n\tconst [rowData, setRowData] = React.useState();\n\tconst {data: currentPeriod} = useQuery(GET_CURRENT_PERIOD);\n\tconst columnDefs = React.useMemo(\n\t\t() => [\n\t\t\t{headerName: 'Item Ref', field: 'itemNumber'},\n\t\t\t{headerName: 'Item Type', field: 'typeShort'},\n\t\t\t{\n\t\t\t\theaderName: 'Activity Code',\n\t\t\t\tfield: 'activityCode',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Activity Description',\n\t\t\t\tfield: 'activityDescription',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Qty Ordered',\n\t\t\t\tfield: 'qtyOrdered',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Qty Os',\n\t\t\t\tfield: 'qtyOs',\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Value Os',\n\t\t\t\tfield: 'valueOs',\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Qty Done',\n\t\t\t\tfield: 'qtyDone',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\teditable: true,\n\t\t\t\tcellEditor: QtyCompleteEditor,\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t\tvalueParser: (params) => Number(params.newValue),\n\t\t\t},\n\n\t\t\t{\n\t\t\t\theaderName: 'Supervisor',\n\t\t\t\tcolId: 'supervisor',\n\t\t\t\tfield: 'supervisor',\n\t\t\t\teditable: true,\n\t\t\t\tsuppressKeyboardEvent: (params) => {\n\t\t\t\t\tconst key = params.event.key;\n\t\t\t\t\treturn (params.editing && key === KEY_UP) ||\n\t\t\t\t\t\tkey === KEY_DOWN ||\n\t\t\t\t\t\tkey === KEY_ENTER;\n\t\t\t\t},\n\t\t\t\tcellEditor: SelectSupervisor,\n\t\t\t\tcellEditorParams: (params) => ({\n\t\t\t\t\toptions: supervisorData.supervisors.nodes,\n\t\t\t\t\tlastRowSupervisor: params.api.getRowNode(params.rowIndex - 1),\n\t\t\t\t}),\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Date Complete',\n\t\t\t\tfield: 'date',\n\t\t\t\teditable: true,\n\t\t\t\tcellEditor: DateEditor,\n\t\t\t\tcellEditorParams: (params) => ({\n\t\t\t\t\tlastRowDate: params.api.getRowNode(params.rowIndex - 1),\n\t\t\t\t\tcurrentPeriod: currentPeriod.periods.nodes[0],\n\t\t\t\t}),\n\t\t\t\tvalueFormatter: (params) =>\n\t\t\t\t\tparams.value && params.value.split('-').reverse().join('/'),\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Value Complete',\n\t\t\t\tfield: 'valueComplete',\n\t\t\t\tvalueGetter: (params) =>\n\t\t\t\t\t(params.data.qtyDone * params.data.valueOs) / params.data.qtyOs,\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t},\n\t\t],\n\t\t[supervisorData, currentPeriod],\n\t);\n\n\tconst {data} = useQuery(GET_INCOMPLETE_LOCATION_ITEMS, {\n\t\tvariables: {id: selectedLocation[0].id},\n\t\tonCompleted: (data) =>\n\t\t\tsetRowData(\n\t\t\t\tdata.orderdetailWithValues.nodes.map((x) => ({...x, qtyDone: 0})),\n\t\t\t),\n\t});\n\n\tconst [submitWorksheets] = useMutation(CREATE_BULK_WORKSHEETS, {\n\t\tonCompleted: () => {\n\t\t\tnavigate(-1);\n\t\t},\n\t});\n\n\tconst defaultColDef = {\n\t\tflex: 1,\n\t};\n\tconst onDataRendered = (params) => {\n\t\tparams.api.startEditingCell({\n\t\t\trowIndex: 0,\n\t\t\tcolKey: 'qtyDone',\n\t\t});\n\t};\n\n\tconst undoEdits = () => {\n\t\tgridRef.current.api.stopEditing();\n\t\tgridRef.current.api.setRowData(\n\t\t\tdata.orderdetailWithValues.nodes.map((x) => ({...x, qtyDone: 0})),\n\t\t);\n\t};\n\n\tconst prepareData = (data) => {\n\t\treturn {\n\t\t\tdateComplete: data.date,\n\t\t\tqtyComplete: data.qtyDone,\n\t\t\tsupervisorId: supervisorData.supervisors.nodes.find(\n\t\t\t\t(x) => x.displayName === data.supervisor,\n\t\t\t).id,\n\t\t\torderdetailId: data.id,\n\t\t\tperiodNumberId: currentPeriod.periods.nodes[0].id,\n\t\t\tsitelocationId: data.sitelocationId,\n\t\t\torderheaderId: data.orderheaderId,\n\t\t\tbatchId: batchRef.current,\n\t\t\tvalueComplete: data.qtyDone * Number(data.unitPayableTotal),\n\t\t};\n\t};\n\n\tconst dataCheck = (updatedItem) => {\n\t\tconst supervisorExists = updatedItem.hasOwnProperty('supervisor');\n\t\tconst dateExists = updatedItem.hasOwnProperty('date');\n\t\treturn supervisorExists && dateExists;\n\t};\n\n\tconst handleSubmitData = (data) => {\n\t\tconsole.log('submitting');\n\t\tconst itemCount = data.length;\n\t\tconst submissionValue = data\n\t\t\t.map((x) => Number(x.valueComplete))\n\t\t\t.reduce((total, amount) => total + amount);\n\t\tconsole.log(itemCount, submissionValue);\n\t\tconfirm({\n\t\t\ttitle: 'Confirm Data Update Submission',\n\t\t\ttitleProps: {color: 'red', fontWeight: 'bold'},\n\t\t\tdescription: `This will update ${itemCount} item(s) with a value of ${formatNumberTwoDecimals(\n\t\t\t\tsubmissionValue,\n\t\t\t)}`,\n\t\t\tconfirmationText: 'Submit',\n\t\t\tcancellationButtonProps: {color: 'secondary'},\n\t\t\tconfirmationButtonProps: {autoFocus: true},\n\t\t\tallowClose: false,\n\t\t})\n\t\t\t.then(() =>\n\t\t\t\tsubmitWorksheets({\n\t\t\t\t\tvariables: {\n\t\t\t\t\t\tinput: {worksheets: data},\n\t\t\t\t\t\torderId: Number(id),\n\t\t\t\t\t\tlocationId: selectedLocation[0].id,\n\t\t\t\t\t},\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.catch(() => console.log('submission cancelled'));\n\t};\n\n\tconst handleSaveData = async (_) => {\n\t\tconst updatedItems = rowData.filter((x) => x.qtyDone > 0);\n\t\tconst checkPromises = await updatedItems.map(async (item) => {\n\t\t\treturn await dataCheck(item);\n\t\t});\n\t\tconst checkedData = await Promise.all(checkPromises);\n\t\tconst isDataComplete = checkedData.includes(false);\n\t\tconst cleansedData = updatedItems.map((item) => {\n\t\t\treturn prepareData(item);\n\t\t});\n\n\t\tconsole.log(isDataComplete, cleansedData);\n\t\tif (isDataComplete) {\n\t\t\talert.error(`One or More Items Has Missing Data`);\n\t\t} else {\n\t\t\thandleSubmitData(cleansedData);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Grid container columns={2} spacing={2} mb={2}>\n\t\t\t\t<Grid item xs={true}>\n\t\t\t\t\t<Button onClick={undoEdits} color='cancel'>\n\t\t\t\t\t\tundo changes\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={true}>\n\t\t\t\t\t<Button color='action' onClick={handleSaveData}>\n\t\t\t\t\t\tsave changes\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t\t<div className='grid-title'>UPDATE PROJECT LOCATION PROGRESS</div>\n\t\t\t<AgGridReact\n\t\t\t\trowData={rowData}\n\t\t\t\tdefaultColDef={defaultColDef}\n\t\t\t\tcolumnDefs={columnDefs}\n\t\t\t\tclassName='ag-theme-alpine'\n\t\t\t\tanimateRows='true'\n\t\t\t\tref={gridRef}\n\t\t\t\tdomLayout='autoHeight'\n\t\t\t\tsingleClickEdit={true}\n\t\t\t\tenableCellChangeFlash={true}\n\t\t\t\tonFirstDataRendered={onDataRendered}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default ProjectProgressGrid;\n","/** @format */\nimport ProjectProgressGrid from '../../../grids/grids/ProjectProgressGrid';\n\nconst ProjectProgress = () => {\n\treturn (\n\t\t<div>\n\t\t\t<ProjectProgressGrid/>\n\t\t</div>\n\t);\n};\n\nexport default ProjectProgress;\n","/** @format */\n\nimport {useQuery} from '@apollo/client';\nimport {CircularProgress} from '@mui/material';\nimport {AgGridReact} from 'ag-grid-react';\nimport React from 'react';\nimport {GET_PROJECT_WORKSHEETS} from '../../../api-calls/queries/misc';\nimport {formatNumberGridTwoDecimals} from '../../../functions/formattingFunctions';\nimport {useParams} from 'react-router-dom';\n\nconst ProjectWorksheetsGrid = () => {\n\tconst {id} = useParams();\n\tconst gridRef = React.useRef();\n\tconst [rowData, setRowData] = React.useState();\n\tconst {loading} = useQuery(GET_PROJECT_WORKSHEETS, {\n\t\tvariables: {id: Number(id)},\n\t\tonCompleted: (data) => setRowData(data.worksheetWithValues.nodes),\n\t});\n\n\tconst columnDefs = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\theaderName: 'Worksheet Ref',\n\t\t\t\tfield: 'worksheetReference',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Batch Ref',\n\t\t\t\tfield: 'batchId',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Location',\n\t\t\t\tfield: 'locationReference',\n\n\t\t\t\tflex: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Item Number',\n\t\t\t\tfield: 'itemNumber',\n\n\t\t\t\tsort: 'asc',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Activity Code',\n\t\t\t\tfield: 'activityCode',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Activity Description',\n\t\t\t\tfield: 'activityDescription',\n\t\t\t\tflex: 2,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Work Done Date',\n\t\t\t\tfield: 'dateComplete',\n\t\t\t\tvalueFormatter: (params) =>\n\t\t\t\t\tnew Date(params.value).toLocaleDateString('en-GB'),\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Year',\n\t\t\t\tfield: 'year',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Week Number',\n\t\t\t\tfield: 'week',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Supervisor Name',\n\t\t\t\tfield: 'supervisorName',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Qty Complete',\n\t\t\t\tfield: 'qtyComplete',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Value Complete',\n\t\t\t\tfield: 'valueComplete',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Applied',\n\t\t\t\tfield: 'applied',\n\t\t\t\ttype: 'rightAligned',\n\t\t\t\tvalueFormatter: function (params) {\n\t\t\t\t\treturn params.value ? 'Yes' : 'No';\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'App Number',\n\t\t\t\tfield: 'applicationNumber',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Reporting Period',\n\t\t\t\tfield: 'periodNumber',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t},\n\t\t],\n\t\t[],\n\t);\n\n\tconst defaultColDef = React.useMemo(\n\t\t() => ({\n\t\t\tfilter: true,\n\t\t\tsortable: true,\n\t\t\tresizable: true,\n\t\t\tflex: 1,\n\t\t}),\n\t\t[],\n\t);\n\tif (loading) return <CircularProgress/>;\n\treturn (\n\t\t<AgGridReact\n\t\t\tclassName='ag-theme-alpine'\n\t\t\tanimateRows='true'\n\t\t\tcolumnDefs={columnDefs}\n\t\t\tdefaultColDef={defaultColDef}\n\t\t\trowData={rowData}\n\t\t\trowSelection='single'\n\t\t\tref={gridRef}\n\t\t\tdomLayout='autoHeight'\n\t\t\tenableCellChangeFlash={true}\n\t\t\tpagination={true}\n\t\t\tpaginationPageSize={20}\n\t\t/>\n\t);\n};\n\nexport default ProjectWorksheetsGrid;\n","/** @format */\n\nimport ProjectWorksheetsGrid from '../../grids/grids/ProjectWorksheetsGrid';\n\nconst ProjectWorksheets = () => {\n\treturn (\n\t\t<div>\n\t\t\t<hr/>\n\t\t\t<div className='grid-title'>Project Worksheets List</div>\n\t\t\t<ProjectWorksheetsGrid/>\n\t\t</div>\n\t);\n};\n\nexport default ProjectWorksheets;\n","/** @format */\n\nimport { gql } from '@apollo/client';\n\nexport const GET_PROJECT_APPLICATION_DETAILS = gql`\n\tquery GetProjectApplicationDetails($orderId: Int!) {\n\t\tapplicationSummaryOrderheaderWithCumulativeValues(\n\t\t\tcondition: { orderId: $orderId }\n\t\t\torderBy: APPLICATION_NUMBER_ASC\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tapplicationId\n\t\t\t\tapplicationNumber\n\t\t\t\tapplicationReference\n\t\t\t\tprevCumulativeApplicationValue\n\t\t\t\tthisApplicationValue\n\t\t\t\tcumulativeApplicationValue\n\t\t\t\titemCount\n\t\t\t\tlocationCount\n\t\t\t\tapplicationCurrent\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_PROJECT_ITEMS_AVAILABLE_FOR_APPLICATION = gql`\n\tquery GetProjectItemsAvailableForApplication($orderId: Int!) {\n\t\twpmGraphqlGetItemsAvailableForApplication(\n\t\t\tfilter: { orderheaderId: { equalTo: $orderId } }\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tworksheetReference\n\t\t\t\tlocationReference\n\t\t\t\titemNumber\n\t\t\t\tactivityCode\n\t\t\t\tactivityDescription\n\t\t\t\tqtyComplete\n\t\t\t\tvalueComplete\n\t\t\t\tunitPayableTotal\n\t\t\t\tid\n\t\t\t\tsitelocationId\n\t\t\t\tvalueApplied\n\t\t\t}\n\t\t}\n\t\twpmGraphqlGetLocationsAvailableForApplication(\n\t\t\tfilter: { orderheaderId: { equalTo: $orderId } }\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tworksheetReference\n\t\t\t\treference\n\t\t\t\tid\n\t\t\t\timageCount\n\t\t\t\titemCount\n\t\t\t\titemsComplete\n\t\t\t\tvalueComplete\n\t\t\t\torderheaderId\n\t\t\t\tvalueApplied\n\t\t\t}\n\t\t}\n\t\twpmGraphqlGetWorksheetsAvailableForApplication(\n\t\t\tfilter: { orderheaderId: { equalTo: $orderId } }\n\t\t) {\n\t\t\tnodes {\n\t\t\t\tworksheetReference\n\t\t\t\titemNumber\n\t\t\t\tactivityCode\n\t\t\t\tactivityDescription\n\t\t\t\tqtyComplete\n\t\t\t\tvalueComplete\n\t\t\t\tdateComplete\n\t\t\t\tsupervisorName\n\t\t\t\tid\n\t\t\t\torderdetailId\n\t\t\t\tsitelocationId\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_APPLICATION_HEADERS = gql`\n\tquery GetApplicationHeaders {\n\t\tapplicationSummaryWithCumulativeValues {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tapplicationNumber\n\t\t\t\tapplicationReference\n\t\t\t\tapplicationDate\n\t\t\t\tapplicationCurrent\n\t\t\t\tapplicationOpen\n\t\t\t\tapplicationSubmitted\n\t\t\t\tprevCumulativeApplicationValue\n\t\t\t\tthisApplicationValue\n\t\t\t\tcumulativeApplicationValue\n\t\t\t\titemCount\n\t\t\t\tlocationCount\n\t\t\t\timageCount\n\t\t\t\torderCount\n\t\t\t\tareaCount\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_CURRENT_APPLICATION = gql`\n\tquery GetCurrentApplication {\n\t\tapplications(condition: { applicationCurrent: true }) {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tapplicationReference\n\t\t\t\tapplicationNumber\n\t\t\t}\n\t\t}\n\t}\n`;\n\nexport const GET_PROJECTS_AVAILABLE_FOR_APPLICATION = gql`\n\tquery GetProjectsAvailableForApplication {\n\t\twpmGraphqlGetOrdersAvailableForApplication {\n\t\t\tnodes {\n\t\t\t\tarea\n\t\t\t\tareaId\n\t\t\t\taverageItemValue\n\t\t\t\taverageLocationValue\n\t\t\t\tdocumentCount\n\t\t\t\tendDate\n\t\t\t\tid\n\t\t\t\timageCount\n\t\t\t\tissuedDate\n\t\t\t\titemCount\n\t\t\t\titemCountBoq\n\t\t\t\titemCountVarn\n\t\t\t\titemsComplete\n\t\t\t\titemsCompleteBoq\n\t\t\t\titemsCompleteVarn\n\t\t\t\tlocationCount\n\t\t\t\tlocationsComplete\n\t\t\t\tnotes\n\t\t\t\torderNumber\n\t\t\t\torderStatusId\n\t\t\t\torderValueLabour\n\t\t\t\torderValueMaterials\n\t\t\t\torderValueOther\n\t\t\t\torderValueTotal\n\t\t\t\torderValueTotalApplied\n\t\t\t\torderValueTotalBoq\n\t\t\t\torderValueTotalComplete\n\t\t\t\torderValueTotalVarn\n\t\t\t\tprojectTitle\n\t\t\t\tstartDate\n\t\t\t\tstatusDescription\n\t\t\t\tworkType\n\t\t\t\tworktypeId\n\t\t\t}\n\t\t}\n\t}\n`;\n","/** @format */\n\nimport React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport { useQuery } from '@apollo/client';\nimport { GET_PROJECT_APPLICATION_DETAILS } from '../../../api-calls/queries/applications';\nimport { formatNumberGridNoDecimals } from '../../../functions/formattingFunctions';\nimport { useParams } from 'react-router-dom';\n\nconst ProjectApplicationsGrid = () => {\n\tconst { id } = useParams();\n\tconst [rowData, setRowData] = React.useState(null);\n\tconst { loading } = useQuery(GET_PROJECT_APPLICATION_DETAILS, {\n\t\tvariables: { orderId: Number(id) },\n\t\tonCompleted: (data) =>\n\t\t\tsetRowData(data.applicationSummaryOrderheaderWithCumulativeValues.nodes),\n\t});\n\n\tconst columnDefs = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tfield: 'applicationNumber',\n\t\t\t\tsort: 'desc',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'applicationReference',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'prevCumulativeApplicationValue',\n\t\t\t\tvalueFormatter: formatNumberGridNoDecimals,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'thisApplicationValue',\n\t\t\t\tvalueFormatter: formatNumberGridNoDecimals,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tcellStyle: { fontWeight: 'bold' },\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'cumulativeApplicationValue',\n\t\t\t\tvalueFormatter: formatNumberGridNoDecimals,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'locationCount',\n\t\t\t\tvalueFormatter: formatNumberGridNoDecimals,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'itemCount',\n\t\t\t\tvalueFormatter: formatNumberGridNoDecimals,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t},\n\t\t],\n\t\t[],\n\t);\n\n\tconst defaultColDef = React.useMemo(\n\t\t() => ({\n\t\t\tfilter: true,\n\t\t\tsortable: true,\n\t\t\tresizable: true,\n\t\t\tflex: 1,\n\t\t}),\n\t\t[],\n\t);\n\tconst rowClassRules = React.useMemo(() => {\n\t\treturn {\n\t\t\t'application-current': (params) => {\n\t\t\t\treturn params.data.applicationCurrent;\n\t\t\t},\n\t\t};\n\t}, []);\n\tif (loading) return null;\n\treturn (\n\t\t<AgGridReact\n\t\t\tclassName='ag-theme-alpine'\n\t\t\tanimateRows='true'\n\t\t\tcolumnDefs={columnDefs}\n\t\t\tdefaultColDef={defaultColDef}\n\t\t\trowData={rowData}\n\t\t\tdomLayout='autoHeight'\n\t\t\tpagination={true}\n\t\t\tpaginationPageSize={5}\n\t\t\tsuppressRowClickSelection={true}\n\t\t\trowClassRules={rowClassRules}\n\t\t/>\n\t);\n};\n\nexport default ProjectApplicationsGrid;\n","/** @format */\n\nimport React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\n\nimport { formatNumberGridTwoDecimals } from '../../../functions/formattingFunctions';\nimport { gridSelectionsVar } from '../../../cache';\n\nconst ProjectLocationsAvailableForApplicationGrid = ({\n\tsetItemData,\n\trowData,\n\tallItems,\n}) => {\n\tconst gridRef = React.useRef();\n\n\tconst columnDefs = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tfield: 'worksheetReference',\n\t\t\t\tcheckboxSelection: true,\n\t\t\t\theaderCheckboxSelection: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'reference',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'itemsAvailable',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'valueAvailable',\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t},\n\t\t],\n\t\t[],\n\t);\n\n\tconst defaultColDef = React.useMemo(\n\t\t() => ({\n\t\t\tfilter: true,\n\t\t\tsortable: true,\n\t\t\tresizable: true,\n\t\t\tflex: 1,\n\t\t}),\n\t\t[],\n\t);\n\n\tconst onSelectionChanged = React.useCallback(() => {\n\t\tconst selectedRow = gridRef.current.api.getSelectedRows();\n\t\tsetItemData(\n\t\t\tallItems.filter((f) =>\n\t\t\t\tselectedRow.some((item) => item.id === f.sitelocationId),\n\t\t\t),\n\t\t);\n\t}, []);\n\n\tconst createPinnedRowData = () => {\n\t\treturn [\n\t\t\t{\n\t\t\t\tworksheetReference: 'TOTALS',\n\t\t\t\titemsAvailable: rowData\n\t\t\t\t\t.map((item) => Number(item.itemsAvailable))\n\t\t\t\t\t.reduce((tot, val) => {\n\t\t\t\t\t\t return tot + val\n\t\t\t\t\t},0),\n\t\t\t\tvalueAvailable: rowData\n\t\t\t\t\t.map((item) => Number(item.valueAvailable))\n\t\t\t\t\t.reduce((tot, val) => {\n\t\t\t\t\t\treturn tot + val\n\t\t\t\t\t},0)\n\t\t\t},\n\t\t];\n\t};\n\n\tconst onGridReady = (params) => {\n\t\tparams.api.setPinnedBottomRowData(createPinnedRowData());\n\t};\n\n\treturn (\n\t\t<AgGridReact\n\t\t\tclassName='ag-theme-alpine'\n\t\t\tanimateRows='true'\n\t\t\tcolumnDefs={columnDefs}\n\t\t\tdefaultColDef={defaultColDef}\n\t\t\trowData={rowData}\n\t\t\tdomLayout='autoHeight'\n\t\t\tsuppressRowClickSelection={true}\n\t\t\trowSelection={'multiple'}\n\t\t\tonSelectionChanged={onSelectionChanged}\n\t\t\tref={gridRef}\n\t\t\tonGridReady={onGridReady}\n\t\t\tpinnedBottomRowData={[]}\n\t\t\tgetRowStyle={(params) => {\n\t\t\t\tif (params.node.rowPinned) {\n\t\t\t\t\treturn { fontWeight: 'bold' };\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default ProjectLocationsAvailableForApplicationGrid;\n","/** @format */\n\nimport React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport { usePrevious } from 'react-use';\nimport { formatNumberGridTwoDecimals } from '../../../functions/formattingFunctions';\n\nconst ProjectItemsAvailableForApplicationGrid = ({\n\trowData,\n\tsetWorksheetData,\n\tallWorksheets,\n}) => {\n\tconst prevRowData = usePrevious(rowData);\n\tconst gridRef = React.useRef();\n\tconst columnDefs = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tfield: 'worksheetReference',\n\t\t\t\tcheckboxSelection: true,\n\t\t\t\theaderCheckboxSelection: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'itemNumber',\n\t\t\t\tsort: 'asc',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'activityCode',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'activityDescription',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'worksheetsAvailable',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'qtyComplete',\n\t\t\t\tvalueFormatter: (params) =>\n\t\t\t\t\tparams.value ? formatNumberGridTwoDecimals(params) : null,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'unitPayableTotal',\n\t\t\t\tvalueFormatter: (params) =>\n\t\t\t\t\tparams.value ? formatNumberGridTwoDecimals(params) : null,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'valueAvailable',\n\t\t\t\theaderName: 'Value Available',\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t},\n\t\t],\n\t\t[],\n\t);\n\n\tconst defaultColDef = React.useMemo(\n\t\t() => ({\n\t\t\tfilter: true,\n\t\t\tsortable: true,\n\t\t\tresizable: true,\n\t\t\tflex: 1,\n\t\t}),\n\t\t[],\n\t);\n\n\tconst onSelectionChanged = React.useCallback(() => {\n\t\tconst selectedRow = gridRef.current.api.getSelectedRows();\n\t\tsetWorksheetData(\n\t\t\tallWorksheets.filter((f) =>\n\t\t\t\tselectedRow.some((item) => item.id === f.orderdetailId),\n\t\t\t),\n\t\t);\n\t}, [allWorksheets, setWorksheetData]);\n\n\tReact.useEffect(() => {\n\t\tif (gridRef.current.api) {\n\t\t\tlet selectedNodes = gridRef.current.api\n\t\t\t\t.getSelectedNodes()\n\t\t\t\t.map((item) => item.data.id);\n\t\t\tconst newRows = rowData\n\t\t\t\t.filter((md) => prevRowData.every((fd) => fd.id !== md.id))\n\t\t\t\t.map((item) => item.id);\n\t\t\tconst allSelected = [...selectedNodes, ...newRows];\n\t\t\tgridRef.current.api.forEachNode((node) => {\n\t\t\t\tnode.setSelected(allSelected.includes(node.data.id));\n\t\t\t});\n\t\t\tselectedNodes = gridRef.current.api.getSelectedNodes();\n\t\t\tif (selectedNodes.length) {\n\t\t\t\tgridRef.current.api.setPinnedBottomRowData(createPinnedRowData());\n\t\t\t} else {\n\t\t\t\tgridRef.current.api.setPinnedBottomRowData([]);\n\t\t\t}\n\t\t}\n\t}, [rowData]);\n\n\tconst createPinnedRowData = () => {\n\t\treturn [\n\t\t\t{\n\t\t\t\tworksheetReference: 'TOTALS',\n\t\t\t\tvalueAvailable: rowData\n\t\t\t\t\t.map((item) => Number(item.valueAvailable))\n\t\t\t\t\t.reduce((tot, val) => tot + val),\n\t\t\t},\n\t\t];\n\t};\n\n\treturn (\n\t\t<div style={{ height: '40vh' }}>\n\t\t\t<AgGridReact\n\t\t\t\tclassName='ag-theme-alpine'\n\t\t\t\tanimateRows='true'\n\t\t\t\tcolumnDefs={columnDefs}\n\t\t\t\tdefaultColDef={defaultColDef}\n\t\t\t\trowData={rowData}\n\t\t\t\tgetRowId={(params) => params.data.id}\n\t\t\t\t//\tdomLayout='autoHeight'\n\t\t\t\tsuppressRowClickSelection={true}\n\t\t\t\trowSelection={'multiple'}\n\t\t\t\tonSelectionChanged={onSelectionChanged}\n\t\t\t\tref={gridRef}\n\t\t\t\toverlayNoRowsTemplate={\n\t\t\t\t\t'<span style=\"padding: 10px; border: 2px solid #444; font-size: 20px; font-weight: bold; background: #fff\">No Location Selected</span>'\n\t\t\t\t}\n\t\t\t\tpinnedBottomRowData={[]}\n\t\t\t\tgetRowStyle={(params) => {\n\t\t\t\t\tif (params.node.rowPinned) {\n\t\t\t\t\t\treturn { fontWeight: 'bold' };\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default ProjectItemsAvailableForApplicationGrid;\n","/** @format */\n\nimport React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport { usePrevious } from 'react-use';\nimport { formatNumberGridTwoDecimals } from '../../../functions/formattingFunctions';\n\nconst ProjectWorksheetsAvailableForApplicationGrid = ({ rowData }) => {\n\tconst prevRowData = usePrevious(rowData);\n\tconst gridRef = React.useRef();\n\tconst columnDefs = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tfield: 'worksheetReference',\n\t\t\t\tcheckboxSelection: true,\n\t\t\t\theaderCheckboxSelection: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'itemNumber',\n\t\t\t\tsort: 'asc',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'activityCode',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'activityDescription',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'qtyComplete',\n\t\t\t\tvalueFormatter: (params) =>\n\t\t\t\t\tparams.value ? formatNumberGridTwoDecimals(params) : null,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Work Done Date',\n\t\t\t\tfield: 'dateComplete',\n\t\t\t\tvalueFormatter: (params) =>\n\t\t\t\t\tparams.value\n\t\t\t\t\t\t? new Date(params.value).toLocaleDateString('en-GB')\n\t\t\t\t\t\t: null,\n\t\t\t},\n\t\t\t{\n\t\t\t\theaderName: 'Supervisor Name',\n\t\t\t\tfield: 'supervisorName',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'valueComplete',\n\t\t\t\theaderName: 'Value Available',\n\t\t\t\tvalueFormatter: formatNumberGridTwoDecimals,\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t},\n\t\t],\n\t\t[],\n\t);\n\n\tconst defaultColDef = React.useMemo(\n\t\t() => ({\n\t\t\tfilter: true,\n\t\t\tsortable: true,\n\t\t\tresizable: true,\n\t\t\tflex: 1,\n\t\t}),\n\t\t[],\n\t);\n\n\tReact.useEffect(() => {\n\t\tif (gridRef.current.api) {\n\t\t\tlet selectedNodes = gridRef.current.api\n\t\t\t\t.getSelectedNodes()\n\t\t\t\t.map((item) => item.data.id);\n\t\t\tconst newRows = rowData\n\t\t\t\t.filter((md) => prevRowData.every((fd) => fd.id !== md.id))\n\t\t\t\t.map((item) => item.id);\n\t\t\tconst allSelected = [...selectedNodes, ...newRows];\n\t\t\tgridRef.current.api.forEachNode((node) => {\n\t\t\t\tnode.setSelected(allSelected.includes(node.data.id));\n\t\t\t});\n\t\t\tselectedNodes = gridRef.current.api.getSelectedNodes();\n\t\t\tif (selectedNodes.length) {\n\t\t\t\tgridRef.current.api.setPinnedBottomRowData(createPinnedRowData());\n\t\t\t} else {\n\t\t\t\tgridRef.current.api.setPinnedBottomRowData([]);\n\t\t\t}\n\t\t}\n\t}, [rowData]);\n\n\tconst createPinnedRowData = () => {\n\t\treturn [\n\t\t\t{\n\t\t\t\tworksheetReference: 'TOTALS',\n\n\t\t\t\tvalueComplete: rowData\n\t\t\t\t\t.map((item) => Number(item.valueComplete))\n\t\t\t\t\t.reduce((tot, val) => tot + val),\n\t\t\t},\n\t\t];\n\t};\n\treturn (\n\t\t<div style={{ height: '40vh' }}>\n\t\t\t<AgGridReact\n\t\t\t\tclassName='ag-theme-alpine'\n\t\t\t\tanimateRows='true'\n\t\t\t\tcolumnDefs={columnDefs}\n\t\t\t\tdefaultColDef={defaultColDef}\n\t\t\t\trowData={rowData}\n\t\t\t\tgetRowId={(params) => params.data.id}\n\t\t\t\t//\tdomLayout='autoHeight'\n\t\t\t\tsuppressRowClickSelection={true}\n\t\t\t\trowSelection={'multiple'}\n\t\t\t\tref={gridRef}\n\t\t\t\toverlayNoRowsTemplate={\n\t\t\t\t\t'<span style=\"padding: 10px; border: 2px solid #444; font-size: 20px; font-weight: bold; background: #fff\">No Location Selected</span>'\n\t\t\t\t}\n\t\t\t\tpinnedBottomRowData={[{}]}\n\t\t\t\tgetRowStyle={(params) => {\n\t\t\t\t\tif (params.node.rowPinned) {\n\t\t\t\t\t\treturn { fontWeight: 'bold' };\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t);\n};\n\nexport default ProjectWorksheetsAvailableForApplicationGrid;\n","/** @format */\n\nimport React from 'react';\nimport ProjectApplicationsGrid from '../../../grids/grids/ProjectApplicationsGrid';\nimport ProjectLocationsAvailableForApplicationGrid\n  from '../../../grids/grids/ProjectLocationsAvailableForApplicationGrid';\nimport {Box, Button} from '@mui/material';\nimport ProjectItemsAvailableForApplicationGrid from '../../../grids/grids/ProjectItemsAvailableForApplicationGrid';\nimport ProjectWorksheetsAvailableForApplicationGrid\n  from '../../../grids/grids/ProjectWorksheetsAvailableForApplicationGrid';\nimport {useParams} from 'react-router-dom';\nimport {useMutation, useQuery} from '@apollo/client';\nimport {\n  GET_PROJECT_APPLICATION_DETAILS,\n  GET_PROJECT_ITEMS_AVAILABLE_FOR_APPLICATION,\n} from '../../../../api-calls/queries/applications';\nimport {ADD_ITEMS_TO_APPLICATION} from '../../../../api-calls/mutations/project-mutations';\nimport {useConfirm} from 'material-ui-confirm';\n\nconst styles = {\n  container: {display: 'flex'},\n  columnContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexGrow: 1,\n  },\n};\n\nconst ProjectApplications = () => {\n\tconst { id } = useParams();\n\tconst confirm = useConfirm();\n\tconst [locationData, setLocationData] = React.useState([]);\n\tconst [itemData, setItemData] = React.useState([]);\n\tconst [worksheetData, setWorksheetData] = React.useState([]);\n\tconst [allItems, setAllItems] = React.useState([]);\n\tconst [allWorksheets, setAllWorksheets] = React.useState([]);\n\tconst { loading, refetch } = useQuery(\n\t\tGET_PROJECT_ITEMS_AVAILABLE_FOR_APPLICATION,\n\t\t{\n\t\t\tvariables: { orderId: Number(id) },\n\t\t\tfetchPolicy: 'cache-and-network',\n\t\t\tonCompleted: (data) => {\n\t\t\t\tsetLocationData(\n\t\t\t\t\tdata.wpmGraphqlGetLocationsAvailableForApplication.nodes.map(\n\t\t\t\t\t\t(item) => ({\n              ...item,\n              itemsAvailable:\n              data.wpmGraphqlGetItemsAvailableForApplication.nodes.filter(\n                (obj) => obj.sitelocationId === item.id,\n              ).length,\n              valueAvailable: Number(item.valueComplete) - Number(item.valueApplied),\n            }),\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\t\tsetAllItems(\n\t\t\t\t\tdata.wpmGraphqlGetItemsAvailableForApplication.nodes.map((item) => ({\n            ...item,\n            worksheetsAvailable:\n            data.wpmGraphqlGetWorksheetsAvailableForApplication.nodes.filter(\n              (obj) => obj.orderdetailId === item.id,\n            ).length,\n            valueAvailable: Number(item.valueComplete) - Number(item.valueApplied),\n          })),\n\t\t\t\t);\n\t\t\t\tsetAllWorksheets(\n\t\t\t\t\tdata.wpmGraphqlGetWorksheetsAvailableForApplication.nodes,\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t);\n\n\tconst [updateApplication] = useMutation(ADD_ITEMS_TO_APPLICATION, {\n\t\trefetchQueries: [\n\t\t\t{\n\t\t\t\tquery: GET_PROJECT_APPLICATION_DETAILS,\n\t\t\t\tvariables: { orderId: Number(id) },\n\t\t\t},\n\t\t],\n\t\tawaitRefetchQueries: true,\n\t\tonCompleted: () => refetch(),\n\t});\n\n\tconst handleSubmit = () => {\n\t\tconst apiData = worksheetData.map((item) => item.id);\n\t\tconst locationCount = [\n\t\t\t...new Set(worksheetData.map((item) => item.sitelocationId)),\n\t\t].length;\n\t\tconst itemCount = [\n\t\t\t...new Set(worksheetData.map((item) => item.orderdetailId)),\n\t\t].length;\n\t\tconfirm({\n\t\t\ttitle: 'Confirm Data Submission',\n\t\t\ttitleProps: { color: 'red', fontWeight: 'bold' },\n\t\t\tcontent: `Submission Contains ${locationCount} locations(s)\n\t\t\t\t ${itemCount} item(s) With A Value of ${worksheetData\n\t\t\t\t.map((item) => Number(item.valueComplete))\n\t\t\t\t.reduce((tot, num) => tot + num)\n\t\t\t\t.toLocaleString()}`,\n\t\t\tconfirmationText: 'Submit',\n\t\t\tcancellationButtonProps: { color: 'secondary' },\n\t\t\tallowClose: false,\n\t\t\tcontentProps: { fontWeight: 'bold' },\n\t\t})\n\t\t\t.then(() =>\n\t\t\t\tupdateApplication({\n\t\t\t\t\tvariables: { input: apiData, orderId: Number(id) },\n\t\t\t\t}),\n\t\t\t)\n\t\t\t.then(() => {\n\t\t\t\tsetItemData([]);\n\t\t\t\tsetWorksheetData([]);\n\t\t\t});\n\t};\n\n\tif (loading) return null;\n\n\treturn (\n\t\t<Box sx={styles.container}>\n\t\t\t<Box sx={styles.columnContainer}>\n\t\t\t\t<Box p={2}>\n\t\t\t\t\t<div className='grid-title'>Project Applications List</div>\n\t\t\t\t\t<ProjectApplicationsGrid />\n\t\t\t\t</Box>\n\t\t\t\t<Box p={2}>\n\t\t\t\t\t<div className='grid-title'>\n\t\t\t\t\t\tProject Locations Available For Application\n\t\t\t\t\t</div>\n\t\t\t\t\t<ProjectLocationsAvailableForApplicationGrid\n\t\t\t\t\t\tsetItemData={setItemData}\n\t\t\t\t\t\trowData={locationData}\n\t\t\t\t\t\tallItems={allItems}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t\t<Box p={2}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor='submit'\n\t\t\t\t\t\tdisabled={worksheetData.length === 0}\n\t\t\t\t\t\tonClick={handleSubmit}\n\t\t\t\t\t>\n\t\t\t\t\t\tadd items to application\n\t\t\t\t\t</Button>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t\t<Box sx={styles.columnContainer}>\n\t\t\t\t<Box p={2}>\n\t\t\t\t\t<div className='grid-title'>\n\t\t\t\t\t\tLocation Items Available For Application\n\t\t\t\t\t</div>\n\t\t\t\t\t<ProjectItemsAvailableForApplicationGrid\n\t\t\t\t\t\trowData={itemData}\n\t\t\t\t\t\tsetWorksheetData={setWorksheetData}\n\t\t\t\t\t\tallWorksheets={allWorksheets}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t\t<Box p={2}>\n\t\t\t\t\t<div className='grid-title'>\n\t\t\t\t\t\tItem Worksheets Available For Application\n\t\t\t\t\t</div>\n\t\t\t\t\t<ProjectWorksheetsAvailableForApplicationGrid\n\t\t\t\t\t\trowData={worksheetData}\n\t\t\t\t\t\titemData={itemData}\n\t\t\t\t\t/>\n\t\t\t\t</Box>\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default ProjectApplications;\n\n{\n\t/* <Grid container columnSpacing={3} rowSpacing={3} columns={2}>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t\n\t\t\t\t\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t\n\t\t\t\t{/* <div className='grid-title'>Add Items To Application</div> */\n}\n{\n\t/*\t</Grid>\n\t\t\t\n\t\t\t<Grid item xs={1}>\n\t\t\t\t\n\t\t\t</Grid>\n\t\t</Grid> */\n}\n","import {Link} from \"@mui/material\";\n\nconst Hyperlink = props => {\n    const {data} = props\n    return (\n        <Link\n            href={`${process.env.REACT_APP_API_ENDPOINT}/documents/${data[\"headerDocumentFile\"].id}`}\n            target={'_blank'}>\n            {data.headerDocumentFile.id}\n        </Link>\n    );\n\n}\n\nexport default Hyperlink","/** @format */\n\nimport React from 'react';\nimport {AgGridReact} from 'ag-grid-react';\nimport {formatDate} from '../../../functions/formattingFunctions';\nimport HyperLink from '../components/Hyperlink';\nimport {useParams} from 'react-router-dom';\n\nconst ProjectDocumentsGrid = ({rowData}) => {\n\tconst columnDefs = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tfield: 'title',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'createdAt',\n\t\t\t\tfilter: 'agDateColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatDate(params.value),\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolId: 'documentType',\n\t\t\t\theaderName: 'Document Type',\n\t\t\t\tvalueGetter: params => params.data.global ? \"Global\" : \"Project\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolId: 'hyperLink',\n\t\t\t\theaderName: 'Open Document',\n\t\t\t\tcellRenderer: HyperLink,\n\t\t\t\tcellStyle: {fontWeight: 'bold'},\n\t\t\t},\n\t\t],\n\t\t[],\n\t);\n\n\tconst defaultColDef = React.useMemo(\n\t\t() => ({\n\t\t\tfilter: true,\n\t\t\tsortable: true,\n\t\t\tresizable: true,\n\t\t\tflex: 1,\n\t\t}),\n\t\t[],\n\t);\n\t// if (loading) return null;\n\n\treturn (\n\t\t<AgGridReact\n\t\t\tclassName='ag-theme-alpine'\n\t\t\tanimateRows='true'\n\t\t\tcolumnDefs={columnDefs}\n\t\t\tdefaultColDef={defaultColDef}\n\t\t\trowData={rowData}\n\t\t\tdomLayout='autoHeight'\n\t\t\tpagination={true}\n\t\t\tpaginationPageSize={20}\n\t\t\tsuppressRowClickSelection={true}\n\t\t/>\n\t);\n};\n\nexport default ProjectDocumentsGrid;\n","import React from 'react';\nimport {\n    Button,\n    Card,\n    CardHeader,\n    Checkbox,\n    Divider,\n    Grid,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText\n} from \"@mui/material\";\n\nconst not = (a, b) => {\n    return a.filter(value => b.indexOf(value) === -1)\n}\n\nconst intersection = (a, b) => {\n    return a.filter(value => b.indexOf(value) !== -1)\n}\n\nconst union = (a, b) => {\n    return [...a, ...not(b, a)]\n}\n\nconst TransferList = ({options, initial, setSelected}) => {\n    const [checked, setChecked] = React.useState([])\n    const [left, setLeft] = React.useState(options)\n    const [right, setRight] = React.useState(initial)\n\n    const leftChecked = intersection(checked, left);\n    const rightChecked = intersection(checked, right);\n\n    const handleToggle = value => () => {\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n        if (currentIndex === -1) {\n            newChecked.push(value);\n        } else {\n            newChecked.splice(currentIndex, 1);\n        }\n        setChecked(newChecked);\n    }\n\n    const numberOfChecked = items => intersection(checked, items).length\n\n    const handleToggleAll = (items) => () => {\n        if (numberOfChecked(items) === items.length) {\n            setChecked(not(checked, items));\n        } else {\n            setChecked(union(checked, items));\n        }\n    };\n\n    const handleCheckedRight = () => {\n        setRight(right.concat(leftChecked));\n        setSelected(right.concat(leftChecked));\n        setLeft(not(left, leftChecked));\n        setChecked(not(checked, leftChecked));\n    };\n\n    const handleCheckedLeft = () => {\n        setLeft(left.concat(rightChecked));\n        setRight(not(right, rightChecked));\n        setSelected(not(right, rightChecked));\n        setChecked(not(checked, rightChecked));\n    };\n\n    const customList = (title, items) => (\n        <Card>\n            <CardHeader\n                sx={{px: 2, py: 1, bgcolor: '#e6e6e6'}}\n                avatar={\n                    <Checkbox\n                        onClick={handleToggleAll(items)}\n                        checked={numberOfChecked(items) === items.length && items.length !== 0}\n                        indeterminate={\n                            numberOfChecked(items) !== items.length && numberOfChecked(items) !== 0\n                        }\n                        disabled={items.length === 0}\n                        inputProps={{\n                            'aria-label': 'all items selected',\n                        }}\n                    />\n                }\n                title={title}\n                subheader={`${numberOfChecked(items)}/${items.length} selected`}\n            />\n            <Divider/>\n            <List\n                sx={{\n                    width: 500,\n                    height: 750,\n                    bgcolor: '#f2f2f2',\n                    overflow: 'auto',\n                }}\n                dense={false}\n                component=\"div\"\n                role=\"list\"\n            >\n                {items.map((value) => {\n                    const labelId = `transfer-list-all-item-${value.id}-label`;\n                    return (\n                        <ListItem\n                            key={value.id}\n                            role=\"listitem\"\n                            button\n                            onClick={handleToggle(value)}\n                        >\n                            <ListItemIcon>\n                                <Checkbox\n                                    checked={checked.indexOf(value) !== -1}\n                                    tabIndex={-1}\n                                    disableRipple\n                                    inputProps={{\n                                        'aria-labelledby': labelId,\n                                    }}\n                                />\n                            </ListItemIcon>\n                            <ListItemText id={labelId} primary={value.title}/>\n                        </ListItem>\n                    );\n                })}\n                <ListItem/>\n            </List>\n        </Card>\n    )\n\n    return (\n        <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n            <Grid item>{customList('Choices', left)}</Grid>\n            <Grid item>\n                <Grid container direction=\"column\" alignItems=\"center\">\n                    <Button\n                        sx={{my: 5}}\n                        onClick={handleCheckedRight}\n                        disabled={leftChecked.length === 0}\n                        aria-label=\"move selected right\"\n                    >\n                        &gt;\n                    </Button>\n                    <Button\n                        sx={{my: 5}}\n                        onClick={handleCheckedLeft}\n                        disabled={rightChecked.length === 0}\n                        aria-label=\"move selected left\"\n                    >\n                        &lt;\n                    </Button>\n                </Grid>\n            </Grid>\n            <Grid item>{customList('Chosen', right)}</Grid>\n        </Grid>\n    );\n};\n\nexport default TransferList;","import React from 'react';\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {GET_GLOBAL_DOCUMENTS, GET_PROJECT_DOCUMENTS} from \"../../../api-calls/queries/misc\";\nimport TransferList from \"../components/TransferList\";\nimport {Button, DialogActions, DialogContent} from \"@mui/material\";\nimport {UPDATE_PROJECT_GLOBAL_DOCUMENTS} from \"../../../api-calls/mutations/project-mutations\";\n\nconst filterByReference = (arr1, arr2) => {\n    let res = [];\n    res = arr1.filter(el => {\n        return !arr2.find(element => {\n            return element.id === el.id;\n        });\n    });\n    return res;\n}\n\nconst UpdateProjectGlobalDocuments = ({current, hideModal, id}) => {\n\n    const [options, setOptions] = React.useState([])\n    const [selected, setSelected] = React.useState(current)\n    const {loading} = useQuery(GET_GLOBAL_DOCUMENTS, {\n        onCompleted: data => setOptions(filterByReference(data.documents.nodes, current))\n    })\n\n    const [updateProjectDocuments] = useMutation(UPDATE_PROJECT_GLOBAL_DOCUMENTS, {\n        refetchQueries: [\n            {\n                query: GET_PROJECT_DOCUMENTS,\n                variables: {orderId: Number(id)}\n            }\n        ]\n    })\n\n    const onSubmit = () => {\n        const additions = filterByReference(selected, current).map(item => ({\n            orderheaderId: Number(id),\n            documentId: item.id\n        }))\n        const deletions = filterByReference(current, selected).map(item => ({\n            orderheaderId: Number(id),\n            documentId: item.id\n        }))\n        updateProjectDocuments({\n            variables: {additions: additions, deletions: deletions}\n        }).then(() => hideModal())\n    }\n    if (loading) return null\n    return (\n        <>\n            <DialogContent>\n                <TransferList options={options} initial={current} setSelected={setSelected}/>\n            </DialogContent>\n            <DialogActions>\n                <Button\n                    fullWidth\n                    onClick={hideModal}\n                    color='info'\n                    sx={{borderRadius: 0, border: 1, height: '100%'}}>\n                    close\n                </Button>\n                <Button>button</Button>\n                <Button>button</Button>\n                <Button color='submit' onClick={onSubmit}>submit</Button>\n            </DialogActions>\n        </>\n    );\n};\n\nexport default UpdateProjectGlobalDocuments;","import React from 'react';\nimport { useParams } from \"react-router-dom\";\nimport { PhotoCamera } from \"@mui/icons-material\";\nimport { Box, Button, Dialog, DialogTitle, Divider, IconButton } from \"@mui/material\";\nimport { useModal } from \"react-modal-hook\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { gridSelectionsVar } from \"../../../../cache\";\nimport UpdateProjectGlobalDocuments from \"../../../forms/documents/UpdateProjectGlobalDocuments\";\n\nconst UpdateGlobalDocuments = ({ rowData }) => {\n    const current = rowData.filter(obj => obj.global)\n    const { id } = useParams()\n    const [showModal, hideModal] = useModal(() => {\n        return (\n            <Dialog\n                onClose={hideModal}\n                fullWidth={true}\n                maxWidth={'xl'}\n                open={true}>\n                <DialogTitle id='id'>\n                    <Box\n                        display='flex'\n                        alignItems='center'\n                        justifyContent='space-between'>\n                        <Box\n                            flexGrow={1}\n                            sx={{ textTransform: 'uppercase', fontWeight: 'bold' }}>\n                            UPDATE GLOBAL DOCUMENTS FOR PROJECT : {gridSelectionsVar().selectedOrder.projectTitle}\n                        </Box>\n                        <Box>\n                            <IconButton onClick={hideModal}>\n                                <CloseIcon />\n                            </IconButton>\n                        </Box>\n                    </Box>\n                </DialogTitle>\n                <Divider />\n                <UpdateProjectGlobalDocuments hideModal={hideModal} rowData={rowData} current={current} id={id} />\n            </Dialog>\n        )\n    }, [rowData, current, id])\n\n    return (\n        <Button\n            onClick={showModal}\n            startIcon={<PhotoCamera />}\n            color='info'>\n            update global documents\n        </Button>\n    );\n};\n\nexport default UpdateGlobalDocuments;","import React from 'react';\nimport { Button, Grid } from '@mui/material';\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport UpdateGlobalDocuments from \"./UpdateGlobalDocuments\";\n\nconst ProjectDocumentButtons = ({ rowData }) => {\n    return (\n        <Grid container columnSpacing={2} mb={2} mt={2} columns={4}>\n            <Grid item xs={true}>\n                <UpdateGlobalDocuments rowData={rowData} />\n            </Grid>\n            <Grid item xs={true}>\n                <Button\n                    disabled\n                    startIcon={<EditIcon />}\n                    color='update'>\n                    button\n                </Button>\n            </Grid>\n            <Grid item xs={true}>\n                <Button\n                    disabled\n                    startIcon={<EditIcon />}\n                    color='update'>\n                    button\n                </Button>\n            </Grid>\n            <Grid item xs={true}>\n                <Button\n                    disabled\n                    startIcon={<EditIcon />}\n                    color='update'>\n                    button\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ProjectDocumentButtons;","import React from 'react';\nimport ProjectDocumentsGrid from \"../../../grids/grids/ProjectDocumentsGrid\";\nimport ProjectDocumentButtons from \"./ProjectDocumentButtons\";\nimport {useQuery} from \"@apollo/client\";\nimport {GET_PROJECT_DOCUMENTS} from \"../../../../api-calls/queries/misc\";\nimport {useParams} from \"react-router-dom\";\n\nconst ProjectDocuments = () => {\n    const {id} = useParams();\n    const [rowData, setRowData] = React.useState([]);\n    const {loading} = useQuery(GET_PROJECT_DOCUMENTS, {\n        variables: {orderId: Number(id)},\n        fetchPolicy: 'cache-and-network',\n        onCompleted: (data) =>\n            setRowData(data.orderheaderDocuments.nodes.map((item) => item.document)),\n    });\n    if (loading) return null;\n    return (\n        <div>\n            <ProjectDocumentButtons rowData={rowData}/>\n            <hr/>\n            <div className={'grid-title'}>Project Documents Listing</div>\n            <ProjectDocumentsGrid rowData={rowData}/>\n        </div>\n    );\n};\n\nexport default ProjectDocuments;","import React from 'react';\nimport {Button, Grid} from \"@mui/material\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst ProjectWorkbookButtons = () => {\n    const navigate = useNavigate()\n    return (\n        <Grid container columnSpacing={2} mb={2} mt={2} columns={4}>\n            <Grid item xs={1}>\n                <Button\n                    onClick={() => navigate('project-workbook')}\n                    color='info'>\n                    print project workbook\n                </Button>\n            </Grid>\n            <Grid item xs={1}>\n                <Button\n                    color='info'>\n                    button\n                </Button>\n            </Grid>\n            <Grid item xs={1}>\n                <Button\n                    color='info'>\n                    button\n                </Button>\n            </Grid>\n            <Grid item xs={1}>\n                <Button\n                    color='info'>\n                    button\n                </Button>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default ProjectWorkbookButtons;","/** @format */\n\nimport React from 'react';\nimport ProjectWorkbookButtons from './ProjectWorkbookButtons';\nimport {Outlet} from 'react-router-dom';\n\nconst ProjectWorkbooks = () => {\n\treturn (\n\t\t<div>\n\t\t\t<ProjectWorkbookButtons/>\n\t\t\t<hr/>\n\t\t\t<Outlet/>\n\t\t</div>\n\t);\n};\n\nexport default ProjectWorkbooks;\n","/** @format */\n\nimport {Font, StyleSheet, View} from '@react-pdf/renderer';\nimport React from 'react';\n\nconst styles = StyleSheet.create({\n    header: {\n        flexDirection: 'row',\n\n        marginBottom: 5,\n        paddingBottom: 2.5,\n        justifyContent: 'space-between',\n        fontSize: 6,\n        borderBottom: 1,\n        borderStyle: 'solid',\n        textTransform: 'uppercase',\n        fontFamily: 'Open Sans',\n    },\n});\n\nFont.register({\n    family: 'Open Sans',\n    src: `https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFVZ0e.ttf`,\n});\n\nconst ReportHeader = ({children}) => {\n    return (\n        <View style={styles.header} fixed>\n            {children}\n        </View>\n    );\n};\n\nexport default ReportHeader;\n","/** @format */\n\nimport React from 'react';\nimport {StyleSheet, Text, View} from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n\tdataRow: {\n\t\tflexDirection: 'row',\n\t\tjustifyContent: 'space-between',\n\t\tpadding: 10,\n\t\ttextTransform: 'uppercase',\n\t\tfontSize: 15,\n\t},\n});\n\nconst DataItem = ({title, value}) => {\n\treturn (\n\t\t<View style={styles.dataRow}>\n\t\t\t<Text>{title}:</Text>\n\t\t\t<Text>{value}</Text>\n\t\t</View>\n\t);\n};\n\nexport default DataItem;\n","/** @format */\n\nimport React from 'react';\nimport {StyleSheet, View} from '@react-pdf/renderer';\nimport {camelCaseToText} from '../../../functions/formattingFunctions';\nimport DataItem from './DataItem';\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tborderStyle: 'solid',\n\t\tborderWidth: 1,\n\t\t// marginLeft: 10,\n\t\t// marginRight: 10,\n\t\t// marginTop: 2.5,\n\t\t// marginBottom: 2.5,\n\t\tpadding: 10,\n\t\tbackgroundColor: '#f2f2f2',\n\t},\n});\n\nconst DataColumn = ({data}) => {\n\treturn (\n\t\t<View style={styles.container} wrap={false}>\n\t\t\t{Object.entries(data).map(([key, value]) => (\n\t\t\t\t<DataItem title={camelCaseToText(key)} value={value} key={key}/>\n\t\t\t))}\n\t\t</View>\n\t);\n};\n\nexport default DataColumn;\n","/** @format */\n\nimport React from 'react';\nimport {formatNumberTwoDecimals,} from '../../../../../functions/formattingFunctions';\nimport DataColumn from '../../../../reports/components/DataColumn';\n\nfunction ProjectSummarySection(props) {\n\tconst {\n\t\tprojectData: {orderheaderWithValueById},\n\t} = props;\n\tconst {\n\t\tprojectTitle,\n\t\torderNumber,\n\t\tstatusDescription,\n\t\tarea,\n\t\tworkType,\n\t\tlocationCount,\n\t\titemCount,\n\t\torderValueTotal,\n\t\torderValueTotalVarn,\n\t\taverageItemValue,\n\t\taverageLocationValue,\n\t} = orderheaderWithValueById;\n\tconst descriptiveData = {\n\t\tprojectTitle,\n\t\tprojectNumber: orderNumber,\n\t\tprojectStatus: statusDescription,\n\t\tarea,\n\t\tworkType,\n\t\tprojectOrderValue: formatNumberTwoDecimals(orderValueTotal),\n\t\tprojectVariationsValue: formatNumberTwoDecimals(orderValueTotalVarn),\n\t\tlocationCount,\n\t\taverageLocationValue: formatNumberTwoDecimals(averageLocationValue),\n\t\titemCount,\n\t\taverageItemValue: formatNumberTwoDecimals(averageItemValue),\n\t};\n\treturn <DataColumn data={descriptiveData}/>;\n}\n\nexport default ProjectSummarySection;\n","/** @format */\n\nimport React from 'react';\nimport {Font, StyleSheet, Text, View} from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        textTransform: 'uppercase',\n        justifyContent: 'center',\n        textDecoration: 'underline',\n        fontSize: 12,\n        padding: 10,\n        fontFamily: 'Lato Bold',\n    },\n});\n\nFont.register({\n    family: 'Open Sans',\n    src: `https://fonts.gstatic.com/s/opensans/v17/mem8YaGs126MiZpBA-UFVZ0e.ttf`,\n});\n\nFont.register({\n    family: 'Lato',\n    src: `https://fonts.gstatic.com/s/lato/v16/S6uyw4BMUTPHjx4wWw.ttf`,\n});\n\nFont.register({\n    family: 'Lato Italic',\n    src: `https://fonts.gstatic.com/s/lato/v16/S6u8w4BMUTPHjxsAXC-v.ttf`,\n});\n\nFont.register({\n    family: 'Lato Bold',\n    src: `https://fonts.gstatic.com/s/lato/v16/S6u9w4BMUTPHh6UVSwiPHA.ttf`,\n});\n\nconst PageTitle = ({title}) => {\n    return (\n        <View style={styles.container}>\n            <Text>{title}</Text>\n        </View>\n    );\n};\n\nexport default PageTitle;\n","/** @format */\n\nimport React from 'react';\nimport {View} from '@react-pdf/renderer';\n\nconst PageContent = ({children}) => {\n\treturn <View>{children}</View>;\n};\n\nexport default PageContent;\n","/** @format */\n\nimport React from 'react';\nimport {Page, Text} from '@react-pdf/renderer';\nimport ReportHeader from '../../../../reports/components/ReportHeader';\nimport ProjectSummarySection from './ProjectSummarySection';\nimport {DateTime} from 'luxon';\nimport PageTitle from '../../../../reports/components/PageTitle';\nimport PageContent from '../../../../reports/components/PageContent';\n\nconst today = DateTime.now().toLocaleString();\n\nconst ProjectHeaderPage = ({projectData}) => {\n    return (\n        <Page size={'a4'} orientation={'landscape'} style={{padding: 10}}>\n            <ReportHeader>\n                <Text>Printed: {today.toLocaleString()}</Text>\n                <Text>{'Project Workbook Report'}</Text>\n                <Text\n                    render={({pageNumber, totalPages}) =>\n                        `Page:${pageNumber} / ${totalPages}`\n                    }\n                />\n            </ReportHeader>\n            <PageContent>\n                <PageTitle title='PROJECT SUMMARY INFO'/>\n                <ProjectSummarySection projectData={projectData}/>\n            </PageContent>\n        </Page>\n    );\n};\n\nexport default ProjectHeaderPage;\n","/** @format */\n\nimport {StyleSheet, Text, View} from '@react-pdf/renderer';\nimport React from 'react';\nimport {camelCaseToText,} from '../../../functions/formattingFunctions';\n\nconst BORDER_COLOR = '#bfbfbf';\nconst BORDER_BOTTOM_COLOR = '#22415e';\nconst BORDER_STYLE = 'solid';\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        justifyContent: 'center',\n    },\n\n    tableColHeader: {\n        borderStyle: BORDER_STYLE,\n        borderColor: BORDER_COLOR,\n        borderBottomColor: BORDER_BOTTOM_COLOR,\n        borderWidth: 1,\n        backgroundColor: '#e6e6e6',\n        fontSize: 8,\n        padding: 5,\n    },\n\n    tableCell: {\n        fontSize: 8,\n        borderStyle: BORDER_STYLE,\n        borderColor: BORDER_COLOR,\n        borderBottomColor: BORDER_BOTTOM_COLOR,\n        borderWidth: 1,\n        padding: 5,\n        paddingBottom: 10,\n        paddingTop: 10,\n        flexGrow: 1,\n    },\n\n    tableColumn: {\n        flexDirection: 'column',\n        flexGrow: 1,\n        alignItems: 'stretch',\n    },\n});\n\nconst TableColumn = ({data}) => {\n    const header = Object.keys(data)[0];\n    return (\n        <React.Fragment>\n            <View style={styles.tableColumn}>\n                <Text wrap={false} fixed style={styles.tableColHeader}>{camelCaseToText(header.toString())}</Text>\n                {data[header].map((item, idx) => (\n                    <Text wrap={false} style={styles.tableCell} key={idx}>{item}</Text>\n                ))}\n            </View>\n        </React.Fragment>\n    );\n};\n\nconst DataTable = ({data}) => {\n    const headers = Object.keys(data[0])\n    const itemData = headers.map((item) => ({\n        [item]: data.map((row) => row[item]),\n    }));\n    return (\n        <View style={styles.container}>\n            {itemData.map((item, idx) => (\n                <TableColumn data={item} key={idx}/>\n            ))}\n        </View>\n    );\n};\n\nexport default DataTable;\n","import React from 'react';\nimport {StyleSheet, Text, View} from \"@react-pdf/renderer\";\n\nconst BORDER_COLOR = '#bfbfbf';\nconst BORDER_BOTTOM_COLOR = '#22415e';\nconst BORDER_STYLE = 'solid';\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: \"column\",\n        flexGrow: 1,\n        marginTop: 25,\n        position: \"absolute\",\n        bottom: 10,\n        right: 10,\n        left: 10,\n    },\n    tableColHeader: {\n        borderStyle: BORDER_STYLE,\n        borderColor: BORDER_COLOR,\n        borderBottomColor: BORDER_BOTTOM_COLOR,\n        borderWidth: 1,\n        backgroundColor: '#e6e6e6',\n        fontSize: 8,\n        padding: 5,\n        flexGrow: 1\n    },\n    tableCell: {\n        fontSize: 8,\n        borderStyle: BORDER_STYLE,\n        borderColor: BORDER_COLOR,\n        borderBottomColor: BORDER_BOTTOM_COLOR,\n        borderWidth: 1,\n        padding: 5,\n        paddingBottom: 10,\n        paddingTop: 10,\n        flexGrow: 2,\n    },\n})\n\nconst SignatureBar = () => {\n    return (\n        <View style={styles.container}>\n            <View style={{flexDirection: \"row\"}}>\n                <Text style={styles.tableColHeader}>COMPLETED BY</Text>\n                <Text style={styles.tableCell}></Text>\n                <Text style={styles.tableColHeader}>DATE COMPLETE</Text>\n                <Text style={styles.tableCell}></Text>\n                <Text style={styles.tableColHeader}>NO OF PHOTOGRAPHS</Text>\n                <Text style={styles.tableCell}></Text>\n            </View>\n        </View>\n    );\n};\n\nexport default SignatureBar;","/** @format */\n\nimport React from 'react';\nimport {Page, StyleSheet, Text} from '@react-pdf/renderer';\nimport ReportHeader from '../../../../reports/components/ReportHeader';\nimport DataColumn from '../../../../reports/components/DataColumn';\nimport {DateTime} from 'luxon';\nimport PageTitle from '../../../../reports/components/PageTitle';\nimport {formatNumberTwoDecimals} from '../../../../../functions/formattingFunctions';\nimport DataTable from '../../../../reports/components/TableComponents';\nimport SignatureBar from \"../../../../reports/components/SignatureBar\";\n\nconst styles = StyleSheet.create({\n\tcontainer: {\n\t\tdisplay: 'flex',\n\t\tpadding: 10\n\t},\n});\n\nconst ProjectLocationPage = ({projectData}) => {\n\tconst {sitelocationWithValues} = projectData;\n\n\tconst locationData = sitelocationWithValues.nodes.map((item) => {\n\t\tconst {reference, worksheetReference, orderValue, itemCount, id} = item;\n\n\t\treturn {\n\t\t\tlocationData: {\n\t\t\t\tworksheetReference,\n\t\t\t\tlocationReference: reference,\n\t\t\t\tlocationValue: formatNumberTwoDecimals(orderValue),\n\t\t\t\titemCount,\n\t\t\t},\n\t\t\tid,\n\t\t\titemData: item.sitelocationById.orderdetailWithValues.nodes.map(item => ({\n\t\t\t\titemNumber: item.itemNumber,\n\t\t\t\tactivityDescription: item.activityDescription,\n\t\t\t\tactivityCode: item.activityCode,\n\t\t\t\tqtyOrdered: formatNumberTwoDecimals(item.qtyOrdered),\n\t\t\t\t//\tlocationValue: formatNumberTwoDecimals(item.valuePayableTotal),\n\t\t\t\tqtyOs: formatNumberTwoDecimals(item.qtyOs),\n\t\t\t\tqtyComplete: '',\n\t\t\t\tcomments: '',\n\t\t\t}))\n\t\t};\n\t});\n\tconst today = DateTime.now().toLocaleString();\n\n\treturn locationData.map((item) => (\n\t\t<Page size={'a4'} orientation={'landscape'} style={styles.container} key={item.id}>\n\t\t\t<ReportHeader>\n\t\t\t\t<Text>Printed: {today.toLocaleString()}</Text>\n\t\t\t\t<Text>{'Project Workbook Report'}</Text>\n\t\t\t\t<Text\n\t\t\t\t\trender={({pageNumber, totalPages}) =>\n\t\t\t\t\t\t`Page:${pageNumber} / ${totalPages}`\n\t\t\t\t\t}\n\t\t\t\t/>\n\t\t\t</ReportHeader>\n\t\t\t<PageTitle title='LOCATION SUMMARY INFO'/>\n\t\t\t<DataColumn key={item.id} data={item.locationData}/>\n\t\t\t<PageTitle title='BILL ITEM DETAIL'/>\n\t\t\t<DataTable data={item.itemData}/>\n\t\t\t<SignatureBar/>\n\t\t</Page>\n\t));\n};\n\nexport default ProjectLocationPage;\n","/** @format */\n\nimport React from 'react';\nimport {Document, PDFViewer} from '@react-pdf/renderer';\nimport ProjectHeaderPage from './ProjectHeaderPage';\nimport {useParams} from 'react-router-dom';\nimport {useQuery} from '@apollo/client';\nimport {GET_PROJECT_WORKBOOK_DETAILS} from '../../../../../api-calls/queries/misc';\nimport ProjectLocationPage from './ProjectLocationPage';\n\nconst ProjectWorkbookReport = ({projectData}) => {\n    return (\n        <Document>\n            <ProjectHeaderPage projectData={projectData}/>\n            <ProjectLocationPage projectData={projectData}/>\n        </Document>\n    );\n};\n\nconst ProjectWorkbook = () => {\n    const {id} = useParams();\n    const [projectData, setProjectData] = React.useState();\n    const {loading} = useQuery(GET_PROJECT_WORKBOOK_DETAILS, {\n        variables: {orderId: Number(id)},\n        fetchPolicy: 'cache-and-network',\n        onCompleted: (data) => setProjectData(data.orderheader),\n    });\n\n    if (loading) return null;\n    return (\n        <PDFViewer width={'100%'} height={1000}>\n            <ProjectWorkbookReport projectData={projectData}/>\n        </PDFViewer>\n    );\n};\n\nexport default ProjectWorkbook;\n","/** @format */\n\nimport {useRoutes} from 'react-router-dom';\nimport ProjectImages from './images/ProjectImages';\nimport ProjectItems from './items/ProjectItems';\nimport ProjectLocations from './locations/ProjectLocations';\nimport ProjectProcessing from './ProjectProcessing';\nimport ProjectProgress from './locations/ProjectProgress';\nimport ProjectWorksheets from './ProjectWorksheets';\nimport ProjectApplications from './applications/ProjectApplications';\nimport ProjectDocuments from './documents/ProjectDocuments';\n\nimport ProjectWorkbooks from './workbooks/ProjectWorkbooks';\nimport ProjectWorkbook from './workbooks/project-workbook/ProjectWorkbook';\n\nconst ProjectProcessingRoutes = () => {\n\treturn useRoutes([\n\t\t{\n\t\t\tpath: '/',\n\t\t\telement: <ProjectProcessing/>,\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\tpath: 'locations',\n\t\t\t\t\telement: <ProjectLocations/>,\n\t\t\t\t\texact: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpath: 'items',\n\t\t\t\t\telement: <ProjectItems/>,\n\t\t\t\t\texact: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpath: 'worksheets',\n\t\t\t\t\telement: <ProjectWorksheets/>,\n\t\t\t\t\texact: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpath: 'locations/progress',\n\t\t\t\t\telement: <ProjectProgress/>,\n\t\t\t\t\texact: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpath: 'images',\n\t\t\t\t\telement: <ProjectImages/>,\n\t\t\t\t\texact: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpath: 'applications',\n\t\t\t\t\telement: <ProjectApplications/>,\n\t\t\t\t\texact: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpath: 'documents',\n\t\t\t\t\telement: <ProjectDocuments/>,\n\t\t\t\t\texact: true,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpath: 'workbooks',\n\t\t\t\t\telement: <ProjectWorkbooks/>,\n\t\t\t\t\texact: true,\n\t\t\t\t\tchildren: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpath: 'project-workbook',\n\t\t\t\t\t\t\telement: <ProjectWorkbook/>,\n\t\t\t\t\t\t\texact: true,\n\t\t\t\t\t\t},\n\t\t\t\t\t],\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\n\t\t{\n\t\t\tpath: 'items',\n\t\t},\n\t\t{\n\t\t\tpath: 'worksheets',\n\t\t},\n\t]);\n};\nexport default ProjectProcessingRoutes;\n","/** @format */\n\nimport {useQuery} from '@apollo/client';\n//import { CircularProgress } from '@mui/material';\nimport {AgGridReact} from 'ag-grid-react';\nimport React from 'react';\nimport {useLocation} from 'react-router-dom';\nimport {GET_ALL_PROJECT_SUMMARIES} from '../../../api-calls/queries/projects';\nimport {gridSelectionsVar} from '../../../cache';\nimport {\n  divideIfNotZero,\n  formatNumberGridNoDecimals,\n  formatNumberGridTwoDecimals,\n} from '../../../functions/formattingFunctions';\nimport {GridButton} from '../components/CellRenderers';\n\nconst ProjectHeaderGrid = () => {\n  const gridRef = React.useRef();\n  const location = useLocation();\n  const [rowData, setRowData] = React.useState();\n\n  useQuery(GET_ALL_PROJECT_SUMMARIES, {\n    fetchPolicy: 'cache-and-network',\n    onCompleted: (data) => setRowData(data.orderheaderWithValues.nodes),\n  });\n  const [columnDefs, setColumnDefs] = React.useState([\n    {\n      field: 'orderNumber',\n      headerName: 'Project No',\n      checkboxSelection: () => location.pathname === '/admin/projects',\n    },\n    {\n      field: 'projectTitle',\n      headerName: 'Project Title',\n      flex: 2,\n    },\n    {field: 'area'},\n    {\n      field: 'workType',\n      flex: 1.5,\n    },\n    {\n      headerName: 'Order Val',\n      valueGetter: (params) => Number(params.data.orderValueTotal),\n      valueFormatter: formatNumberGridNoDecimals,\n      type: 'numericColumn',\n      cellStyle: {fontWeight: 'bold'},\n      filter: 'agNumberColumnFilter',\n    },\n    {\n      headerName: 'Done Val',\n      valueGetter: (params) => Number(params.data.orderValueTotalComplete),\n      valueFormatter: formatNumberGridNoDecimals,\n      type: 'numericColumn',\n      filter: 'agNumberColumnFilter',\n      cellStyle: {fontWeight: 'bold'},\n    },\n    {\n      headerName: 'To Do Val',\n      valueGetter: (params) =>\n        params.data.orderValueTotal - params.data.orderValueTotalComplete,\n      valueFormatter: formatNumberGridNoDecimals,\n      type: 'numericColumn',\n      filter: 'agNumberColumnFilter',\n    },\n    {\n      headerName: '% Complete',\n      valueGetter: (params) =>\n        divideIfNotZero(\n          params.data.orderValueTotalComplete,\n          params.data.orderValueTotal,\n        ) * 100,\n      type: 'numericColumn',\n      valueFormatter: formatNumberGridTwoDecimals,\n    },\n    {\n      headerName: 'Applied Val',\n      field: 'orderValueTotalApplied',\n      valueFormatter: formatNumberGridNoDecimals,\n      type: 'numericColumn',\n      filter: 'agNumberColumnFilter',\n    },\n    {\n      headerName: 'Locations',\n      field: 'locationCount',\n      type: 'numericColumn',\n      filter: 'agNumberColumnFilter',\n    },\n\n    {\n      headerName: 'Items',\n      field: 'itemCount',\n      type: 'numericColumn',\n      filter: 'agNumberColumnFilter',\n    },\n\n    {\n      headerName: 'Images',\n      type: 'numericColumn',\n      valueFormatter: formatNumberGridNoDecimals,\n      field: 'imageCount',\n      filter: 'agNumberColumnFilter',\n    },\n\n    {\n      headerName: 'Docs',\n      field: 'documentCount',\n      type: 'numericColumn',\n      valueFormatter: formatNumberGridNoDecimals,\n      filter: 'agNumberColumnFilter',\n    },\n\n    {\n      colId: 'selectButton', cellRenderer: GridButton, flex: 1.5, cellRendererParams: params => ( {\n        path: `processing/${params.data.id}`\n      })\n\n    },\n  ]);\n\n  const defaultColDef = React.useMemo(\n    () => ({\n      filter: true,\n      sortable: true,\n      resizable: true,\n      flex: 1,\n    }),\n    [],\n  );\n\n  React.useEffect(() => {\n    if (location.pathname === '/admin/projects') {\n      setColumnDefs((prevState) =>\n        prevState.filter((obj) => obj.colId !== 'selectButton'),\n      );\n    }\n  }, [location.pathname]);\n\n  const onSelectionChanged = React.useCallback(() => {\n    const selectedRow = gridRef.current.api.getSelectedRows();\n    selectedRow.length === 0\n      ? gridSelectionsVar({...gridSelectionsVar(), selectedOrder: false})\n      : gridSelectionsVar({\n        ...gridSelectionsVar(),\n        selectedOrder: selectedRow,\n      });\n  }, []);\n\n  return (\n    <AgGridReact\n      className='ag-theme-alpine'\n      animateRows='true'\n      columnDefs={columnDefs}\n      defaultColDef={defaultColDef}\n      rowData={rowData}\n      rowSelection='single'\n      ref={gridRef}\n      domLayout='autoHeight'\n      enableCellChangeFlash={true}\n      pagination={true}\n      paginationPageSize={20}\n      onSelectionChanged={onSelectionChanged}\n      suppressRowClickSelection={true}\n    />\n  );\n};\n\nexport default ProjectHeaderGrid;\n","/** @format */\n//import { useQuery } from '@apollo/client';\n//import { CircularProgress } from '@mui/material';\n//import { GET_ALL_PROJECT_SUMMARIES } from '../../api-calls/queries/projects';\nimport ProjectHeaderGrid from '../grids/grids/ProjectHeaderGrid';\nimport {gridSelectionsInitialValue, gridSelectionsVar} from '../../cache';\nimport React from 'react';\n\nconst ProjectHeaders = () => {\n\tReact.useEffect(() => {\n\t\tgridSelectionsVar(gridSelectionsInitialValue);\n\t}, []);\n\treturn <ProjectHeaderGrid/>;\n};\n\nexport default ProjectHeaders;\n","/** @format */\n\nimport React from 'react';\nimport TransferList from \"../components/forms/components/TransferList\";\n\nconst ComponentTests = () => {\n\tconst componentRef = React.useRef();\n\n\treturn (\n\t\t<div ref={componentRef}>\n\t\t\t<h1>COMPONENT TESTING</h1>\n\n\t\t\t<hr/>\n\t\t\t<TransferList/>\n\t\t</div>\n\t);\n};\n\nexport default ComponentTests;\n","/** @format */\n\nimport { gql } from '@apollo/client';\n\nexport const GET_DASHBOARD_DATA = gql`\n\tquery GetDashboardData {\n\t\tareaWithValues(orderBy: ID_ASC) {\n\t\t\tnodes {\n\t\t\t\tid\n\t\t\t\tdescription\n\t\t\t\torderCount\n\t\t\t\torderValue\n\t\t\t\tvalueComplete\n\t\t\t}\n\t\t}\n\t\tworkCompleteByAreaPeriodTables(orderBy: PERIOD_DESC, first: 10) {\n\t\t\tnodes {\n\t\t\t\tadmin\n\t\t\t\tcentral\n\t\t\t\tmisc\n\t\t\t\tnorth\n\t\t\t\tperiod\n\t\t\t\tsouth\n\t\t\t\ttest\n\t\t\t}\n\t\t}\n\t\tworkAppliedByAreaAndApplications(orderBy: APPLICATION_DESC, first: 10) {\n\t\t\tnodes {\n\t\t\t\tapplication\n\t\t\t\tnorth\n\t\t\t\tcentral\n\t\t\t\tsouth\n\t\t\t\tadmin\n\t\t\t\tmisc\n\t\t\t\ttest\n\t\t\t}\n\t\t}\n\t}\n`;\n","/** @format */\n\nimport React from 'react';\nimport {AgGridReact} from 'ag-grid-react';\nimport {formatNumberNoDecimals} from '../../../functions/formattingFunctions';\n\nconst AreaValuesGrid = ({rowData}) => {\n    const gridRef = React.useRef();\n\n    const columnDefs = React.useMemo(\n        () => [\n            {\n                field: 'description',\n                headerName: 'Area',\n            },\n            {\n                field: 'orderCount',\n                headerName: 'Project Count',\n            },\n            {\n                field: 'orderValue',\n                headerName: 'Project Order Value',\n                type: 'numericColumn',\n                filter: 'agNumberColumnFilter',\n                valueFormatter: (params) => formatNumberNoDecimals(params.value),\n            },\n            {\n                field: 'valueComplete',\n                type: 'numericColumn',\n                filter: 'agNumberColumnFilter',\n                valueFormatter: (params) => formatNumberNoDecimals(params.value),\n            },\n            {\n                headerName: 'Remaining Value',\n                valueGetter: (params) =>\n                    params.data.orderValue - params.data.valueComplete,\n                valueFormatter: (params) => formatNumberNoDecimals(params.value),\n                type: 'numericColumn',\n                filter: 'agNumberColumnFilter',\n            },\n        ],\n        [],\n    );\n\n    const defaultColDef = React.useMemo(\n        () => ({\n            filter: true,\n            sortable: true,\n            resizable: true,\n            flex: 1,\n        }),\n        [],\n    );\n\n    const createPinnedRowData = () => {\n        return [\n            {\n                description: 'TOTALS',\n                orderCount: rowData\n                    .map((item) => Number(item.orderCount))\n                    .reduce((tot, val) => tot + val),\n                orderValue: rowData\n                    .map((item) => Number(item.orderValue))\n                    .reduce((tot, val) => tot + val),\n                valueComplete: rowData\n                    .map((item) => Number(item.valueComplete))\n                    .reduce((tot, val) => tot + val),\n                remainingValue: rowData\n                    .map((item) => Number(item.orderValue) - Number(item.valueComplete))\n                    .reduce((tot, val) => tot + val),\n            },\n        ];\n    };\n\n    const onGridReady = () => {\n        gridRef.current.api.setPinnedBottomRowData(createPinnedRowData());\n    };\n\n    return (\n        <AgGridReact\n            className='ag-theme-alpine'\n            animateRows='true'\n            columnDefs={columnDefs}\n            defaultColDef={defaultColDef}\n            rowData={rowData}\n            domLayout='autoHeight'\n            pagination={true}\n            paginationPageSize={20}\n            suppressRowClickSelection={true}\n            pinnedBottomRowData={[]}\n            ref={gridRef}\n            onGridReady={onGridReady}\n            getRowStyle={(params) => {\n                if (params.node.rowPinned) {\n                    return {fontWeight: 'bold'};\n                }\n            }}\n        />\n    );\n};\n\nexport default AreaValuesGrid;\n","/** @format */\n\nimport React from 'react';\nimport { AgChartsReact } from 'ag-charts-react';\n\nconst AreaValuesChart = ({ rowData }) => {\n\tconst barOptions = {\n\t\tdata: rowData.map((item) => ({\n\t\t\tarea: item.description,\n\t\t\tvalueOs: Number(item.orderValue) - Number(item.valueComplete),\n\t\t\tvalueComplete: Number(item.valueComplete),\n\t\t})),\n\t\ttitle: {\n\t\t\ttext: \"Order Values By Area\",\n\t\t},\n\t\tseries: [\n\t\t\t{\n\t\t\t\ttype: 'column',\n\t\t\t\txKey: 'area',\n\t\t\t\tyKey: 'valueComplete',\n\t\t\t\tyName: 'Value Complete',\n\t\t\t\tstacked: true,\n\t\t\t},\n\n\t\t\t{\n\t\t\t\ttype: 'column',\n\t\t\t\txKey: 'area',\n\t\t\t\tyKey: 'valueOs',\n\t\t\t\tyName: 'Value Remaining',\n\t\t\t\tstacked: true,\n\t\t\t},\n\t\t],\n\t\taxes: [\n\t\t\t{\n\t\t\t\ttype: 'category',\n\t\t\t\tposition: 'bottom',\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Areas',\n\t\t\t\t\tenabled: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'number',\n\t\t\t\tposition: 'left',\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Project Value (£)',\n\t\t\t\t\tenabled: true,\n\t\t\t\t},\n\t\t\t\tlabel: {\n\t\t\t\t\tformat: 'n'\n\t\t\t\t}\n\t\t\t},\n\t\t],\n\t\ttheme: 'ag-pastel',\n\n\t}\n\n\treturn <AgChartsReact options={barOptions} />;\n\n};\n\nexport default AreaValuesChart;\n","/** @format */\n\nimport React from 'react';\nimport { AgChartsReact } from 'ag-charts-react';\n\nconst WorkCompleteByPeriodArea = ({ rowData }) => {\n\tconst chartRef = React.useRef();\n\n\tconst barOptions = {\n\t\tdata: rowData,\n\n\t\ttitle: {\n\t\t\ttext: 'Work Complete By Period',\n\t\t},\n\n\t\tseries: [\n\t\t\t{\n\t\t\t\ttype: 'column',\n\t\t\t\txKey: 'period',\n\t\t\t\tyKey: 'north',\n\t\t\t\tyName: 'North',\n\t\t\t\tstacked: true,\n\t\t\t},\n\n\t\t\t{\n\t\t\t\ttype: 'column',\n\t\t\t\txKey: 'period',\n\t\t\t\tyKey: 'central',\n\t\t\t\tyName: 'Central',\n\t\t\t\tstacked: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'column',\n\t\t\t\txKey: 'period',\n\t\t\t\tyKey: 'south',\n\t\t\t\tyName: 'South',\n\t\t\t\tstacked: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'column',\n\t\t\t\txKey: 'period',\n\t\t\t\tyKey: 'admin',\n\t\t\t\tyName: 'Admin',\n\t\t\t\tstacked: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'column',\n\t\t\t\txKey: 'period',\n\t\t\t\tyKey: 'misc',\n\t\t\t\tyName: 'Misc',\n\t\t\t\tstacked: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'column',\n\t\t\t\txKey: 'period',\n\t\t\t\tyKey: 'test',\n\t\t\t\tyName: 'Test',\n\t\t\t\tstacked: true,\n\t\t\t},\n\t\t],\n\t\taxes: [\n\t\t\t{\n\t\t\t\ttype: 'category',\n\t\t\t\tposition: 'bottom',\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Period',\n\t\t\t\t\tenabled: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'number',\n\t\t\t\tposition: 'left',\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Value Complete (£)',\n\t\t\t\t\tenabled: true,\n\t\t\t\t},\n\t\t\t\tlabel: {\n\t\t\t\t\tformat: 'n',\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\ttheme: 'ag-pastel',\n\n\t\tlegend: {\n\t\t\tposition: 'right',\n\t\t},\n\t};\n\n\treturn <AgChartsReact options={barOptions} ref={chartRef} />;\n};\n\nexport default WorkCompleteByPeriodArea;\n","/** @format */\n\nimport React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport { formatNumberNoDecimals } from '../../../functions/formattingFunctions';\n\nconst PeriodValuesGrid = ({ rowData }) => {\n\tconst gridRef = React.useRef();\n\tconst columnDefs = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tfield: 'period',\n\t\t\t\tsort: 'desc',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'north',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatNumberNoDecimals(params.value),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'central',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatNumberNoDecimals(params.value),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'south',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatNumberNoDecimals(params.value),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'admin',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatNumberNoDecimals(params.value),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'misc',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatNumberNoDecimals(params.value),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'test',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatNumberNoDecimals(params.value),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'total',\n\t\t\t\theaderName: 'Total',\n\t\t\t\tvalueGetter: (params) => {\n\t\t\t\t\tconst { north, south, central, admin, test, misc } = params.data;\n\t\t\t\t\treturn [north, south, central, admin, test, misc].reduce(\n\t\t\t\t\t\t(tot, val) => tot + val,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatNumberNoDecimals(params.value),\n\t\t\t},\n\t\t],\n\t\t[],\n\t);\n\tconst defaultColDef = React.useMemo(\n\t\t() => ({\n\t\t\tfilter: true,\n\t\t\tsortable: true,\n\t\t\tresizable: true,\n\t\t\tflex: 1,\n\t\t}),\n\t\t[],\n\t);\n\n\tconst createPinnedRowData = () => {\n\t\treturn [\n\t\t\t{\n\t\t\t\tperiod: 'TOTALS',\n\t\t\t\tnorth: rowData\n\t\t\t\t\t.map((item) => Number(item.north))\n\t\t\t\t\t.reduce((tot, val) => tot + val),\n\t\t\t\tcentral: rowData\n\t\t\t\t\t.map((item) => Number(item.central))\n\t\t\t\t\t.reduce((tot, val) => tot + val),\n\t\t\t\tsouth: rowData\n\t\t\t\t\t.map((item) => Number(item.south))\n\t\t\t\t\t.reduce((tot, val) => tot + val),\n\t\t\t\tadmin: rowData\n\t\t\t\t\t.map((item) => Number(item.admin))\n\t\t\t\t\t.reduce((tot, val) => tot + val),\n\t\t\t\tmisc: rowData\n\t\t\t\t\t.map((item) => Number(item.misc))\n\t\t\t\t\t.reduce((tot, val) => tot + val),\n\t\t\t\ttest: rowData\n\t\t\t\t\t.map((item) => Number(item.test))\n\t\t\t\t\t.reduce((tot, val) => tot + val),\n\t\t\t},\n\t\t];\n\t};\n\n\tconst onGridReady = () => {\n\t\tgridRef.current.api.setPinnedBottomRowData(createPinnedRowData());\n\t};\n\n\treturn (\n\t\t<AgGridReact\n\t\t\tclassName='ag-theme-alpine'\n\t\t\tanimateRows='true'\n\t\t\tcolumnDefs={columnDefs}\n\t\t\tdefaultColDef={defaultColDef}\n\t\t\trowData={rowData}\n\t\t\tdomLayout='autoHeight'\n\t\t\tpagination={true}\n\t\t\tpaginationPageSize={20}\n\t\t\tsuppressRowClickSelection={true}\n\t\t\tpinnedBottomRowData={[]}\n\t\t\tref={gridRef}\n\t\t\tonGridReady={onGridReady}\n\t\t\tgetRowStyle={(params) => {\n\t\t\t\tif (params.node.rowPinned) {\n\t\t\t\t\treturn { fontWeight: 'bold' };\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default PeriodValuesGrid;\n","/** @format */\n\nimport React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport { formatNumberNoDecimals } from '../../../functions/formattingFunctions';\n\nconst ApplicationValuesGrid = ({ rowData }) => {\n\tconst gridRef = React.useRef();\n\tconst columnDefs = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tfield: 'application',\n\t\t\t\tsort: 'desc',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'north',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatNumberNoDecimals(params.value),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'central',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatNumberNoDecimals(params.value),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'south',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatNumberNoDecimals(params.value),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'admin',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatNumberNoDecimals(params.value),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'misc',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatNumberNoDecimals(params.value),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'test',\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatNumberNoDecimals(params.value),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'total',\n\t\t\t\theaderName: 'Total',\n\t\t\t\tvalueGetter: (params) => {\n\t\t\t\t\tconst { north, south, central, admin, test, misc } = params.data;\n\t\t\t\t\treturn [north, south, central, admin, test, misc].reduce(\n\t\t\t\t\t\t(tot, val) => tot + val,\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\ttype: 'numericColumn',\n\t\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatNumberNoDecimals(params.value),\n\t\t\t},\n\t\t],\n\t\t[],\n\t);\n\tconst defaultColDef = React.useMemo(\n\t\t() => ({\n\t\t\tfilter: true,\n\t\t\tsortable: true,\n\t\t\tresizable: true,\n\t\t\tflex: 1,\n\t\t}),\n\t\t[],\n\t);\n\n\tconst createPinnedRowData = () => {\n\t\treturn [\n\t\t\t{\n\t\t\t\tapplication: 'TOTALS',\n\t\t\t\tnorth: rowData\n\t\t\t\t\t.map((item) => Number(item.north))\n\t\t\t\t\t.reduce((tot, val) => tot + val),\n\t\t\t\tcentral: rowData\n\t\t\t\t\t.map((item) => Number(item.central))\n\t\t\t\t\t.reduce((tot, val) => tot + val),\n\t\t\t\tsouth: rowData\n\t\t\t\t\t.map((item) => Number(item.south))\n\t\t\t\t\t.reduce((tot, val) => tot + val),\n\t\t\t\tadmin: rowData\n\t\t\t\t\t.map((item) => Number(item.admin))\n\t\t\t\t\t.reduce((tot, val) => tot + val),\n\t\t\t\tmisc: rowData\n\t\t\t\t\t.map((item) => Number(item.misc))\n\t\t\t\t\t.reduce((tot, val) => tot + val),\n\t\t\t\ttest: rowData\n\t\t\t\t\t.map((item) => Number(item.test))\n\t\t\t\t\t.reduce((tot, val) => tot + val),\n\t\t\t},\n\t\t];\n\t};\n\n\tconst onGridReady = () => {\n\t\tgridRef.current.api.setPinnedBottomRowData(createPinnedRowData());\n\t};\n\n\treturn (\n\t\t<AgGridReact\n\t\t\tclassName='ag-theme-alpine'\n\t\t\tanimateRows='true'\n\t\t\tcolumnDefs={columnDefs}\n\t\t\tdefaultColDef={defaultColDef}\n\t\t\trowData={rowData}\n\t\t\tdomLayout='autoHeight'\n\t\t\tpagination={true}\n\t\t\tpaginationPageSize={20}\n\t\t\tsuppressRowClickSelection={true}\n\t\t\tpinnedBottomRowData={[]}\n\t\t\tref={gridRef}\n\t\t\tonGridReady={onGridReady}\n\t\t\tgetRowStyle={(params) => {\n\t\t\t\tif (params.node.rowPinned) {\n\t\t\t\t\treturn { fontWeight: 'bold' };\n\t\t\t\t}\n\t\t\t}}\n\t\t/>\n\t);\n};\n\nexport default ApplicationValuesGrid;\n","/** @format */\n\nimport React from 'react';\nimport { AgChartsReact } from 'ag-charts-react';\n\nconst ApplicationValuesChart = ({ rowData }) => {\n\tconst chartRef = React.useRef();\n\n\tconst barOptions = {\n\t\tdata: rowData,\n\n\t\ttitle: {\n\t\t\ttext: 'Application Values',\n\t\t},\n\n\t\tseries: [\n\t\t\t{\n\t\t\t\ttype: 'column',\n\t\t\t\txKey: 'application',\n\t\t\t\tyKey: 'north',\n\t\t\t\tyName: 'North',\n\t\t\t\tstacked: true,\n\t\t\t},\n\n\t\t\t{\n\t\t\t\ttype: 'column',\n\t\t\t\txKey: 'application',\n\t\t\t\tyKey: 'central',\n\t\t\t\tyName: 'Central',\n\t\t\t\tstacked: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'column',\n\t\t\t\txKey: 'application',\n\t\t\t\tyKey: 'south',\n\t\t\t\tyName: 'South',\n\t\t\t\tstacked: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'column',\n\t\t\t\txKey: 'application',\n\t\t\t\tyKey: 'admin',\n\t\t\t\tyName: 'Admin',\n\t\t\t\tstacked: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'column',\n\t\t\t\txKey: 'application',\n\t\t\t\tyKey: 'misc',\n\t\t\t\tyName: 'Misc',\n\t\t\t\tstacked: true,\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'column',\n\t\t\t\txKey: 'application',\n\t\t\t\tyKey: 'test',\n\t\t\t\tyName: 'Test',\n\t\t\t\tstacked: true,\n\t\t\t},\n\t\t],\n\t\taxes: [\n\t\t\t{\n\t\t\t\ttype: 'category',\n\t\t\t\tposition: 'bottom',\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Application',\n\t\t\t\t\tenabled: true,\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\ttype: 'number',\n\t\t\t\tposition: 'left',\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: 'Value Applied (£)',\n\t\t\t\t\tenabled: true,\n\t\t\t\t},\n\t\t\t\tlabel: {\n\t\t\t\t\tformat: 'n',\n\t\t\t\t},\n\t\t\t},\n\t\t],\n\t\ttheme: 'ag-pastel',\n\n\t\tlegend: {\n\t\t\tposition: 'right',\n\t\t},\n\t};\n\n\treturn <AgChartsReact options={barOptions} ref={chartRef} />;\n};\n\nexport default ApplicationValuesChart;\n","/** @format */\nimport React from 'react';\nimport {Grid} from '@mui/material';\nimport {useQuery} from '@apollo/client';\nimport {GET_DASHBOARD_DATA} from '../../api-calls/queries/dashboard';\nimport AreaValuesGrid from '../grids/grids/AreaValuesGrid';\nimport AreaValuesChart from '../charts/AreaValuesChart';\nimport WorkCompleteByPeriodArea from '../charts/WorkCompleteByPeriodArea';\nimport PeriodValuesGrid from '../grids/grids/PeriodValuesGrid';\nimport ApplicationValuesGrid from '../grids/grids/ApplicationValuesGrid';\nimport ApplicationValuesChart from '../charts/ApplicationValuesChart';\n\nfunction useDashboardFilters() {\n\tconst [filters, setFilter] = React.useState({\n\t\tarea: null,\n\t\tperiod: null,\n\t});\n\n\tconst updateFilter = (filterType, value) => {\n\t\tsetFilter((prevState) => ({\n\t\t\t...prevState,\n\t\t\t[filterType]: value,\n\t\t}));\n\t};\n\n\treturn {\n\t\tmodels: { filters },\n\t\toperations: { updateFilter },\n\t};\n}\n\nconst Dashboard = () => {\n\tconst [rowData, setRowData] = React.useState({});\n\tconst { loading, error} = useQuery(GET_DASHBOARD_DATA, {\n\t\tfetchPolicy: 'cache-and-network',\n\t\tonCompleted: (data) => {\n\t\t\tsetRowData({\n\t\t\t\tareas: data.areaWithValues.nodes,\n\t\t\t\tperiodAreas: data.workCompleteByAreaPeriodTables.nodes.map((obj) =>\n\t\t\t\t\tObject.fromEntries(\n\t\t\t\t\t\tObject.entries(obj).map(([key, value]) => [key, Number(value)]),\n\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t\tapplicationAreas: data.workAppliedByAreaAndApplications.nodes.map(\n\t\t\t\t\t(obj) =>\n\t\t\t\t\t\tObject.fromEntries(\n\t\t\t\t\t\t\tObject.entries(obj).map(([key, value]) => [key, Number(value)]),\n\t\t\t\t\t\t),\n\t\t\t\t),\n\t\t\t});\n\t\t},\n\t});\n\n\n\tif (loading) return null;\n\tif (error) console.log(error);\n\n\treturn (\n\t\t<Grid container columns={2} spacing={3} >\n\t\t\t<Grid item xs={2}>\n\t\t\t\t<div className={'section-title'}>area values</div>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<div style={{ backgroundColor: 'white' }}>\n\t\t\t\t\t<div className={'small-grid-title'}>Area Values Grid</div>\n\t\t\t\t\t<AreaValuesGrid rowData={rowData.areas} />\n\t\t\t\t</div>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<AreaValuesChart rowData={rowData.areas} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={2}>\n\t\t\t\t<div className={'section-title'}>period values</div>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<div style={{ backgroundColor: 'white' }}>\n\t\t\t\t\t<div className={'small-grid-title'}>Period Values Grid</div>\n\t\t\t\t\t<PeriodValuesGrid rowData={rowData.periodAreas} />\n\t\t\t\t</div>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<WorkCompleteByPeriodArea rowData={rowData.periodAreas} />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={2}>\n\t\t\t\t<div className={'section-title'}>application values</div>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<div style={{ backgroundColor: 'white' }}>\n\t\t\t\t\t<div className={'small-grid-title'}>Application Values Grid</div>\n\t\t\t\t\t<ApplicationValuesGrid rowData={rowData.applicationAreas} />\n\t\t\t\t</div>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<ApplicationValuesChart rowData={rowData.applicationAreas} />\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default Dashboard;\n","/** @format */\n\nimport {useApolloClient, useLazyQuery, useMutation} from '@apollo/client';\nimport {Autocomplete, Button, Grid, TextField} from '@mui/material';\nimport {DateTime} from 'luxon';\nimport React from 'react';\nimport {Controller, useForm} from 'react-hook-form';\nimport * as yup from 'yup';\nimport {CREATE_PROJECT_HEADER} from '../../../api-calls/mutations/project-mutations';\nimport {GET_ALL_AREAS, GET_ALL_ORDERHEADER_STATUSES, GET_ALL_WORKTYPES,} from '../../../api-calls/queries/misc';\nimport {GET_ALL_PROJECT_NUMBERS, GET_ALL_PROJECT_SUMMARIES,} from '../../../api-calls/queries/projects';\nimport {useYupValidationResolver} from \"../components/validation\";\n\nconst defaultDate = DateTime.now().toISODate();\n\n\nconst CreateProjectHeaderForm = (props) => {\n\tconst client = useApolloClient();\n\tconst [areaOptions, setAreaOptions] = React.useState([]);\n\tconst [areasOpen, setAreasOpen] = React.useState(false);\n\tconst [worktypeOptions, setWorktypeOptions] = React.useState([]);\n\tconst [worktypesOpen, setWorktypesOpen] = React.useState(false);\n\tconst [orderStatusOpen, setOrderStatusOpen] = React.useState(false);\n\tconst [orderStatusOptions, setOrderStatusOptions] = React.useState([]);\n\n\tconst {orderheaderWithValues} = client.readQuery({\n\t\tquery: GET_ALL_PROJECT_NUMBERS,\n\t});\n\n\tconst projectHeaderSchema = yup.object().shape({\n\t\torderNumber: yup\n\t\t\t.string()\n\t\t\t.required('Project Must Have a Number')\n\t\t\t.length(7, 'Project Number Must Be 7 Characters')\n\t\t\t.notOneOf(\n\t\t\t\torderheaderWithValues?.nodes.map((x) => x.orderNumber),\n\t\t\t\t'Project Number Already Exists!',\n\t\t\t),\n\t\tprojectTitle: yup.string().required('Project Must Have a Title'),\n\t\tareaId: yup.number().required('Area is Required'),\n\t\tworktypeId: yup.number().required('Work Type is Required'),\n\t\torderStatusId: yup.number().required('Status is Required'),\n\t\tstartDate: yup.date().required(),\n\t\tendDate: yup.date().required(),\n\t\tissuedDate: yup.date().required(),\n\t});\n\n\tconst [getAreaOptions, {loading: areasLoading}] = useLazyQuery(\n\t\tGET_ALL_AREAS,\n\t\t{\n\t\t\tonCompleted: (data) => setAreaOptions(data.areas.nodes),\n\t\t\tfetchPolicy: 'cache-and-network',\n\t\t},\n\t);\n\n\tconst [getWorktypeOptions, {loading: worktypesLoading}] = useLazyQuery(\n\t\tGET_ALL_WORKTYPES,\n\t\t{\n\t\t\tonCompleted: (data) => setWorktypeOptions(data.worktypes.nodes),\n\t\t\tfetchPolicy: 'cache-and-network',\n\t\t},\n\t);\n\n\tconst [getOrderheaderStatuses, {loading: orderStatusLoading}] =\n\t\tuseLazyQuery(GET_ALL_ORDERHEADER_STATUSES, {\n\t\t\tonCompleted: (data) =>\n\t\t\t\tsetOrderStatusOptions(data.orderheaderStatuses.nodes),\n\t\t\tfetchPolicy: 'cache-and-network',\n\t\t});\n\n\tconst [createProjectHeader] = useMutation(CREATE_PROJECT_HEADER, {\n\t\trefetchQueries: [\n\t\t\t{\n\t\t\t\tquery: GET_ALL_PROJECT_SUMMARIES,\n\t\t\t},\n\t\t],\n\t\tawaitRefetchQueries: true,\n\t\tonCompleted: () => props.hideModal(),\n\t});\n\n\tconst resolver = useYupValidationResolver(projectHeaderSchema);\n\n\tconst {\n\t\thandleSubmit,\n\t\tcontrol,\n\t\tregister,\n\t\treset,\n\t\tsetFocus,\n\t\tformState: {errors},\n\t} = useForm({\n\t\tmode: 'onSubmit',\n\t\tresolver: resolver,\n\t});\n\n\tconst onSubmit = (data) => {\n\n\t\tcreateProjectHeader({variables: {input: data}});\n\t};\n\n\tReact.useEffect(() => {\n\t\tif (areasOpen && areaOptions.length === 0) {\n\t\t\tgetAreaOptions().then((data) => console.log(data));\n\t\t}\n\t}, [areasOpen, areaOptions.length, getAreaOptions]);\n\n\tReact.useEffect(() => {\n\t\tif (worktypesOpen && worktypeOptions.length === 0) {\n\t\t\tgetWorktypeOptions();\n\t\t}\n\t}, [getWorktypeOptions, worktypeOptions.length, worktypesOpen]);\n\n\tReact.useEffect(() => {\n\t\tif (orderStatusOpen && orderStatusOptions.length === 0) {\n\t\t\tgetOrderheaderStatuses();\n\t\t}\n\t}, [getOrderheaderStatuses, orderStatusOpen, orderStatusOptions.length]);\n\n\tReact.useEffect(() => setFocus('orderNumber'), [setFocus]);\n\n\treturn (\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<Grid container spacing={2}>\n\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\t{...register('orderNumber')}\n\t\t\t\t\t\tlabel={'Project Number'}\n\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.orderNumber?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\t{...register('projectTitle')}\n\t\t\t\t\t\tlabel={'Project Title'}\n\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.projectTitle?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname='areaId'\n\t\t\t\t\t\trender={({field: {ref, onChange, ...field}}) => (\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\toptions={areaOptions}\n\t\t\t\t\t\t\t\tloading={areasLoading}\n\t\t\t\t\t\t\t\tdisableClearable\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.description}\n\t\t\t\t\t\t\t\tonChange={(_, data) => onChange(data.id)}\n\t\t\t\t\t\t\t\topen={areasOpen}\n\t\t\t\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\t\t\t\tsetAreasOpen(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\t\t\tsetAreasOpen(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\t\t\t\tlabel='Area'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.areaId?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname='worktypeId'\n\t\t\t\t\t\trender={({field: {ref, onChange, ...field}}) => (\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\toptions={worktypeOptions}\n\t\t\t\t\t\t\t\tloading={worktypesLoading}\n\t\t\t\t\t\t\t\tdisableClearable\n\t\t\t\t\t\t\t\topenOnFocus\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.description}\n\t\t\t\t\t\t\t\tonChange={(_, data) => onChange(data.id)}\n\t\t\t\t\t\t\t\topen={worktypesOpen}\n\t\t\t\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\t\t\t\tsetWorktypesOpen(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\t\t\tsetWorktypesOpen(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\t\t\t\tlabel='Work Type'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.worktypeId?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname='orderStatusId'\n\t\t\t\t\t\trender={({field: {ref, onChange, ...field}}) => (\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\toptions={orderStatusOptions}\n\t\t\t\t\t\t\t\topenOnFocus\n\t\t\t\t\t\t\t\tdisableClearable\n\t\t\t\t\t\t\t\tloading={orderStatusLoading}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.statusDescription}\n\t\t\t\t\t\t\t\tonChange={(_, data) => onChange(data.id)}\n\t\t\t\t\t\t\t\topen={orderStatusOpen}\n\t\t\t\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\t\t\t\tsetOrderStatusOpen(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\t\t\tsetOrderStatusOpen(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\t\t\t\tlabel='Order Status'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.orderStatusId?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\ttype={'date'}\n\t\t\t\t\t\t{...register('startDate')}\n\t\t\t\t\t\tlabel={'Start Date'}\n\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tInputLabelProps={{shrink: true}}\n\t\t\t\t\t\tdefaultValue={defaultDate}\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.startDate?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\ttype={'date'}\n\t\t\t\t\t\t{...register('endDate')}\n\t\t\t\t\t\tlabel={'End Date'}\n\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tInputLabelProps={{shrink: true}}\n\t\t\t\t\t\tdefaultValue={defaultDate}\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.endDate?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\ttype={'date'}\n\t\t\t\t\t\t{...register('issuedDate')}\n\t\t\t\t\t\tlabel={'Issued Date'}\n\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tInputLabelProps={{shrink: true}}\n\t\t\t\t\t\tdefaultValue={defaultDate}\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.issuedDate?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\t{...register('notes')}\n\t\t\t\t\t\tlabel='Notes'\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tmaxRows={4}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6} mt={2} mb={2}>\n\t\t\t\t\t<Button color='cancel' onClick={() => reset()}>\n\t\t\t\t\t\treset\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={6} mt={2} mb={2}>\n\t\t\t\t\t<Button color='submit' type='submit'>\n\t\t\t\t\t\tsubmit\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</form>\n\t);\n};\n\nexport default CreateProjectHeaderForm;\n","/** @format */\n\nimport {useReactiveVar} from '@apollo/client';\nimport AddIcon from '@mui/icons-material/Add';\nimport CloseIcon from '@mui/icons-material/Close';\nimport {Box, Button, Dialog, DialogContent, DialogTitle, IconButton,} from '@mui/material';\nimport {useModal} from 'react-modal-hook';\nimport {gridSelectionsVar} from '../../../cache';\nimport CreateProjectHeaderForm from '../../forms/projects/CreateProjectHeaderForm';\n\nconst CreateProjectHeader = () => {\n\tconst [showModal, hideModal] = useModal(() => (\n\t\t<Dialog onClose={hideModal} maxWidth='xl' fullWidth={true} open={true}>\n\t\t\t<DialogTitle id='id'>\n\t\t\t\t<Box display='flex' alignItems='center'>\n\t\t\t\t\t<Box flexGrow={1}>CREATE PROJECT HEADER</Box>\n\t\t\t\t\t<Box>\n\t\t\t\t\t\t<IconButton onClick={hideModal}>\n\t\t\t\t\t\t\t<CloseIcon/>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t</DialogTitle>\n\t\t\t<DialogContent>\n\t\t\t\t<CreateProjectHeaderForm hideModal={hideModal}/>\n\t\t\t</DialogContent>\n\t\t</Dialog>\n\t));\n\n\tconst selectedProject =\n\t\tuseReactiveVar(gridSelectionsVar).selectedOrder === false;\n\n\treturn (\n\t\t<Button\n\t\t\tcolor={'create'}\n\t\t\tonClick={showModal}\n\t\t\tdisabled={!selectedProject}\n\t\t\tstartIcon={<AddIcon/>}>\n\t\t\t{'create project header'}\n\t\t</Button>\n\t);\n};\n\nexport default CreateProjectHeader;\n","/** @format */\n\nimport {useMutation, useReactiveVar} from '@apollo/client';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport {Button} from '@mui/material';\nimport {useConfirm} from 'material-ui-confirm';\nimport {DELETE_PROJECT_HEADER} from '../../../api-calls/mutations/project-mutations';\nimport {gridSelectionsVar} from '../../../cache';\nimport {GET_ALL_PROJECT_SUMMARIES} from \"../../../api-calls/queries/projects\";\n\nconst DeleteProjectHeader = () => {\n\tconst confirm = useConfirm();\n\tconst selectedProject = useReactiveVar(gridSelectionsVar).selectedOrder;\n\tconst [deleteProject] = useMutation(DELETE_PROJECT_HEADER, {\n\t\tvariables: {id: selectedProject[0]?.id},\n\t\trefetchQueries: [{\n\t\t\tquery: GET_ALL_PROJECT_SUMMARIES\n\t\t}],\n\t\tawaitRefetchQueries: true\n\t});\n\n\tconst handleDeleteProjectHeader = () => {\n\t\tconfirm({\n\t\t\tdescription: `Delete Project Number ${selectedProject[0].orderNumber} ?`,\n\t\t})\n\t\t\t.then(() => {\n\t\t\t\tdeleteProject().then((data) => console.log(data));\n\t\t\t})\n\t\t\t.catch(() => console.log('Deletion cancelled.'));\n\t};\n\treturn (\n\t\t<Button\n\t\t\tfullWidth\n\t\t\tonClick={handleDeleteProjectHeader}\n\t\t\tcolor='delete'\n\t\t\tdisabled={selectedProject === false}\n\t\t\tstartIcon={<DeleteIcon/>}>\n\t\t\tdelete project header\n\t\t</Button>\n\t);\n};\n\nexport default DeleteProjectHeader;\n","/** @format */\n\nimport {useLazyQuery, useMutation} from '@apollo/client';\nimport {Autocomplete, Button, Grid, TextField} from '@mui/material';\nimport React from 'react';\nimport {Controller, useForm} from 'react-hook-form';\nimport * as yup from 'yup';\nimport {EDIT_PROJECT_HEADER} from '../../../api-calls/mutations/project-mutations';\nimport {GET_ALL_AREAS, GET_ALL_ORDERHEADER_STATUSES, GET_ALL_WORKTYPES,} from '../../../api-calls/queries/misc';\nimport {GET_ALL_PROJECT_SUMMARIES} from '../../../api-calls/queries/projects';\nimport {useYupValidationResolver} from \"../components/validation\";\n\nconst EditProjectHeaderForm = (props) => {\n\tconst [areaOptions, setAreaOptions] = React.useState([\n\t\t{\n\t\t\tid: props.selectedProject[0].areaId,\n\t\t\tdescription: props.selectedProject[0].area,\n\t\t},\n\t]);\n\tconst [areasOpen, setAreasOpen] = React.useState(false);\n\tconst [worktypeOptions, setWorktypeOptions] = React.useState([\n\t\t{\n\t\t\tid: props.selectedProject[0]?.worktypeId,\n\t\t\tdescription: props.selectedProject[0]?.workType,\n\t\t},\n\t]);\n\tconst [worktypesOpen, setWorktypesOpen] = React.useState(false);\n\tconst [orderStatusOpen, setOrderStatusOpen] = React.useState(false);\n\tconst [orderStatusOptions, setOrderStatusOptions] = React.useState([\n\t\t{\n\t\t\tid: props.selectedProject[0]?.orderStatusId,\n\t\t\tstatusDescription: props.selectedProject[0]?.statusDescription,\n\t\t},\n\t]);\n\n\tconst projectHeaderSchema = yup.object().shape({\n\t\tprojectTitle: yup.string().required('Project Must Have a Title'),\n\t\tareaId: yup.number().required('Area is Required'),\n\t\tworktypeId: yup.number().required('Work Type is Required'),\n\t\torderStatusId: yup.number().required('Status is Required'),\n\t});\n\n\tconst [getAreaOptions, {loading: areasLoading}] = useLazyQuery(\n\t\tGET_ALL_AREAS,\n\t\t{\n\t\t\tonCompleted: (data) => setAreaOptions(data.areas.nodes),\n\t\t\tfetchPolicy: 'cache-and-network',\n\t\t},\n\t);\n\n\tconst [getWorktypeOptions, {loading: worktypesLoading}] = useLazyQuery(\n\t\tGET_ALL_WORKTYPES,\n\t\t{\n\t\t\tonCompleted: (data) => setWorktypeOptions(data.worktypes.nodes),\n\t\t\tfetchPolicy: 'cache-and-network',\n\t\t},\n\t);\n\n\tconst [getOrderheaderStatuses, {loading: orderStatusLoading}] =\n\t\tuseLazyQuery(GET_ALL_ORDERHEADER_STATUSES, {\n\t\t\tonCompleted: (data) =>\n\t\t\t\tsetOrderStatusOptions(data.orderheaderStatuses.nodes),\n\t\t\tfetchPolicy: 'cache-and-network',\n\t\t});\n\n\tconst [editProjectHeader] = useMutation(EDIT_PROJECT_HEADER, {\n\t\trefetchQueries: [\n\t\t\t{\n\t\t\t\tquery: GET_ALL_PROJECT_SUMMARIES,\n\t\t\t},\n\t\t],\n\t\tawaitRefetchQueries: true,\n\t\tonCompleted: () => props.hideModal(),\n\t});\n\n\tconst resolver = useYupValidationResolver(projectHeaderSchema);\n\n\tconst {\n\t\thandleSubmit,\n\t\tcontrol,\n\t\tregister,\n\t\treset,\n\t\tformState: {errors},\n\t} = useForm({\n\t\tmode: 'onSubmit',\n\t\tresolver: resolver,\n\t\tdefaultValues: {\n\t\t\torderNumber: props.selectedProject[0].orderNumber,\n\t\t\tprojectTitle: props.selectedProject[0].projectTitle,\n\t\t\tnotes: props.selectedProject[0].notes,\n\t\t\tstartDate: props.selectedProject[0].startDate,\n\t\t\tendDate: props.selectedProject[0].endDate,\n\t\t\tissuedDate: props.selectedProject[0].issuedDate,\n\t\t\tareaId: props.selectedProject[0].areaId,\n\t\t\tworktypeId: props.selectedProject[0].worktypeId,\n\t\t\torderStatusId: props.selectedProject[0].orderStatusId,\n\t\t},\n\t});\n\n\tconst onSubmit = (data) => {\n\t\tconsole.log(data);\n\t\teditProjectHeader({\n\t\t\tvariables: {patch: data, id: props.selectedProject[0].id},\n\t\t});\n\t};\n\n\tReact.useEffect(() => {\n\t\tif (areasOpen && areaOptions.length === 1) {\n\t\t\tgetAreaOptions().then((data) => console.log(data));\n\t\t}\n\t}, [areasOpen, areaOptions.length, getAreaOptions]);\n\n\tReact.useEffect(() => {\n\t\tif (worktypesOpen && worktypeOptions.length === 1) {\n\t\t\tgetWorktypeOptions();\n\t\t}\n\t}, [getWorktypeOptions, worktypeOptions.length, worktypesOpen]);\n\n\tReact.useEffect(() => {\n\t\tif (orderStatusOpen && orderStatusOptions.length === 1) {\n\t\t\tgetOrderheaderStatuses();\n\t\t}\n\t}, [getOrderheaderStatuses, orderStatusOpen, orderStatusOptions.length]);\n\n\treturn (\n\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t<Grid container spacing={2}>\n\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\t{...register('orderNumber')}\n\t\t\t\t\t\tlabel={'Project Number'}\n\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.orderNumber?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\t{...register('projectTitle')}\n\t\t\t\t\t\tlabel={'Project Title'}\n\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.projectTitle?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname='areaId'\n\t\t\t\t\t\trender={({field: {ref, onChange, ...field}}) => (\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\toptions={areaOptions}\n\t\t\t\t\t\t\t\tloading={areasLoading}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.description}\n\t\t\t\t\t\t\t\tonChange={(_, data) => onChange(data.id)}\n\t\t\t\t\t\t\t\tisOptionEqualToValue={(option, value) =>\n\t\t\t\t\t\t\t\t\toption.description === value.description\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\topen={areasOpen}\n\t\t\t\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\t\t\t\tsetAreasOpen(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\t\t\tsetAreasOpen(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tdefaultValue={{\n\t\t\t\t\t\t\t\t\tid: props.selectedProject[0]?.areaId,\n\t\t\t\t\t\t\t\t\tdescription: props.selectedProject[0]?.area,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tinputRef={ref}\n\t\t\t\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\t\t\t\tlabel='Area'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.areaId?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname='worktypeId'\n\t\t\t\t\t\trender={({field: {ref, onChange, ...field}}) => (\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\toptions={worktypeOptions}\n\t\t\t\t\t\t\t\tloading={worktypesLoading}\n\t\t\t\t\t\t\t\topenOnFocus\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.description}\n\t\t\t\t\t\t\t\tonChange={(_, data) => onChange(data.id)}\n\t\t\t\t\t\t\t\topen={worktypesOpen}\n\t\t\t\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\t\t\t\tsetWorktypesOpen(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\t\t\tsetWorktypesOpen(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tdefaultValue={{\n\t\t\t\t\t\t\t\t\tid: props.selectedProject[0]?.worktypeId,\n\t\t\t\t\t\t\t\t\tdescription: props.selectedProject[0]?.workType,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tinputRef={ref}\n\t\t\t\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\t\t\t\tlabel='Work Type'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.worktypeId?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t<Controller\n\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\tname='orderStatusId'\n\t\t\t\t\t\trender={({field: {ref, onChange, ...field}}) => (\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\toptions={orderStatusOptions}\n\t\t\t\t\t\t\t\topenOnFocus\n\t\t\t\t\t\t\t\tloading={orderStatusLoading}\n\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.statusDescription}\n\t\t\t\t\t\t\t\tonChange={(_, data) => onChange(data.id)}\n\t\t\t\t\t\t\t\topen={orderStatusOpen}\n\t\t\t\t\t\t\t\tonOpen={() => {\n\t\t\t\t\t\t\t\t\tsetOrderStatusOpen(true);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonClose={() => {\n\t\t\t\t\t\t\t\t\tsetOrderStatusOpen(false);\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tdefaultValue={{\n\t\t\t\t\t\t\t\t\tid: props.selectedProject[0]?.orderStatusId,\n\t\t\t\t\t\t\t\t\tstatusDescription:\n\t\t\t\t\t\t\t\t\tprops.selectedProject[0]?.statusDescription,\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\t\t\t{...field}\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t\tinputRef={ref}\n\t\t\t\t\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\t\t\t\t\tlabel='Order Status'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)}\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.orderStatusId?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\ttype={'date'}\n\t\t\t\t\t\t{...register('startDate')}\n\t\t\t\t\t\tlabel={'Start Date'}\n\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tInputLabelProps={{shrink: true}}\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.startDate?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\ttype={'date'}\n\t\t\t\t\t\t{...register('endDate')}\n\t\t\t\t\t\tlabel={'End Date'}\n\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tInputLabelProps={{shrink: true}}\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.endDate?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={4}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\ttype={'date'}\n\t\t\t\t\t\t{...register('issuedDate')}\n\t\t\t\t\t\tlabel={'Issued Date'}\n\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tInputLabelProps={{shrink: true}}\n\t\t\t\t\t/>\n\t\t\t\t\t<p style={{color: 'red', fontWeight: 'bold'}}>\n\t\t\t\t\t\t{errors.issuedDate?.message}\n\t\t\t\t\t</p>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\t{...register('notes')}\n\t\t\t\t\t\tlabel='Notes'\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\tvariant='filled'\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tmaxRows={5}\n\t\t\t\t\t\tminRows={5}\n\t\t\t\t\t/>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={6} mt={2} mb={2}>\n\t\t\t\t\t<Button color='cancel' onClick={() => reset()}>\n\t\t\t\t\t\treset\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\n\t\t\t\t<Grid item xs={6} mt={2} mb={2}>\n\t\t\t\t\t<Button color='submit' type='submit'>\n\t\t\t\t\t\tsubmit\n\t\t\t\t\t</Button>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</form>\n\t);\n};\n\nexport default EditProjectHeaderForm;\n","/** @format */\n\nimport {useReactiveVar} from '@apollo/client';\nimport CloseIcon from '@mui/icons-material/Close';\nimport EditIcon from '@mui/icons-material/Edit';\nimport {Box, Button, Dialog, DialogContent, DialogTitle, IconButton,} from '@mui/material';\nimport {useModal} from 'react-modal-hook';\nimport {gridSelectionsVar} from '../../../cache';\nimport EditProjectHeaderForm from '../../forms/projects/EditProjectHeaderForm';\n\nconst EditProjectHeader = () => {\n\tconst selectedProject = useReactiveVar(gridSelectionsVar).selectedOrder;\n\tconst [showModal, hideModal] = useModal(() => {\n\t\treturn (\n\t\t\t<Dialog onClose={hideModal} maxWidth='lg' open={true}>\n\t\t\t\t<DialogTitle id='id'>\n\t\t\t\t\t<Box display='flex' alignItems='center'>\n\t\t\t\t\t\t<Box flexGrow={1}>EDIT PROJECT HEADER</Box>\n\t\t\t\t\t\t<Box>\n\t\t\t\t\t\t\t<IconButton onClick={hideModal}>\n\t\t\t\t\t\t\t\t<CloseIcon/>\n\t\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Box>\n\t\t\t\t</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<EditProjectHeaderForm\n\t\t\t\t\t\thideModal={hideModal}\n\t\t\t\t\t\tselectedProject={selectedProject}\n\t\t\t\t\t/>\n\t\t\t\t</DialogContent>\n\t\t\t</Dialog>\n\t\t);\n\t}, [selectedProject]);\n\n\treturn (\n\t\t<Button\n\t\t\tcolor='update'\n\t\t\tonClick={showModal}\n\t\t\tdisabled={selectedProject === false}\n\t\t\tstartIcon={<EditIcon/>}>\n\t\t\t{'edit project header'}\n\t\t</Button>\n\t);\n};\n\nexport default EditProjectHeader;\n","/** @format */\nimport UploadIcon from '@mui/icons-material/Upload';\nimport { Button, Grid } from '@mui/material';\nimport CreateProjectHeader from './CreateProjectHeader';\nimport DeleteProjectHeader from './DeleteProjectHeader';\nimport EditProjectHeader from './EditProjectHeader';\nimport React from 'react';\nimport { useReactiveVar } from '@apollo/client';\nimport { gridSelectionsVar } from '../../../cache';\nimport { useNavigate } from 'react-router-dom';\n\nconst ProjectAdminButtons = () => {\n\tconst navigate = useNavigate();\n\tconst selectedProject = useReactiveVar(gridSelectionsVar).selectedOrder;\n\treturn (\n\t\t<Grid container spacing={2} mb={2}>\n\t\t\t<Grid item xs={3}>\n\t\t\t\t<CreateProjectHeader />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={3}>\n\t\t\t\t<EditProjectHeader />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={3}>\n\t\t\t\t<DeleteProjectHeader />\n\t\t\t</Grid>\n\t\t\t<Grid item xs={3}>\n\t\t\t\t<Button\n\t\t\t\t\tdisabled={selectedProject === false}\n\t\t\t\t\tstartIcon={<UploadIcon />}\n\t\t\t\t\tonClick={() => navigate('import')}\n\t\t\t\t>\n\t\t\t\t\timport project detail\n\t\t\t\t</Button>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default ProjectAdminButtons;\n","/** @format */\n\nimport ProjectHeaders from '../../projects/ProjectHeaders';\nimport ProjectAdminButtons from './ProjectAdminButtons';\nimport { Outlet } from 'react-router-dom';\n\nconst ProjectAdmin = () => {\n\treturn (\n\t\t<div>\n\t\t\t<ProjectAdminButtons />\n\t\t\t<ProjectHeaders />\n\t\t\t<Outlet />\n\t\t</div>\n\t);\n};\n\nexport default ProjectAdmin;\n","import React from 'react';\nimport { useFieldArray, useForm } from 'react-hook-form';\nimport { Button, DialogActions, DialogContent, Divider, Grid, TextField, } from '@mui/material';\nimport { useConfirm } from 'material-ui-confirm';\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { useMutation } from \"@apollo/client\";\nimport { UPLOAD_DOCUMENTS } from \"../../../api-calls/mutations/project-mutations\";\nimport { GET_GLOBAL_DOCUMENTS } from '../../../api-calls/queries/misc';\n\nconst UploadGlobalDocumentForm = ({ hideModal }) => {\n\n    const confirm = useConfirm();\n\n    const { register, handleSubmit, control, reset, setFocus, getValues } =\n        useForm({\n            defaultValues: {\n                document: [\n                    {\n                        title: '',\n                        headerDocumentFile: '',\n                    },\n                ],\n            },\n        });\n\n    const { fields, append, remove } = useFieldArray({\n        control,\n        name: 'document',\n    });\n\n    const [uploadDocuments] = useMutation(UPLOAD_DOCUMENTS, {\n        refetchQueries: [\n            { query: GET_GLOBAL_DOCUMENTS },\n        ],\n        awaitRefetchQueries: true,\n        onCompleted: () => hideModal()\n    })\n\n    const prepareApiData = data => {\n        return data.map(item => ({\n            title: item.title,\n            global: true,\n            headerDocumentFile: item.headerDocumentFile[0]\n        }))\n    }\n\n    const onSubmit = data => {\n\n        const { document } = data\n        console.log(data, document)\n\n        confirm({\n            title: 'Confirm Data Submission',\n            titleProps: { color: 'red', fontWeight: 'bold' },\n            content: `Submission Contains ${document.length} Item(s)`,\n            confirmationText: 'Confirm',\n            cancellationButtonProps: { color: 'secondary' },\n            allowClose: false,\n            contentProps: { fontWeight: 'bold' },\n        }).then(() => prepareApiData(document)).then(r => uploadDocuments({\n            variables: { input: r }\n        }))\n    }\n\n    React.useEffect(() => {\n        setFocus('document[0].title');\n    }, [setFocus]);\n    return (\n        <>\n            <DialogContent>\n                <form>\n                    <Grid container columnSpacing={2} rowSpacing={3} columns={4}>\n                        {fields.map((field, index) => (\n                            <React.Fragment key={field.id}>\n                                <Grid item={true} xs={1}>\n                                    <TextField\n                                        label={'Document Title'}\n                                        {...register(`document.${index}.title`)}\n                                        variant={'filled'}\n                                        fullWidth={true}\n                                    />\n                                </Grid>\n                                <Grid item xs={2}>\n                                    <TextField\n                                        fullWidth\n                                        variant='filled'\n                                        accept='pdf/*'\n                                        type='file'\n                                        sx={{ height: '100%' }}\n                                        {...register(`document.${index}.headerDocumentFile`)}\n                                    // onChange={(data) => prepareImagePreview(data, index)}\n                                    />\n                                </Grid>\n                                <Grid item xs={1}>\n                                    <Button\n                                        fullWidth\n                                        color='delete'\n                                        onClick={() => remove(index)}\n                                        sx={{ borderRadius: 0, border: 1, height: '100%' }}>\n                                        remove\n                                    </Button>\n                                </Grid>\n                            </React.Fragment>\n                        ))}\n                    </Grid>\n                </form>\n            </DialogContent>\n            <Divider />\n            <DialogActions>\n                <Grid container p={2} spacing={2} columns={4}>\n                    <Grid item xs={1}>\n                        <Button\n                            fullWidth\n                            onClick={hideModal}\n                            color='secondary'\n                            sx={{ borderRadius: 0, border: 1, height: '100%' }}>\n                            close\n                        </Button>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <Button\n                            fullWidth\n                            color='info'\n                            onClick={() => reset()}\n                            sx={{ borderRadius: 0, border: 1, height: '100%' }}>\n                            reset\n                        </Button>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <Button\n                            // ref={addImageButtonRef}\n                            // disabled={disabled}\n                            sx={{ height: '100%', borderRadius: 0, border: 1 }}\n                            color='create'\n                            fullWidth\n                            startIcon={<AddIcon />}\n                            onClick={() => append(undefined, undefined)}>\n                            add another\n                        </Button>\n                    </Grid>\n                    <Grid item xs={1}>\n                        <Button\n                            // ref={submitButtonRef}\n                            fullWidth\n                            color='submit'\n                            onClick={handleSubmit(onSubmit)}\n                            sx={{ borderRadius: 0, border: 1, height: '100%' }}>\n                            submit\n                        </Button>\n                    </Grid>\n                </Grid>\n            </DialogActions>\n        </>\n    );\n};\n\nexport default UploadGlobalDocumentForm;","import React from 'react';\nimport { useModal } from 'react-modal-hook';\nimport { Box, Button, Dialog, DialogTitle, Divider, IconButton, } from '@mui/material';\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport UploadIcon from '@mui/icons-material/Upload'\nimport UploadGlobalDocumentForm from \"../../forms/documents/UploadGlobalDocumentForm\";\n\nconst UploadGlobalDocument = () => {\n    const [showModal, hideModal] = useModal(\n        () => (\n            <Dialog\n                onClose={(event, reason) => {\n                    if (reason === \"backdropClick\") {\n                        console.log(reason);\n                    } else {\n                        hideModal();\n                    }\n                }}\n                fullWidth={true}\n                maxWidth={'xl'}\n                open={true}>\n                <DialogTitle id='id'>\n                    <Box\n                        display='flex'\n                        alignItems='center'\n                        justifyContent='space-between'>\n                        <Box\n                            flexGrow={1}\n                            sx={{ textTransform: 'uppercase', fontWeight: 'bold' }}>\n                            UPLOAD GLOBAL DOCUMENT\n                        </Box>\n                        <Box>\n                            <IconButton onClick={hideModal}>\n                                <CloseIcon />\n                            </IconButton>\n                        </Box>\n                    </Box>\n                </DialogTitle>\n                <Divider />\n                <UploadGlobalDocumentForm hideModal={hideModal} />\n            </Dialog>\n        ),\n        [],\n    );\n    return (\n        <Button\n            onClick={showModal}\n            color='create'\n            startIcon={<UploadIcon />}\n        >\n            upload global document(s)\n        </Button>\n    );\n};\n\nexport default UploadGlobalDocument;","import React from 'react';\nimport { useMutation, useReactiveVar } from '@apollo/client';\nimport { DELETE_GLOBAL_DOCUMENTS } from '../../../api-calls/mutations/project-mutations';\nimport { useConfirm } from 'material-ui-confirm';\nimport { Button } from '@mui/material';\nimport { gridSelectionsVar } from '../../../cache';\nimport { GET_GLOBAL_DOCUMENTS } from '../../../api-calls/queries/misc';\nimport DeleteIcon from '@mui/icons-material/Delete'\n\nconst DeleteGlobalDocuments = () => {\n\n    const confirm = useConfirm()\n\n    const selectedDocuments = useReactiveVar(gridSelectionsVar).selectedDocument\n\n    const [deleteDocuments] = useMutation(DELETE_GLOBAL_DOCUMENTS, {\n        refetchQueries: [\n            {\n                query: GET_GLOBAL_DOCUMENTS\n            }\n        ],\n        awaitRefetchQueries: true\n    })\n\n    const handleDeleteGlobalDocuments = () => {\n\n        confirm({\n            title: 'Confirm Document Deletion',\n            titleProps: { color: 'red', fontWeight: 'bold' },\n            content: `Submission Contains ${gridSelectionsVar().selectedDocument.length\n                } Item(s)`,\n            confirmationText: 'Confirm',\n            cancellationButtonProps: { color: 'secondary' },\n            allowClose: false,\n            contentProps: { fontWeight: 'bold' },\n        }).then(() => deleteDocuments({\n            variables: { input: selectedDocuments.map(item => ({ id: item.id })) }\n        })).catch(console.error)\n    }\n\n    return (\n        <Button\n            fullWidth\n            onClick={handleDeleteGlobalDocuments}\n            color='delete'\n            disabled={selectedDocuments === false}\n            startIcon={<DeleteIcon />}>\n            delete document(s)\n        </Button>\n    );\n};\n\nexport default DeleteGlobalDocuments;","import React from 'react';\nimport { Button, Grid } from \"@mui/material\";\nimport UploadGlobalDocument from \"./UploadGlobalDocument\";\nimport DeleteGlobalDocuments from './DeleteGlobalDocuments';\n\nconst DocumentAdminButtons = () => {\n    return (\n        <Grid container spacing={2} mb={2}>\n            <Grid item xs={3}>\n                <UploadGlobalDocument />\n            </Grid>\n            <Grid item xs={3}>\n                <Button disabled>button</Button>\n            </Grid>\n            <Grid item xs={3}>\n                <DeleteGlobalDocuments />\n            </Grid>\n            <Grid item xs={3}>\n                <Button disabled>button</Button>\n            </Grid>\n        </Grid>\n    );\n};\n\nexport default DocumentAdminButtons;","/** @format */\n\nimport React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport { useQuery } from '@apollo/client';\nimport { GET_GLOBAL_DOCUMENTS } from '../../../api-calls/queries/misc';\nimport { formatDate } from '../../../functions/formattingFunctions';\nimport HyperLink from '../components/Hyperlink';\nimport { gridSelectionsVar } from '../../../cache';\nimport {DefaultColDef} from \"../components/defaultColDef\";\n\n\n\nconst GlobalDocumentsGrid = () => {\n\tconst [rowData, setRowData] = React.useState();\n\tconst gridRef = React.useRef();\n\n\tconst { loading } = useQuery(GET_GLOBAL_DOCUMENTS, {\n\t\tfetchPolicy: 'cache-and-network',\n\t\tonCompleted: (data) => setRowData(data.documents.nodes),\n\t});\n\n\tconst columnDefs = React.useMemo(\n\t\t() => [\n\t\t\t{\n\t\t\t\tfield: 'title',\n\t\t\t\tcheckboxSelection: (params) =>\n\t\t\t\t\tparams.data.orderheaderDocuments.aggregates.distinctCount\n\t\t\t\t\t\t.orderheaderId === '0',\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'createdAt',\n\t\t\t\tfilter: 'agDateColumnFilter',\n\t\t\t\tvalueFormatter: (params) => formatDate(params.value),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfield: 'orderheaderDocuments.aggregates.distinctCount.orderheaderId',\n\t\t\t\theaderName: 'Projects Included',\n\t\t\t},\n\t\t\t{\n\t\t\t\tcolId: 'hyperLink',\n\t\t\t\theaderName: 'Open Document',\n\t\t\t\tcellRenderer: HyperLink,\n\t\t\t\tcellStyle: { fontWeight: 'bold' },\n\t\t\t},\n\t\t],\n\t\t[],\n\t);\n\n\tconst defaultColDef = React.useMemo(\n\t\t() => ({\n\t\t\tfilter: true,\n\t\t\tsortable: true,\n\t\t\tresizable: true,\n\t\t\tflex: 1,\n\t\t}),\n\t\t[],\n\t);\n\n\tconst onSelectionChanged = React.useCallback(() => {\n\t\tconst selectedRow = gridRef.current.api.getSelectedRows();\n\t\tselectedRow.length === 0\n\t\t\t? gridSelectionsVar({ ...gridSelectionsVar(), selectedDocument: false })\n\t\t\t: gridSelectionsVar({\n\t\t\t\t\t...gridSelectionsVar(),\n\t\t\t\t\tselectedDocument: selectedRow,\n\t\t\t  });\n\t}, []);\n\n\tif (loading) return null;\n\treturn (\n\t\t<AgGridReact\n\t\t\tclassName='ag-theme-alpine'\n\t\t\tanimateRows='true'\n\t\t\tcolumnDefs={columnDefs}\n\t\t\tdefaultColDef={defaultColDef}\n\t\t\trowData={rowData}\n\t\t\tdomLayout='autoHeight'\n\t\t\tpagination={true}\n\t\t\tpaginationPageSize={20}\n\t\t\tsuppressRowClickSelection={true}\n\t\t\tonSelectionChanged={onSelectionChanged}\n\t\t\tref={gridRef}\n\t\t\trowSelection='multiple'\n\t\t/>\n\t);\n};\n\nexport default GlobalDocumentsGrid;\n","import React from 'react';\nimport DocumentAdminButtons from \"./DocumentAdminButtons\";\nimport GlobalDocumentsGrid from \"../../grids/grids/GlobalDocumentsGrid\";\n\nconst DocumentAdmin = () => {\n    return (\n        <div>\n            <DocumentAdminButtons/>\n            <GlobalDocumentsGrid/>\n        </div>\n    );\n};\n\nexport default DocumentAdmin;","/** @format */\n\nimport React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport {CircularProgress} from \"@mui/material\";\n\nconst ImportProjectDetailGrid = ({ importData }) => {\n\tconst columnDefs = React.useMemo(() => [\n\t\t{\n\t\t\tfield: 'reference',\n\t\t},\n\t\t{\n\t\t\tfield: 'itemNumber',\n\t\t\ttype: 'numericColumn',\n\t\t\tfilter: 'agNumberColumnFilter',\n\t\t},\n\t\t{\n\t\t\tfield: 'qtyOrdered',\n\t\t\ttype: 'numericColumn',\n\t\t\tfilter: 'agNumberColumnFilter',\n\t\t},\n\t\t{\n\t\t\tfield: 'itemTypeId',\n\t\t\ttype: 'numericColumn',\n\t\t\tfilter: 'agNumberColumnFilter',\n\t\t},\n\t\t{\n\t\t\tfield: 'ratesetId',\n\t\t\ttype: 'numericColumn',\n\t\t\tfilter: 'agNumberColumnFilter',\n\t\t},\n\t\t{\n\t\t\tfield: 'packNumber',\n\t\t},\n\t\t{\n\t\t\tfield: 'valueBaseMaterials',\n\t\t\ttype: 'numericColumn',\n\t\t\tfilter: 'agNumberColumnFilter',\n\t\t},\n\t\t{\n\t\t\tfield: 'activityCode',\n\t\t},\n\t]);\n\n\tconst defaultColDef = React.useMemo(\n\t\t() => ({\n\t\t\tfilter: true,\n\t\t\tsortable: true,\n\t\t\tresizable: true,\n\t\t\tflex: 1,\n\t\t\teditable: true,\n\t\t}),\n\t\t[],\n\t);\n\n\tif (!importData) return null;\n\n\treturn (\n\t\t<AgGridReact\n\t\t\tclassName='ag-theme-alpine'\n\t\t\tanimateRows='true'\n\t\t\tcolumnDefs={columnDefs}\n\t\t\tdefaultColDef={defaultColDef}\n\t\t\trowData={importData}\n\t\t\tdomLayout='autoHeight'\n\t\t\tpagination={true}\n\t\t\tpaginationPageSize={20}\n\t\t\tsingleClickEdit={true}\n\t\t\teditType='fullRow'\n\t\t/>\n\t);\n};\n\nexport default ImportProjectDetailGrid;\n","/** @format */\n\nimport React from \"react\";\nimport {Box, Button, TextField} from \"@mui/material\";\nimport {useLazyQuery, useMutation} from \"@apollo/client\";\nimport {gridSelectionsVar} from \"../../../cache\";\n\nimport {VALIDATE_PROJECT_IMPORT_DATA} from \"../../../api-calls/queries/projects\";\nimport {read, utils} from \"xlsx\";\nimport ImportProjectDetailGrid from \"../../grids/grids/ImportProjectDetailGrid\";\nimport {IMPORT_ORDER_DETAILS} from \"../../../api-calls/mutations/project-mutations\";\nimport {useNavigate} from \"react-router-dom\";\n\nconst ImportProjectDetails = () => {\n  const [importData, setImportData] = React.useState(null);\n  const [refs, setRefs] = React.useState(null);\n  const [items, setItems] = React.useState(null);\n  const [activities, setActivities] = React.useState(null);\n  const [dataValid, setDataValid] = React.useState(false);\n\n  const navigate = useNavigate()\n\n  const [validateImportData] = useLazyQuery(VALIDATE_PROJECT_IMPORT_DATA, {\n    fetchPolicy: 'network-only',\n    onCompleted: data => data.validateProjectImportData.isDataValid && setDataValid(true)\n  });\n\n  const [submitImportData] = useMutation(IMPORT_ORDER_DETAILS, {\n    onCompleted: () => navigate('/admin/projects')\n  })\n\n  const handleImport = (event) => {\n    const files = event.target.files;\n    if (files.length) {\n      const file = files[0];\n      const reader = new FileReader();\n      reader.onload = (event) => {\n        const wb = read(event.target.result);\n        const sheets = wb.SheetNames;\n        if (sheets.length) {\n          const rows = utils.sheet_to_json(wb.Sheets[sheets[0]]);\n          setRefs([...new Set(rows.map((item) => item.reference))]);\n          setItems(rows.map((item) => item.itemNumber));\n          setActivities([...new Set(rows.map((item) => item.activityCode))]);\n          setImportData(rows.map(item => ({\n            ...item,\n            packNumber: item.packNumber.toString(),\n            orderheaderId: Number(gridSelectionsVar().selectedOrder[0].id)\n          })))\n        }\n      };\n      reader.readAsArrayBuffer(file);\n    }\n  };\n\n  const handleValidateData = () => {\n    const apiData = {\n      references: refs,\n      items,\n      codes: activities,\n      rawData: importData,\n    }\n    validateImportData({\n      variables: {\n        importData: apiData,\n        orderId: Number(gridSelectionsVar().selectedOrder[0].id),\n      },\n    }).then((r) => console.log(r));\n  };\n\n  const handleSubmitData = () => {\n    submitImportData({\n      variables: {importData: importData, orderId: Number(gridSelectionsVar().selectedOrder[0].id)}\n    }).then(() => setImportData(null))\n  }\n\n  return (\n    <Box>\n      <Box pt={5} pb={5}>\n        <hr/>\n        <div className=\"grid-title\">IMPORT PROJECT DETAIL</div>\n        <Box display={\"flex\"} flexDirection={'row'} justifyContent={'space-between'} gap={10}>\n          <TextField\n            variant=\"filled\"\n            accept=\"xlsx\"\n            type=\"file\"\n            fullWidth={true}\n            onChange={(data) => {\n              handleImport(data);\n            }}\n          />\n          <Button\n            disabled={importData === null || dataValid}\n            fullWidth={true}\n            onClick={handleValidateData}\n          >\n            Validate Data\n          </Button>\n          <Button\n            disabled={dataValid === false}\n            fullWidth={true}\n            onClick={handleSubmitData}\n            color='create'\n          >\n            submit Data\n          </Button>\n        </Box>\n      </Box>\n      <ImportProjectDetailGrid importData={importData}/>\n    </Box>\n  );\n};\n\nexport default ImportProjectDetails;\n","import {gql} from '@apollo/client'\n\nexport const REOPEN_CLOSED_APPLICATION = gql`\n    mutation OpenClosedApplication($appToOpen:Int!) {\n        openClosedApplication(input: {appToOpen: $appToOpen}) {\n            applicationSummaryWithCumulativeValues {\n                id\n                applicationNumber\n                applicationReference\n                applicationDate\n                applicationCurrent\n                applicationOpen\n                applicationSubmitted\n                prevCumulativeApplicationValue\n                thisApplicationValue\n                cumulativeApplicationValue\n                itemCount\n                locationCount\n                imageCount\n                orderCount\n                areaCount\n            }\n        }\n    }\n`;\n\n\nexport const AUTO_INCREMENT_APPLICATION = gql`\n    mutation AutoIncrementApplication {\n        autoCloseCurrentApplication(input: {}) {\n            applicationSummaryWithCumulativeValues {\n                id\n                applicationNumber\n                applicationReference\n                applicationDate\n                applicationCurrent\n                applicationOpen\n                applicationSubmitted\n                prevCumulativeApplicationValue\n                thisApplicationValue\n                cumulativeApplicationValue\n                itemCount\n                locationCount\n                imageCount\n                orderCount\n                areaCount\n            }\n        }\n    }\n`\n\n\nexport const REMOVE_APPLICATION_SUBMISSION_FLAG = gql`\n    mutation RemoveApplicationSubmissionFlag($id: Int!) {\n        updateApplication(\n            input: { patch: { applicationSubmitted: false }, id: $id }\n        ) {\n            clientMutationId\n        }\n    }\n`;\n\nexport const SUBMIT_APPLICATION = gql`\n    mutation SubmitApplication($appNumber:Int!) {\n        submitApplication(input: {appNumber: $appNumber}) {\n            applicationSummaryWithCumulativeValues {\n                id\n                applicationNumber\n                applicationReference\n                applicationDate\n                applicationCurrent\n                applicationOpen\n                applicationSubmitted\n                prevCumulativeApplicationValue\n                thisApplicationValue\n                cumulativeApplicationValue\n                itemCount\n                locationCount\n                imageCount\n                orderCount\n                areaCount\n            }\n            query {\n                submittedApplicationByApplicationId(applicationId: $appNumber) {\n                    applicationHeader\n                    applicationId\n                    areas\n                    id\n                    images\n                    orderdetails\n                    orderheaders\n                    otherInfo\n                    sitelocations\n                    worksheets\n                }\n            }\n        }\n    }\n\n`;\n\n","import React from 'react';\nimport {Button} from \"@mui/material\";\nimport {useMutation} from \"@apollo/client\";\nimport {\n  AUTO_INCREMENT_APPLICATION\n} from \"../../../api-calls/mutations/application-mutations\";\nimport {useConfirm} from \"material-ui-confirm\";\nimport {gridSelectionsVar} from \"../../../cache\";\n\nfunction findCurrentApplication(app) {\n  return app.applicationCurrent === true\n}\n\nfunction findHighestAppNumber(apps) {\n  return Math.max(...apps.map(o => o.applicationNumber))\n}\n\nconst CloseCurrentApplication = ({rowData,setRowData}) => {\n\n  const confirm = useConfirm()\n\n  const [closeApp] = useMutation(AUTO_INCREMENT_APPLICATION,{\n    fetchPolicy: 'network-only',\n    onCompleted:(data) => {\n      setRowData(data.autoCloseCurrentApplication.applicationSummaryWithCumulativeValues)\n      gridSelectionsVar({...gridSelectionsVar(), selectedApplication: false})\n    }\n  });\n\n  const currentApp = rowData?.find(app => findCurrentApplication(app)) ? rowData?.find(app => findCurrentApplication(app)):false\n\n  const latestApp = findHighestAppNumber(rowData)\n\n  const handleCloseApplication = () => {\n    confirm({\n      title: 'Confirm Close Application',\n      titleProps: {color: 'red', fontWeight: 'bold'},\n      description: `Are You Sure You Want To Close ${currentApp.applicationReference} ?`,\n      confirmationText: 'Update Application',\n      cancellationButtonProps: {color: 'secondary'},\n      confirmationButtonProps: {autoFocus: true, color: 'update'},\n      allowClose: false,\n    }).then(() => closeApp())\n  };\n\n  return (\n    <Button\n      disabled={currentApp.applicationNumber !== latestApp}\n      onClick={handleCloseApplication}\n      color='action'\n      fullWidth={true}>\n      increment application\n    </Button>\n  );\n};\n\nexport default CloseCurrentApplication;","import React from 'react';\nimport {Button} from \"@mui/material\";\nimport {useMutation, useReactiveVar} from \"@apollo/client\";\nimport {REOPEN_CLOSED_APPLICATION} from \"../../../api-calls/mutations/application-mutations\";\nimport {gridSelectionsVar} from \"../../../cache\";\n\nconst ReOpenClosedApplication = () => {\n  const isSelected = useReactiveVar(gridSelectionsVar).selectedApplication !== false\n  const isCurrent = useReactiveVar(gridSelectionsVar).selectedApplication[0]?.applicationCurrent\n  const isSubmitted = useReactiveVar(gridSelectionsVar).selectedApplication[0]?.applicationSubmitted\n  const selectedApplication =  useReactiveVar(gridSelectionsVar).selectedApplication\n\n  const [reopen] = useMutation(REOPEN_CLOSED_APPLICATION,{\n    onCompleted:() => gridSelectionsVar({...gridSelectionsVar(), selectedApplication: false})\n  })\n\n  const handleReOpen = () => {\n    reopen({variables:{appToOpen:Number(selectedApplication[0].id)}}).then(console.log)\n  }\n  return (\n    <Button\n     disabled={!isSelected || isCurrent || isSubmitted}\n      onClick={handleReOpen}\n      color='action'\n      fullWidth={true}>\n      open selected application\n    </Button>\n  );\n};\n\nexport default ReOpenClosedApplication;","import React from 'react';\nimport {utils, writeFile} from \"xlsx\";\n\nconst allDetailsWorkbook = (data) => {\n  console.log(data)\n  data.forEach(item => console.log(item[0], item[1]))\n  const workbook = utils.book_new()\n   data.forEach(item => utils.book_append_sheet(workbook, utils.json_to_sheet(item[1]), item[0].toString()))\n   return writeFile(workbook, `${data[0][1][0].application_reference}.xlsx`);\n}\n\nconst downloadSubmissionData = (data) => {\n  const header = data.applicationHeader\n  const areas = data.areas\n  const projects = data.orderheaders\n  const items = data.orderdetails\n  const locations = data.sitelocations\n  const worksheets = data.worksheets\n\n  const bookData = {\n    header,\n    areas,\n    projects,\n    locations,\n    items,worksheets\n  }\n\n\n  console.log(Object.entries(bookData))\n  allDetailsWorkbook(Object.entries(bookData))\n\n};\n\nexport default downloadSubmissionData;","import React from 'react';\nimport {useMutation, useReactiveVar} from \"@apollo/client\";\nimport {Button} from \"@mui/material\";\nimport {SUBMIT_APPLICATION} from \"../../../api-calls/mutations/application-mutations\";\nimport {gridSelectionsVar} from \"../../../cache\";\nimport {useConfirm} from \"material-ui-confirm\";\nimport downloadSubmissionData from \"./DownloadSubmissionData\";\n\nconst SubmitApplication = ({rowData}) => {\n  const selectedApplication = useReactiveVar(gridSelectionsVar).selectedApplication\n  const isSelected = useReactiveVar(gridSelectionsVar).selectedApplication !== false\n  const isSubmitted = useReactiveVar(gridSelectionsVar).selectedApplication[0]?.applicationSubmitted\n  const isValid = rowData.filter(obj => obj.applicationNumber === selectedApplication[0]?.applicationNumber - 1)[0]?.applicationSubmitted | selectedApplication[0]?.applicationNumber === 1\n  const isOpen = useReactiveVar(gridSelectionsVar).selectedApplication[0]?.applicationOpen\n  const confirm = useConfirm()\n\n  const [submitApp, {error}] = useMutation(SUBMIT_APPLICATION, {\n    fetchPolicy: 'network-only',\n    onCompleted: () => {\n      gridSelectionsVar({...gridSelectionsVar(), selectedApplication: false})\n    }\n  })\n\n  const handleSubmitApp = () => {\n    confirm({\n      title: 'Confirm Submit Application',\n      titleProps: {color: 'red', fontWeight: 'bold'},\n      description: `Are You Sure You Want To Submit ${selectedApplication[0].applicationReference} ?`,\n      confirmationText: 'Submit Application',\n      cancellationButtonProps: {color: 'secondary'},\n      confirmationButtonProps: {autoFocus: true, color: 'update'},\n      allowClose: false,\n    }).then(() => submitApp({variables: {appNumber: selectedApplication[0].id}}))\n      .then((r) => {\n\n        postSubmission(r.data)\n      }).catch((err) => console.log(err))\n  }\n\n  const postSubmission = (data) => {\n    confirm({\n      title: error ? 'Submission Failed' : 'Application Submitted!',\n      titleProps: {color: 'red', fontWeight: 'bold'},\n      cancellationButtonProps: {color: 'secondary'},\n      confirmationButtonProps: {autoFocus: true, color: 'update'},\n      confirmationText: 'VIEW SUBMISSION DATA',\n      allowClose: false,\n    }).then(() => {\n      console.log(data);\n      downloadSubmissionData(data.submitApplication.query.submittedApplicationByApplicationId)\n    }).catch(console.log)\n  }\n\n  return (\n    <Button\n      disabled={!isSelected || isSubmitted || isOpen || !isValid}\n      onClick={handleSubmitApp}\n      color='action'\n      fullWidth={true}>\n      submit application\n    </Button>\n  );\n};\n\nexport default SubmitApplication;","import React from 'react';\nimport {Button, Grid} from \"@mui/material\";\nimport DownloadIcon from '@mui/icons-material/Download';\nimport CloseCurrentApplication from \"./CloseCurrentApplication\";\nimport ReOpenClosedApplication from \"./ReOpenClosedApplication\";\nimport SubmitApplication from \"./SubmitApplication\";\n\nconst ApplicationAdminButtons = ({rowData, setRowData}) => {\n  return (\n    <Grid container spacing={2} mb={2} mt={1} columns={5}>\n      <Grid item={true} xs={1}>\n        <CloseCurrentApplication rowData={rowData} setRowData={setRowData}/>\n      </Grid>\n      <Grid item={true} xs={1}>\n        <ReOpenClosedApplication rowData={rowData}/>\n      </Grid>\n      <Grid item={true} xs={1}>\n        <SubmitApplication rowData={rowData}/>\n      </Grid>\n      <Grid item={true} xs={1}>\n        <Button\n          disabled={true}\n         \n          fullWidth={true}\n          color='action'>\n          remove submission flag\n        </Button>\n      </Grid>\n      <Grid item={true} xs={1}>\n        <Button\n          startIcon={<DownloadIcon/>}\n          disabled={true}\n          /* disabled={\n             selectedApplication === false ||\n             selectedApplication?.applicationSubmitted === false\n           }\n           onClick={handleExportDetail}*/\n          fullWidth={true}\n          color='action'>\n          download submission data\n        </Button>\n      </Grid>\n      {/*  <Grid item={true} xs={1}>\n        <Button\n          disabled={!isSelected}\n          fullWidth={true}\n          color='action'>\n          view application detail\n        </Button>\n      </Grid>*/}\n    </Grid>\n  );\n};\n\nexport default ApplicationAdminButtons;","/** @format */\n\nimport React from 'react';\nimport {AgGridReact} from 'ag-grid-react';\nimport {formatDate, formatNumberGridNoDecimals} from '../../../functions/formattingFunctions';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport {useLocation} from \"react-router-dom\";\nimport {gridSelectionsVar} from \"../../../cache\";\n\nconst ApplicationsGrid = ({rowData}) => {\n\n  const location = useLocation()\n\n  const gridRef = React.useRef()\n\n  const columnDefs = React.useMemo(\n    () => [\n      {\n        field: 'applicationNumber',\n        sort: 'desc',\n        checkboxSelection: () => location.pathname === '/admin/applications',\n      },\n      {\n        field: 'applicationReference',\n      },\n      {\n        field: 'applicationDate',\n        valueFormatter: params => formatDate(params.value)\n      },\n      {\n        field: 'prevCumulativeApplicationValue',\n        valueFormatter: formatNumberGridNoDecimals,\n        type: 'numericColumn',\n        filter: 'agNumberColumnFilter',\n      },\n      {\n        field: 'thisApplicationValue',\n        valueFormatter: formatNumberGridNoDecimals,\n        type: 'numericColumn',\n        filter: 'agNumberColumnFilter',\n        cellStyle: {fontWeight: 'bold'},\n      },\n      {\n        field: 'cumulativeApplicationValue',\n        valueFormatter: formatNumberGridNoDecimals,\n        type: 'numericColumn',\n        filter: 'agNumberColumnFilter',\n      },\n      {\n        field: 'areaCount',\n        valueFormatter: formatNumberGridNoDecimals,\n        type: 'numericColumn',\n        filter: 'agNumberColumnFilter',\n      },\n      {\n        field: 'orderCount',\n        valueFormatter: formatNumberGridNoDecimals,\n        type: 'numericColumn',\n        filter: 'agNumberColumnFilter',\n      }, {\n        field: 'locationCount',\n        valueFormatter: formatNumberGridNoDecimals,\n        type: 'numericColumn',\n        filter: 'agNumberColumnFilter',\n      },\n      {\n        field: 'itemCount',\n        valueFormatter: formatNumberGridNoDecimals,\n        type: 'numericColumn',\n        filter: 'agNumberColumnFilter',\n      },\n      {\n        field: 'applicationSubmitted',\n        headerClass: 'text-center',\n        cellRenderer: params => {\n          return params.data.applicationSubmitted === true ?\n            <div style={{textAlign: \"center\", marginTop: 5}}><DoneIcon color='submit'/></div> :\n            <div style={{textAlign: \"center\", marginTop: 5}}><ClearIcon color='error'/></div>\n        }\n      },\n      {\n        field: 'applicationOpen',\n        headerClass: 'text-center',\n        cellRenderer: params => {\n          return params.data.applicationOpen === true ?\n            <div style={{textAlign: \"center\", marginTop: 5}}><DoneIcon color='submit'/></div> :\n            <div style={{textAlign: \"center\", marginTop: 5}}><ClearIcon color='error'/></div>\n        }\n      },\n      {\n        field: 'applicationCurrent',\n        headerClass: 'text-center',\n        cellRenderer: params => {\n          return params.data.applicationCurrent === true ?\n            <div style={{textAlign: \"center\", marginTop: 5}}><DoneIcon color='submit'/></div> :\n            <div style={{textAlign: \"center\", marginTop: 5}}><ClearIcon color='error'/></div>\n        }\n      },\n      /*{\n        colId: 'selectButton', cellRenderer: GridButton, flex: 1.5, cellRendererParams: params => ({\n          path: params.data.id.toString()\n        })\n\n      },*/\n    ],\n    [],\n  );\n\n  const defaultColDef = React.useMemo(\n    () => ({\n      filter: true,\n      sortable: true,\n      resizable: true,\n      flex: 1,\n    }),\n    [],\n  );\n  const rowClassRules = React.useMemo(() => {\n    return {\n      'application-current': (params) => {\n        return params.data.applicationCurrent;\n      },\n    };\n  }, []);\n\n\n    const onSelectionChanged = React.useCallback(() => {\n      const selectedRow = gridRef.current.api.getSelectedRows();\n      selectedRow.length === 0\n        ? gridSelectionsVar({...gridSelectionsVar(), selectedApplication: false})\n        : gridSelectionsVar({\n          ...gridSelectionsVar(),\n          selectedApplication: selectedRow,\n        });\n    }, []);\n\n\n  return (\n    <AgGridReact\n      className='ag-theme-alpine'\n      ref={gridRef}\n      rowSelection='single'\n      animateRows='true'\n      columnDefs={columnDefs}\n      defaultColDef={defaultColDef}\n      rowData={rowData}\n      domLayout='autoHeight'\n      pagination={false}\n      paginationPageSize={10}\n      suppressRowClickSelection={true}\n      rowClassRules={rowClassRules}\n      onSelectionChanged={onSelectionChanged}\n    />\n  );\n};\n\nexport default ApplicationsGrid;\n","import React from 'react';\nimport ApplicationAdminButtons from \"./ApplicationAdminButtons\";\nimport ApplicationsGrid from \"../../grids/grids/ApplicationsGrid\";\nimport {useQuery} from '@apollo/client';\nimport {GET_APPLICATION_HEADERS} from '../../../api-calls/queries/applications';\n\nconst ApplicationAdmin = () => {\n  const [rowData, setRowData] = React.useState([]);\n  const {loading, refetch} = useQuery(GET_APPLICATION_HEADERS, {\n    fetchPolicy:'network-only',\n    notifyOnNetworkStatusChange:true,\n    onCompleted: data => setRowData(data.applicationSummaryWithCumulativeValues.nodes)\n  });\n\n  if (loading) return null;\n  return (\n    <div>\n      <ApplicationAdminButtons rowData={rowData} setRowData={setRowData} refetch={refetch}/>\n      <ApplicationsGrid rowData={rowData}/>\n    </div>\n  );\n};\n\nexport default ApplicationAdmin;","/** @format */\n\nimport React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport DoneIcon from '@mui/icons-material/Done';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport { formatNumberGridNoDecimals } from '../../../functions/formattingFunctions';\n\nconst PeriodsGrid = ({ rowData }) => {\n\tconst columnDefs = React.useMemo(() => [\n\t\t{\n\t\t\tfield: 'periodNumber',\n\t\t},\n\t\t{\n\t\t\tfield: 'weekCommencingDate',\n\t\t\tvalueFormatter: (params) =>\n\t\t\t\tnew Date(params.value).toLocaleDateString('en-GB'),\n\t\t},\n\t\t{\n\t\t\tfield: 'weekEndingDate',\n\t\t\tvalueFormatter: (params) =>\n\t\t\t\tnew Date(params.value).toLocaleDateString('en-GB'),\n\t\t},\n\t\t{\n\t\t\tfield: 'year',\n\t\t},\n\t\t{\n\t\t\tfield: 'week',\n\t\t},\n\t\t{\n\t\t\tfield: 'worksValueCurrent',\n\t\t\tvalueFormatter: formatNumberGridNoDecimals,\n\t\t\ttype: 'numericColumn',\n\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\theaderName: 'Works Value',\n\t\t},\n\t\t{\n\t\t\tfield: 'current',\n\t\t\theaderClass: 'text-center',\n\t\t\tcellRenderer: (params) => {\n\t\t\t\treturn params.data.current === true ? (\n\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: 5 }}>\n\t\t\t\t\t\t<DoneIcon color='submit' />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: 5 }}>\n\t\t\t\t\t\t<ClearIcon color='error' />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\n\t\t{\n\t\t\tfield: 'closed',\n\t\t\theaderClass: 'text-center',\n\t\t\tcellRenderer: (params) => {\n\t\t\t\treturn params.data.closed === true ? (\n\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: 5 }}>\n\t\t\t\t\t\t<DoneIcon color='submit' />\n\t\t\t\t\t</div>\n\t\t\t\t) : (\n\t\t\t\t\t<div style={{ textAlign: 'center', marginTop: 5 }}>\n\t\t\t\t\t\t<ClearIcon color='error' />\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t},\n\t\t},\n\t]);\n\tconst defaultColDef = React.useMemo(\n\t\t() => ({\n\t\t\tfilter: true,\n\t\t\tsortable: true,\n\t\t\tresizable: true,\n\t\t\tflex: 1,\n\t\t}),\n\t\t[],\n\t);\n\treturn (\n\t\t<AgGridReact\n\t\t\tclassName='ag-theme-alpine'\n\t\t\tanimateRows='true'\n\t\t\tcolumnDefs={columnDefs}\n\t\t\tdefaultColDef={defaultColDef}\n\t\t\trowData={rowData}\n\t\t\tdomLayout='autoHeight'\n\t\t\tpagination={true}\n\t\t\tpaginationPageSize={20}\n\t\t\tsuppressRowClickSelection={true}\n\t\t/>\n\t);\n};\n\nexport default PeriodsGrid;\n","/** @format */\n\nimport React from 'react';\nimport { Button, Grid } from '@mui/material';\n\nconst PeriodAdminButtons = () => {\n\treturn (\n\t\t<Grid container={true} columns={4} mb={2}>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<Button>Button</Button>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<Button>Button</Button>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<Button>Button</Button>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={1}>\n\t\t\t\t<Button>Button</Button>\n\t\t\t</Grid>\n\t\t</Grid>\n\t);\n};\n\nexport default PeriodAdminButtons;\n","/** @format */\n\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_PERIODS_WITH_VALUES } from '../../../api-calls/queries/misc';\nimport PeriodsGrid from '../../grids/grids/PeriodsGrid';\nimport PeriodAdminButtons from './PeriodAdminButtons';\n\nconst PeriodAdmin = () => {\n\tconst [rowData, setRowData] = React.useState([]);\n\tconst { loading } = useQuery(GET_PERIODS_WITH_VALUES, {\n\t\tonCompleted: (data) => setRowData(data.periodWithValues.nodes),\n\t});\n\tif (loading) return null;\n\tconsole.log(rowData);\n\treturn (\n\t\t<div>\n\t\t\t<PeriodAdminButtons />\n\t\t\t<PeriodsGrid rowData={rowData} />\n\t\t</div>\n\t);\n};\n\nexport default PeriodAdmin;\n","/** @format */\n\nimport { useRoutes } from 'react-router-dom';\n\nimport React from 'react';\nimport ProjectAdmin from './projects/ProjectAdmin';\nimport DocumentAdmin from './documents/DocumentAdmin';\nimport ImportProjectDetails from './projects/ImportProjectDetails';\nimport ApplicationAdmin from \"./applications/ApplicationAdmin\";\nimport PeriodAdmin from \"./periods/PeriodAdmin\";\n\nconst AdminRoutes = () => {\n\treturn useRoutes([\n\t\t{\n\t\t\tpath: 'projects',\n\t\t\telement: <ProjectAdmin />,\n\t\t\tchildren: [\n\t\t\t\t{\n\t\t\t\t\tpath: 'import',\n\t\t\t\t\telement: <ImportProjectDetails />,\n\t\t\t\t},\n\t\t\t],\n\t\t},\n\t\t{\n\t\t\tpath: 'documents',\n\t\t\telement: <DocumentAdmin />,\n\t\t},\n\t\t{\n\t\t\tpath: 'applications',\n\t\t\telement: <ApplicationAdmin/>\n\t\t},\n\t\t{\n\t\t\tpath:'periods',\n\t\t\telement: <PeriodAdmin/>\n\t\t}\n\t]);\n};\n\nexport default AdminRoutes;\n","/** @format */\n\nimport React from 'react';\nimport { AgGridReact } from 'ag-grid-react';\nimport {\n\tformatNumberGridNoDecimals,\n\tformatNumberGridTwoDecimals,\n\tdivideIfNotZero,\n} from '../../../functions/formattingFunctions';\n\nconst ProjectsAvailableForApplication = ({ rowData }) => {\n\tconst [columnDefs, setColumnDefs] = React.useState([\n\t\t{\n\t\t\tfield: 'orderNumber',\n\t\t\theaderName: 'Project No',\n\t\t},\n\t\t{\n\t\t\tfield: 'projectTitle',\n\t\t\theaderName: 'Project Title',\n\t\t\tflex: 2,\n\t\t},\n\t\t{ field: 'area' },\n\t\t{\n\t\t\tfield: 'workType',\n\t\t\tflex: 1.5,\n\t\t},\n\t\t{\n\t\t\theaderName: 'Order Val',\n\t\t\tvalueGetter: (params) => Number(params.data.orderValueTotal),\n\t\t\tvalueFormatter: formatNumberGridNoDecimals,\n\t\t\ttype: 'numericColumn',\n\t\t\tfilter: 'agNumberColumnFilter',\n\t\t},\n\t\t{\n\t\t\theaderName: 'Done Val',\n\t\t\tvalueGetter: (params) => Number(params.data.orderValueTotalComplete),\n\t\t\tvalueFormatter: formatNumberGridNoDecimals,\n\t\t\ttype: 'numericColumn',\n\t\t\tfilter: 'agNumberColumnFilter',\n\t\t},\n\t\t{\n\t\t\theaderName: 'Applied Val',\n\t\t\tfield: 'orderValueTotalApplied',\n\t\t\tvalueFormatter: formatNumberGridNoDecimals,\n\t\t\ttype: 'numericColumn',\n\t\t\tfilter: 'agNumberColumnFilter',\n\t\t},\n\t\t{\n\t\t\theaderName: 'Value Available',\n\t\t\tvalueFormatter: formatNumberGridNoDecimals,\n\t\t\tvalueGetter: (params) =>\n\t\t\t\tparams.data.orderValueTotalComplete -\n\t\t\t\tparams.data.orderValueTotalApplied,\n\t\t\ttype: 'numericColumn',\n\t\t\tfilter: 'agNumberColumnFilter',\n\t\t\tcellStyle: { fontWeight: 'bold' },\n\t\t},\n\t\t{\n\t\t\theaderName: 'Locations',\n\t\t\tfield: 'locationCount',\n\t\t\ttype: 'numericColumn',\n\t\t\tfilter: 'agNumberColumnFilter',\n\t\t},\n\n\t\t{\n\t\t\theaderName: 'Items',\n\t\t\tfield: 'itemCount',\n\t\t\ttype: 'numericColumn',\n\t\t\tfilter: 'agNumberColumnFilter',\n\t\t},\n\t]);\n\n\tconst defaultColDef = React.useMemo(\n\t\t() => ({\n\t\t\tfilter: true,\n\t\t\tsortable: true,\n\t\t\tresizable: true,\n\t\t\tflex: 1,\n\t\t}),\n\t\t[],\n\t);\n\n\treturn (\n\t\t<AgGridReact\n\t\t\tclassName='ag-theme-alpine'\n\t\t\tanimateRows='true'\n\t\t\tcolumnDefs={columnDefs}\n\t\t\tdefaultColDef={defaultColDef}\n\t\t\trowData={rowData}\n\t\t\trowSelection='single'\n\t\t\t// ref={gridRef}\n\t\t\tdomLayout='autoHeight'\n\t\t\tenableCellChangeFlash={true}\n\t\t\tpagination={true}\n\t\t\tpaginationPageSize={20}\n\t\t\t// onSelectionChanged={onSelectionChanged}\n\t\t\tsuppressRowClickSelection={true}\n\t\t/>\n\t);\n};\n\nexport default ProjectsAvailableForApplication;\n","/** @format */\n\nimport React from 'react';\nimport ApplicationsGrid from '../grids/grids/ApplicationsGrid';\nimport { useQuery } from '@apollo/client';\nimport {\n\tGET_APPLICATION_HEADERS,\n\tGET_PROJECTS_AVAILABLE_FOR_APPLICATION,\n} from '../../api-calls/queries/applications';\nimport ProjectsAvailableForApplication from '../grids/grids/ProjectsAvailableForApplication';\nimport { Box } from '@mui/material';\n\nconst Applications = () => {\n\tconst [rowData, setRowData] = React.useState([]);\n\tconst [availableProjects, setAvailableProjects] = React.useState([]);\n\tconst { loading: headersLoading } = useQuery(GET_APPLICATION_HEADERS, {\n\t\tfetchPolicy: 'network-only',\n\t\tnotifyOnNetworkStatusChange: true,\n\t\tonCompleted: (data) =>\n\t\t\tsetRowData(data.applicationSummaryWithCumulativeValues.nodes),\n\t});\n\n\tconst { loading: availableProjectsLoading } = useQuery(\n\t\tGET_PROJECTS_AVAILABLE_FOR_APPLICATION,\n\t\t{\n\t\t\tonCompleted: (data) =>\n\t\t\t\tsetAvailableProjects(\n\t\t\t\t\tdata.wpmGraphqlGetOrdersAvailableForApplication.nodes,\n\t\t\t\t),\n\t\t},\n\t);\n\n\tif (headersLoading || availableProjectsLoading) return null;\n\treturn (\n\t\t<Box>\n\t\t\t<Box>\n\t\t\t\t<div className='grid-title'>APPLICATION LISTING</div>\n\t\t\t\t<ApplicationsGrid rowData={rowData} />\n\t\t\t</Box>\n\n\t\t\t<Box mt={2}>\n\t\t\t\t<div className='grid-title'>PROJECTS AVAILABLE FOR APPLICATION</div>\n\t\t\t\t<ProjectsAvailableForApplication rowData={availableProjects} />\n\t\t\t</Box>\n\t\t</Box>\n\t);\n};\n\nexport default Applications;\n","/** @format */\n\nimport {useRoutes} from 'react-router-dom';\nimport './App.css';\nimport Home from './components/home/Home';\nimport NavigationDrawer from './components/navigation/NavigationDrawer';\nimport ProjectProcessingRoutes from './components/projects/project-processing/ProjectProcessingRoutes';\nimport ProjectHeaders from './components/projects/ProjectHeaders';\nimport ComponentTests from './test-components/ComponentTests';\nimport Dashboard from './components/dashboard/Dashboard';\nimport AdminRoutes from './components/admin/AdminRoutes';\nimport Applications from \"./components/applications/Applications\";\n\nfunction App() {\n  return useRoutes([\n    {\n      path: '/',\n      element: <NavigationDrawer/>,\n      children: [\n        {\n          index: true,\n          element: <Home/>,\n        },\n        {\n          element: <ProjectHeaders/>,\n          path: 'projects',\n          exact: true,\n        },\n        {\n          element: <AdminRoutes/>,\n          path: 'admin/*',\n        },\n        {\n          element: <ProjectProcessingRoutes/>,\n          path: 'projects/processing/:id/*',\n        },\n        {\n          element: <Dashboard/>,\n          path: 'dashboard',\n        },\n        {\n          element: <ComponentTests/>,\n          path: 'testing',\n        },\n        {\n          element: <Applications/>,\n          path: 'applications'\n        }\n      ],\n    },\n  ])\n}\n\nexport default App;\n","import React from \"react\";\nimport {useInitial} from \"./useInitial\"\n\nconst ComponentPreviews = React.lazy(() => import(\"./previews\"));\n\nexport {\n    ComponentPreviews,\n    useInitial\n}","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({getCLS, getFID, getFCP, getLCP, getTTFB}) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","/** @format */\n\nimport {createTheme} from '@mui/material/styles';\n\nexport const theme = createTheme({\n\tpalette: {\n\t\ttype: 'light',\n\t\tprimary: {\n\t\t\tmain: '#22415e',\n\t\t},\n\t\tsecondary: {\n\t\t\tmain: '#737373',\n\t\t},\n\t\tdataTable: {\n\t\t\tmain: '#d5d5d5',\n\t\t},\n\t\taction: {\n\t\t\tmain: '#45152d',\n\t\t\t// light: '#862d59',\n\t\t\tcontrastText: '#fff',\n\t\t},\n\t\tcreate: {\n\t\t\tmain: '#052e2e',\n\t\t\tlight: '#015b5b',\n\t\t\tcontrastText: '#fff',\n\t\t},\n\t\tupdate: {\n\t\t\tmain: '#040E7C',\n\t\t\tlight: '#404ABF',\n\t\t\tcontrastText: '#fff',\n\t\t},\n\t\tdelete: {\n\t\t\tmain: '#730d1c',\n\t\t\tlight: '#b8142d',\n\t\t\tdark: '#66000d',\n\t\t\tcontrastText: '#fff',\n\t\t},\n\t\tnavigation: {\n\t\t\tmain: '#1B344B',\n\t\t\tlight: '#366896',\n\t\t\tdark: '#0b3458',\n\t\t\tcontrastText: '#fff',\n\t\t},\n\t\tcancel: {\n\t\t\tmain: '#404040',\n\t\t\tcontrastText: '#fff',\n\t\t},\n\t\tinfo: {\n\t\t\tmain: '#404040',\n\t\t},\n\t\tcontrasting: {\n\t\t\tmain: '#fff',\n\t\t},\n\t\tsubmit: {\n\t\t\tmain: '#006666',\n\t\t\tcontrastText: '#fff',\n\t\t},\n\t\tprint: {\n\t\t\tmain: '#4b0055',\n\t\t},\n\t\tbackground: {\n\t\t\tdefault: '#f5f5f5',\n\t\t},\n\t},\n\tcomponents: {\n\t\tMuiButton: {\n\t\t\tstyleOverrides: {\n\t\t\t\troot: {\n\t\t\t\t\tborderRadius: 10,\n\t\t\t\t\tfontWeight: 600,\n\t\t\t\t\ttextTransform: 'uppercase',\n\t\t\t\t\ttextDecorationLine: 'none',\n\t\t\t\t\ttextAlign: 'center',\n\t\t\t\t\tpadding: 2,\n\t\t\t\t\tborder: '5px solid',\n\t\t\t\t\t'&:disabled': {\n\t\t\t\t\t\tcursor: 'not-allowed',\n\t\t\t\t\t\tbackgroundColor: '#737373',\n\t\t\t\t\t\tcolor: '#b1b1b1',\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t\tdefaultProps: {\n\t\t\t\tvariant: 'contained',\n\t\t\t\tfullWidth: true,\n\t\t\t},\n\t\t},\n\t\tMuiTextField: {\n\t\t\tdefaultProps: {\n\t\t\t\tvariant: 'outlined',\n\t\t\t\tsize: 'small',\n\t\t\t},\n\t\t},\n\n\t\t/* MuiDataGrid: {\n            styleOverrides: {\n                root: {\n                     '& .MuiDataGrid-row:nth-of-type(odd)': {\n                        backgroundColor: '#f2f2f2',\n                    },\n                    '& .MuiDataGrid-row:nth-of-type(even)': {\n                        backgroundColor: '#e6e6e6',\n                    },\n                    '& .MuiDataGrid-columnHeaders': {\n                        color: 'white',\n                        backgroundColor: '#4e667e',\n                    },\n                },\n            },\n        }, */\n\t},\n\tprops: {\n\t\tMuiList: {\n\t\t\tdense: true,\n\t\t},\n\t\tMuiMenuItem: {\n\t\t\tdense: true,\n\t\t},\n\t\tMuiTable: {\n\t\t\tsize: 'small',\n\t\t},\n\t\tMuiAppBar: {\n\t\t\tcolor: 'inherit',\n\t\t},\n\t},\n\n\ttypography: {\n\t\tfontFamily: 'Arial',\n\t},\n});\n","/** @format */\n\nimport { ApolloClient, ApolloLink, ApolloProvider } from '@apollo/client';\nimport { onError } from 'apollo-link-error';\nimport { createUploadLink } from 'apollo-upload-client';\nimport { ThemeProvider } from '@mui/material/styles';\nimport { DevSupport } from '@react-buddy/ide-toolbox';\nimport 'ag-grid-community/dist/styles/ag-grid.css';\nimport 'ag-grid-community/dist/styles/ag-theme-alpine.css';\nimport 'ag-grid-community/dist/styles/ag-theme-material.css';\n\nimport { LocalStorageWrapper, persistCache } from 'apollo3-cache-persist';\nimport { ConfirmProvider } from 'material-ui-confirm';\nimport React from 'react';\nimport { positions, Provider as AlertProvider } from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport ReactDOM from 'react-dom/client';\nimport 'react-image-gallery/styles/css/image-gallery.css';\nimport { ModalProvider } from 'react-modal-hook';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport { cache } from './cache';\nimport { ComponentPreviews, useInitial } from './dev';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport { theme } from './theme';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nconst options = {\n\ttimeout: 3000,\n\tposition: positions.MIDDLE,\n};\n\npersistCache({\n\tcache,\n\tstorage: new LocalStorageWrapper(window.localStorage),\n});\n\nexport const client = new ApolloClient({\n\tlink: ApolloLink.from([\n\t\tonError(({ graphQLErrors, networkError }) => {\n\t\t\tif (graphQLErrors)\n\t\t\t\tgraphQLErrors.map(({ message, locations, path }) =>\n\t\t\t\t\tconsole.log(\n\t\t\t\t\t\t`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n\t\t\t\t\t),\n\t\t\t\t);\n\t\t\tif (networkError) console.log(`[Network error]: ${networkError}`);\n\t\t}),\n\t\tcreateUploadLink({\n\t\t\turi: `${process.env.REACT_APP_API_ENDPOINT}/graphql`,\n\t\t}),\n\t]),\n\tcache,\n});\n\nroot.render(\n\t<React.StrictMode>\n\t\t<Router>\n\t\t\t<ApolloProvider client={client}>\n\t\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t\t<DevSupport\n\t\t\t\t\t\tComponentPreviews={ComponentPreviews}\n\t\t\t\t\t\tuseInitialHook={useInitial}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ConfirmProvider\n\t\t\t\t\t\t\tdefaultOptions={{\n\t\t\t\t\t\t\t\tconfirmationButtonProps: { autoFocus: true },\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ModalProvider>\n\t\t\t\t\t\t\t\t<AlertProvider template={AlertTemplate} {...options}>\n\t\t\t\t\t\t\t\t\t<App />\n\t\t\t\t\t\t\t\t</AlertProvider>\n\t\t\t\t\t\t\t</ModalProvider>\n\t\t\t\t\t\t</ConfirmProvider>\n\t\t\t\t\t</DevSupport>\n\t\t\t\t</ThemeProvider>\n\t\t\t</ApolloProvider>\n\t\t</Router>\n\t</React.StrictMode>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/** @format */\n\nimport {useState} from 'react';\n\nexport const useInitial = () => {\n\tconst [status] = useState({\n\t\tloading: false,\n\t\terror: false,\n\t});\n\t/*\n      Implement hook functionality here.\n      If you need to execute async operation, set loading to true and when it's over, set loading to false.\n      If you caught some errors, set error status to true.\n      Initial hook is considered to be successfully completed if it will return {loading: false, error: false}.\n    */\n\treturn status;\n};\n"],"sourceRoot":""}